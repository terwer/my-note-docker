@use "sass:math";
@use "../common" as *;
@use "../component/list";
@use "top-bar";

$item-type: "base";
$w: get($component-size, "exsmall");
$btn-w: get($component-size, "small");

//页签栏
.layout-tab-bar {
  background-color: get($bg, "page", 1);

  .layout__center & {
    &:not(:empty) {
      @include component-base($item-type);
      margin: 8px 8px 0px;
    }
  }

  &--readonly {
    margin-left: 0 !important;
    min-width: $btn-w * 2 + $fn-space;
  }

  .item {
    @include item-tran("page");
    @include component-base($item-type);
    min-height: 0;
    padding: 0 $interval;
    flex: unset;

    > .fn__flex-1,
    &::after {
      display: none;
    }

    &:not(:first-child) {
      margin-left: $fn-space;
    }

    &__icon {
      @include emoji-icon($w, 12px, get($icon, "base"));
    }

    &__graphic {
      @include svg($w, get($icon, "small"), $important: true);
      min-width: $w;
    }

    &__text {
      min-width: 64px;
      @include v-center(get($component-size, $item-type));
    }

    &__close {
      @include item-tran("component");
      @include component-base("exsmall");
      @include svg-div($w, 10px);
      border-radius: get($radius, "small");

      svg {
        opacity: 0.3;
        background-color: transparent !important;
      }

      &:hover svg {
        opacity: 0.6;
      }
    }

    &--pin {
      background-color: get($bg, "component", 1);
      min-width: unset;
    }

    &--focus {
      @include color("focus");
      @include item-unchange("focus");

      .item__graphic {
        @include color("focus");
      }

      > .item__text {
        @include color("focus", true);
      }

      .item__close {
        @include item-tran("focus");
        svg {
          @include color("focus");
        }
      }
    }

    &--readonly {
      @include item-unchange("page");
      padding: 0;
      cursor: unset;

      > .fn__flex-1 {
        display: flex;
      }

      .item__close {
        @include icon-btn("page", $btn-w, 12px, true);
        cursor: pointer;

        &[data-type="more"] {
          @include svg-div($btn-w, 10px, $important: true);
        }
      }
    }
  }
}

@keyframes item-w {
  from {
    max-width: 0;
  }
  to {
    max-width: 138px;
  }
}

.layout__center {
  $item-h: 32px;
  $item-pad: 8px;

  @mixin divide($h, $left) {
    $tmph: 24px;
    &::before {
      content: "";
      display: block;
      position: absolute;
      left: $left;
      top: math.div($h - $tmph, 2);
      height: $tmph;
      border-left: $fn-border-2;
    }
  }

  [data-type="wnd"] > .fn__flex:first-child {
    @include divide(top-bar.$bar-h, -4px);
    height: top-bar.$bar-h;
    position: fixed;
    top: 0;

    z-index: 1;

    left: 380px;
    right: 160px;

    body.body--win32 & {
      left: 290px;
      right: 300px;
    }
  }

  // 解决分屏
  &:has(.layout__resize--lr) {
    // 分屏后左侧页签栏
    > .fn__flex:first-child > [data-type="wnd"] > .fn__flex:first-child {
      right: 50vw;
    }
    > .layout__resize--lr + .fn__flex {
      // 分屏后右侧页签栏
      > [data-type="wnd"] > .fn__flex:first-child {
        left: 50vw;
      }
      // 分屏后右侧聚焦窗口页签栏
      > [data-type="wnd"].layout__wnd--active {
        > .fn__flex:first-child {
          z-index: 2;
        }
      }
    }
  }

  // 解决拖拽
  // .item {
  //   -webkit-app-region: no-drag;
  //   &--readonly {
  //     -webkit-app-region: drag;
  //     .item__close {
  //       -webkit-app-region: no-drag;
  //     }
  //   }
  // }

  .layout-tab-bar {
    height: top-bar.$bar-h !important;
    background-color: get($bg, "base", 1);
    margin: 0 !important;
    padding: 0 4px;

    &--readonly {
      min-width: $btn-w * 2 + $fn-space * 3 + $interval * 2 + 2px;
      -webkit-app-region: drag;
    }

    .item {
      @include item-tran("base", $important: true);
      animation: item-w get($transition-duration, "base")
        get($transition-function, "ease-in-out");
      height: $item-h;
      position: relative;
      padding: 0 $item-pad;
      overflow: unset;

      &:not(:first-child) {
        @include divide($item-h, -4px);
      }

      &__icon {
        @include emoji-icon($w, 13px, get($icon, "medium"));
      }

      &__graphic {
        @include svg($w, get($icon, "base"), $important: true);
      }

      &__text {
        min-width: 86px;
        max-width: 180px;
        padding: 0 $item-pad;
      }

      &__close {
        @include item-tran("base", 2);
      }

      &--pin {
        background-color: get($bg, "base", 1);
      }

      &--focus {
        @include item-unchange("page", $important: true);
        box-shadow: get($shadow, 0) !important;

        .item__graphic {
          @include color("primary");
        }

        > .item__text {
          @include color("primary", true);
        }

        .item__close {
          @include item-tran("page");
          svg {
            @include color("primary");
          }
        }

        &::before {
          display: none !important;
        }
        + .item {
          &::before {
            display: none;
          }
        }
      }

      &--readonly {
        @include item-unchange("base", $important: true);
        height: 24px;
        margin: 8px 0;
        padding: 0 8px;
        border-left: $fn-border-2;
        border-right: $fn-border-2;
        border-radius: unset;

        &::before {
          display: none;
        }

        .item__close {
          @include item("base", $important: true);
          -webkit-app-region: no-drag;
        }
      }
    }
  }
}
