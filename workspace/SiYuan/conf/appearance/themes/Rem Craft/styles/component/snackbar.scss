
@use "sass:math";
@use "../common" as *;

$icon-w: 16px;
$pad-tb: 12px;
$pad-lr: 16px;
$text-h: get($component-size, "base") - 4px * 2;
$com-shadow: get($shadow, 2);

//通知弹窗
.b3-snackbars {
  // 提示信息
  .b3-snackbar {
    &__content {
      @include component();
      height: auto;
      position: relative;
      color: get($text, "primary");
      border-radius: get($radius, "medium");
      box-shadow: $com-shadow;
      background-color: get($bg, "page", 1);
      padding: $pad-tb $pad-lr;
      padding-left: $pad-lr + $icon-w + 12px;

      // 提示种类图标
      &::before {
        content: "";
        display: block;
        position: absolute;
        left: $pad-lr;
        top: math.div($pad-tb * 2 + $text-h - $icon-w, 2);
        width: $icon-w;
        height: $icon-w;
        @include add-icon("info", get($color, "info", "base"), 24, "round");
      }

      a {
        color: get($text, "focus");
        white-space: normal;
      }

      .fn__space {
        width: $interval;
      }
    }

    // 提示关闭按钮
    &__close {
      display: none;
    }

    $feat-types: "warning", "error", "success", "info";
    @each $type in $feat-types {
      &--#{$type} {
        .b3-snackbar__content::before {
          $type-color: get($color, $type, "base");
          @include add-icon($type, $type-color, 24, "round");
        }
      }
    }
  }

  // 提示内按钮
  .b3-button {
    @include item-focus();
    @include component("small");
  }

  // 全部已读按钮
  > .b3-button {
    @include component();
    @include item-primary();
    box-shadow: $com-shadow;

    svg,
    &::before {
      display: none;
    }

    &::after {
      @include reset-style();
      position: unset;
      display: block;
      content: "全部已读";
      color: get($text, "anti");
    }
  }
}
