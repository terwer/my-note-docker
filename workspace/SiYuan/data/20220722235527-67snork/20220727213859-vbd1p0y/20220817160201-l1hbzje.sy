{
	"ID": "20220817160201-l1hbzje",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16596225",
		"custom-conf-post-id": "9240577",
		"custom-desc": "vite使用nodejs内置的模块问题背景vite是一个新工具有助于快速启动和简化前端javascript开发。vite相对于parcel等其他解决方案的主要优势是速度更快并将编译限制为对依赖项的一次性操作保持源代码不受影响（如果您不需要因为jsx或typescript）。vite下一代前端工具它由两个主要部分组成_一个通过原生es模块为您的源文件提供服务的开发服务器具有丰富的内置功能和惊人的快速热模块替换(hmr)。一个构建命令将您的代码与rollup捆绑在一起预先配置为输出高度优化的静态资产以用于生产",
		"custom-jvue-post-id": "7994",
		"custom-metaweblog-test1-post-id": "15",
		"custom-slug": "vite-uses-nodejs-built-in-modules-z12udha",
		"custom-vuepress-slug": "docs/002.前端开发/018.vite使用nodeJS内置的模块.md",
		"custom-wordpress-post-id": "4119",
		"id": "20220817160201-l1hbzje",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20220817161631-kjhzl43\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20220817160245-9cssfnl\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:0}",
		"tags": "内置,模块,vite,node,nodejs,fetch,node-fetch",
		"title": "vite使用nodeJS内置的模块",
		"updated": "20220818141254"
	},
	"Children": [
		{
			"ID": "20220817161631-kjhzl43",
			"Type": "NodeWidget",
			"Data": "\u003ciframe src=\"/widgets/sy-post-publisher\" data-src=\"/widgets/sy-post-publisher\" data-subtype=\"widget\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"width: 1168px; height: 438px;\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20220817161631-kjhzl43",
				"style": "text-align: left;",
				"updated": "20220817161631"
			}
		},
		{
			"ID": "20220817160359-mq0aidl",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220817160359-mq0aidl",
				"updated": "20220817160410"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题背景"
				}
			]
		},
		{
			"ID": "20220817160351-sj9uk4q",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-sj9uk4q",
				"updated": "20220818141254"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Vite 是一个新的工具，有助于快速启动和简化前端 Javascript 开发。 Vite 相对于 Parcel 等其他解决方案的主要优势是速度更快，并将编译限制为对依赖项的一次性操作，保持源代码不受影响（如果您不需要，因为 JSX 或 typescript）。"
				}
			]
		},
		{
			"ID": "20220817160351-019lb1d",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-019lb1d",
				"updated": "20220817160514"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "strong",
					"TextMarkTextContent": "vite-下一代前端工具"
				}
			]
		},
		{
			"ID": "20220817160452-wju6vn6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160452-wju6vn6"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "它由两个主要部分组成："
				}
			]
		},
		{
			"ID": "20220817160351-6rcbru1",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220817160351-6rcbru1",
				"updated": "20220817160506"
			},
			"Children": [
				{
					"ID": "20220817160506-2yjgn10",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220817160506-2yjgn10",
						"updated": "20220817160506"
					},
					"Children": [
						{
							"ID": "20220817160506-pso2wdw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220817160506-pso2wdw",
								"updated": "20220817160506"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个通过原生 ES 模块为您的源文件提供服务的开发服务器，具有丰富的内置功能和惊人的快速热模块替换 (HMR)。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220817160505-p9zjpte",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20220817160505-p9zjpte",
				"updated": "20220817160509"
			},
			"Children": [
				{
					"ID": "20220817160509-nnvg48p",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20220817160509-nnvg48p",
						"updated": "20220817160509"
					},
					"Children": [
						{
							"ID": "20220817160509-3jngyp5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20220817160509-3jngyp5",
								"updated": "20220817160509"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个构建命令，将您的代码与 Rollup 捆绑在一起，预先配置为输出高度优化的静态资产以用于生产。\n它与 Snowpack 非常相似，并且这两个项目具有相同的好处。"
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20220817160351-btsg5os",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-btsg5os",
				"updated": "20220817160351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Snowpack 在开发阶段和生产捆绑使用 Rollup，而 Vite 在开发阶段使用 Esbuild，而 Rollup 仅用于生产构建。最终目标是在最新版本达到与 Rollup 相同的功能级别时，用性能更高的 Esbuild 完全替换 Rollup。"
				}
			]
		},
		{
			"ID": "20220817160548-gydt3ep",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220817160548-gydt3ep",
				"updated": "20220817160552"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题引入"
				}
			]
		},
		{
			"ID": "20220817160351-trbld19",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-trbld19",
				"updated": "20220817160351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "我在项目中使用 Vite 时发现的一个问题是如何为浏览器填充 Node.js 内置模块。"
				}
			]
		},
		{
			"ID": "20220817160351-pd93yt2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-pd93yt2",
				"updated": "20220817160603"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"Properties": {
						"style": "color: var(--b3-font-color7);"
					},
					"TextMarkType": "strong",
					"TextMarkTextContent": "不鼓励在浏览器项目中使用 Node.js 内置和全局变量（es util 或 process），但有时您需要使用一些依赖包来使用它们。"
				},
				{
					"Type": "NodeKramdownSpanIAL",
					"Data": "{: style=\"color: var(--b3-font-color7);\"}"
				}
			]
		},
		{
			"ID": "20220817160351-w19z3d1",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-w19z3d1",
				"updated": "20220817160351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "为了让这些包在浏览器上运行，你通常会添加一些 polyfill 来帮助你模仿这些缺失的包。"
				}
			]
		},
		{
			"ID": "20220817160351-3nt2xcs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-3nt2xcs",
				"updated": "20220817160351"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "Snowpack 会自动将这些 polyfills 添加到所需的 Rollup 插件中，但在 Vite 中，我必须编写一些配置。"
				}
			]
		},
		{
			"ID": "20220817160351-ln1zld0",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160351-ln1zld0",
				"updated": "20220817160655"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这是 Vite 配置文件："
				},
				{
					"Type": "NodeTextMark",
					"TextMarkType": "code",
					"TextMarkTextContent": "vite.config.js"
				}
			]
		},
		{
			"ID": "20220817161144-wtz5nqe",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220817161144-wtz5nqe",
				"updated": "20220817161234"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "import {defineConfig} from 'vite'\nimport {loadEnv} from \"vite\";\nimport vue from '@vitejs/plugin-vue'\nimport vitePluginRequireTransform from 'vite-plugin-require-transform';\n// yarn add --dev @esbuild-plugins/node-globals-polyfill\nimport {NodeGlobalsPolyfillPlugin} from '@esbuild-plugins/node-globals-polyfill'\n// yarn add --dev @esbuild-plugins/node-modules-polyfill\nimport {NodeModulesPolyfillPlugin} from '@esbuild-plugins/node-modules-polyfill'\n// You don't need to add this to deps, it's included by @esbuild-plugins/node-modules-polyfill\nimport rollupNodePolyFill from 'rollup-plugin-node-polyfills'\n\n// https://vitejs.dev/config/\nexport default defineConfig(({mode}) =\u003e {\n    const env = loadEnv(mode, process.cwd())\n\n    const processEnvValues = {\n        'process.env': Object.entries(env).reduce(\n            (prev, [key, val]) =\u003e {\n                return {\n                    ...prev,\n                    [key]: val,\n                }\n            },\n            {},\n        )\n    }\n\n    return {\n        plugins: [\n            vue(),\n            // https://github.com/WarrenJones/vite-plugin-require-transform/issues/10\n            // @ts-ignore\n            vitePluginRequireTransform.default({\n                fileRegex: /.ts$|.vue$/\n            }),\n        ],\n        base: './',\n        // https://github.com/vitejs/vite/issues/1930\n        // https://vitejs.dev/guide/env-and-mode.html#env-files\n        // 在这里自定义变量\n        define: Object.assign(processEnvValues, {}),\n        resolve: {\n            alias: {\n                'vue-i18n': 'vue-i18n/dist/vue-i18n.cjs.js',\n                'node-fetch': 'isomorphic-fetch',\n                // This Rollup aliases are extracted from @esbuild-plugins/node-modules-polyfill,\n                // see https://github.com/remorses/esbuild-plugins/blob/master/node-modules-polyfill/src/polyfills.ts\n                // process and buffer are excluded because already managed\n                // by node-globals-polyfill\n                util: 'rollup-plugin-node-polyfills/polyfills/util',\n                sys: 'util',\n                events: 'rollup-plugin-node-polyfills/polyfills/events',\n                stream: 'rollup-plugin-node-polyfills/polyfills/stream',\n                path: 'rollup-plugin-node-polyfills/polyfills/path',\n                querystring: 'rollup-plugin-node-polyfills/polyfills/qs',\n                punycode: 'rollup-plugin-node-polyfills/polyfills/punycode',\n                url: 'rollup-plugin-node-polyfills/polyfills/url',\n                string_decoder: 'rollup-plugin-node-polyfills/polyfills/string-decoder',\n                http: 'rollup-plugin-node-polyfills/polyfills/http',\n                https: 'rollup-plugin-node-polyfills/polyfills/http',\n                os: 'rollup-plugin-node-polyfills/polyfills/os',\n                assert: 'rollup-plugin-node-polyfills/polyfills/assert',\n                constants: 'rollup-plugin-node-polyfills/polyfills/constants',\n                _stream_duplex: 'rollup-plugin-node-polyfills/polyfills/readable-stream/duplex',\n                _stream_passthrough: 'rollup-plugin-node-polyfills/polyfills/readable-stream/passthrough',\n                _stream_readable: 'rollup-plugin-node-polyfills/polyfills/readable-stream/readable',\n                _stream_writable: 'rollup-plugin-node-polyfills/polyfills/readable-stream/writable',\n                _stream_transform: 'rollup-plugin-node-polyfills/polyfills/readable-stream/transform',\n                timers: 'rollup-plugin-node-polyfills/polyfills/timers',\n                console: 'rollup-plugin-node-polyfills/polyfills/console',\n                vm: 'rollup-plugin-node-polyfills/polyfills/vm',\n                zlib: 'rollup-plugin-node-polyfills/polyfills/zlib',\n                tty: 'rollup-plugin-node-polyfills/polyfills/tty',\n                domain: 'rollup-plugin-node-polyfills/polyfills/domain',\n                buffer: 'rollup-plugin-node-polyfills/polyfills/buffer-es6', // add buffer\n                process: 'rollup-plugin-node-polyfills/polyfills/process-es6', // add process\n            },\n        },\n        optimizeDeps: {\n            esbuildOptions: {\n                // Node.js global to browser globalThis\n                define: {\n                    global: 'globalThis'\n                },\n                // Enable esbuild polyfill plugins\n                plugins: [\n                    NodeGlobalsPolyfillPlugin({\n                        process: true,\n                        buffer: true\n                    }),\n                    NodeModulesPolyfillPlugin()\n                ]\n            }\n        },\n        build: {\n            // 不压缩，用于调试\n            minify: false,\n            rollupOptions: {\n                plugins: [\n                    // Enable rollup polyfills plugin\n                    // used during production bundling\n                    rollupNodePolyFill()\n                ]\n            }\n        }\n    }\n})\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220817161134-7j7ih04",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817161134-7j7ih04",
				"updated": "20220817161134"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如您所见，我为 Esbuild 添加了两个 polyfill 模块（它们正在大量开发中）。\n然后我将 Rollup 配置为在生产捆绑期间应用相同的 polyfill。"
				}
			]
		},
		{
			"ID": "20220817161134-9lzxtny",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817161134-9lzxtny",
				"updated": "20220817161134"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "这对我的项目有用，希望这也能帮助你并抽出一些时间。"
				}
			]
		},
		{
			"ID": "20220817160201-5jrf31s",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220817160201-5jrf31s",
				"updated": "20220817160224"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "参考"
				}
			]
		},
		{
			"ID": "20220817160224-lm2q3jp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160224-lm2q3jp",
				"updated": "20220817160227"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://medium.com/@ftaioli/using-node-js-builtin-modules-with-vite-6194737c2cd2",
					"TextMarkTextContent": "https://medium.com/@ftaioli/using-node-js-builtin-modules-with-vite-6194737c2cd2"
				}
			]
		},
		{
			"ID": "20220817160241-r5t4ko3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160241-r5t4ko3",
				"updated": "20220817160245"
			},
			"Children": [
				{
					"Type": "NodeTextMark",
					"TextMarkType": "a",
					"TextMarkAHref": "https://github.com/vitejs/vite/issues/9511",
					"TextMarkTextContent": "https://github.com/vitejs/vite/issues/9511"
				}
			]
		},
		{
			"ID": "20220817160245-9cssfnl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220817160245-9cssfnl"
			}
		}
	]
}