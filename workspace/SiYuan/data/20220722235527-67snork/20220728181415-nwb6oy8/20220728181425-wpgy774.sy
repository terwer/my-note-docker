{
	"ID": "20220728181425-wpgy774",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20220728181425-wpgy774",
		"title": "定义和监听属性",
		"updated": "20220729224938"
	},
	"Children": [
		{
			"ID": "20220729224938-cgt9w9s",
			"Type": "NodeWidget",
			"Data": "\u003ciframe src=\"/widgets/sy-post-publisher\" data-src=\"/widgets/sy-post-publisher\" data-subtype=\"widget\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20220729224938-cgt9w9s",
				"style": "text-align: left;",
				"updated": "20220729224938"
			}
		},
		{
			"ID": "20220728181425-ojeb0mj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220728181425-ojeb0mj",
				"updated": "20220728181501"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "\u003cscript type=\"ts\" setup\u003e\nconst props = defineProps({\n  isReload: {\n    type: Boolean,\n    default: false\n  }\n})\n/*监听props*/\nwatch(() =\u003e props.isReload, /**/(oldValue, newValue) =\u003e {\n  //Here you can add you functionality\n  // as described in the name you will get old and new value of watched property\n})\n\u003c/script\u003e\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		}
	]
}