{
	"ID": "20220801234427-cdr8vqg",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-desc": "nextjs组件使用泛型类型传递异步数据定义类型typepageprops={hello_stringpage_anyrandom_any}返回属性https_githubcomvercelnextjsblobcanaryexamplescmswordpresspagesindexjsexportconstgetstaticprops_getstaticprops{constpageid=vtfmdmletpage=awaitgetpage(pageid)if(!page){page={}}return{",
		"custom-metaweblog-test1-post-id": "44",
		"custom-slug": "nextjs-component-uses-generic-types-to-transfer-asynchronous-data-sirk9",
		"custom-vuepress-slug": "docs/002.前端开发/015.Next-js组件使用泛型类型传递异步数据.md",
		"id": "20220801234427-cdr8vqg",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20220801234637-yr15fo6\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20220801234604-uklte6f\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:0,\u0026amp;quot;focusId\u0026amp;quot;:\u0026amp;quot;20220801234637-yr15fo6\u0026amp;quot;,\u0026amp;quot;focusStart\u0026amp;quot;:0,\u0026amp;quot;focusEnd\u0026amp;quot;:0}",
		"tags": "使用,类型,组件,传递,异步",
		"title": "Next-js组件使用泛型类型传递异步数据",
		"updated": "20220801234733"
	},
	"Children": [
		{
			"ID": "20220801234637-yr15fo6",
			"Type": "NodeWidget",
			"Data": "\u003ciframe src=\"/widgets/sy-post-publisher\" data-src=\"/widgets/sy-post-publisher\" data-subtype=\"widget\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20220801234637-yr15fo6",
				"style": "text-align: left;",
				"updated": "20220801234637"
			}
		},
		{
			"ID": "20220801234427-ewvora9",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220801234427-ewvora9",
				"updated": "20220801234607"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义类型"
				}
			]
		},
		{
			"ID": "20220801234443-7x6rk2f",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220801234443-7x6rk2f",
				"updated": "20220801234520"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "type PageProps = {\n    hello: string,\n    page: any,\n    random: any\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220801234447-fg7urb4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220801234447-fg7urb4",
				"updated": "20220801234455"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "返回属性"
				}
			]
		},
		{
			"ID": "20220801234455-lhnbzh5",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220801234455-lhnbzh5",
				"updated": "20220801234516"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// https://github.com/vercel/next.js/blob/canary/examples/cms-wordpress/pages/index.js\nexport const getStaticProps: GetStaticProps\u003cPageProps\u003e = async (context) =\u003e {\n    const pageId = \"20220718142548-vtf8mdm\"\n\n    let page = await getPage(pageId)\n    if (!page) {\n        page = {}\n    }\n    return {\n        props: {\n            hello: 'world',\n            page: page,\n            random: Math.random()\n        }\n    }\n}\n\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220801234521-uoha08j",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220801234521-uoha08j",
				"updated": "20220801234523"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用"
				}
			]
		},
		{
			"ID": "20220801234524-5ya8d71",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220801234524-5ya8d71",
				"updated": "20220801234600"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "const Home: NextPage\u003cPageProps\u003e = (props, context) =\u003e {\n    return (\n      \u003cp\u003e{JSON.stringify(props.page)}\u003c/p\u003e\n    )\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220801234604-uklte6f",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220801234604-uklte6f"
			}
		}
	]
}