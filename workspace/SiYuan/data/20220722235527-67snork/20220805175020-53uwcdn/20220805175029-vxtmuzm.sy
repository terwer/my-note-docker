{
	"ID": "20220805175029-vxtmuzm",
	"Type": "NodeDocument",
	"Properties": {
		"custom-desc": "从零开始使用react写一个随机变色的标签组件标签定义及引用color_设置标签颜色visible_标签是否显示trueclosable_标签是否可以关闭（点击默认关闭）falseonclose_关闭会调icon_iconimportreact{usestate}fromreact_importclassnamesfromclassnames_interfaceipropstag{color?_string_visbile?_boolean_closable?_boolean_onclose?_()=ic",
		"custom-metaweblog-test1-post-id": "40",
		"custom-slug": "use-react-to-write-a-random-color-changing-label-component-from-scratch-1ekdsl",
		"custom-vuepress-slug": "docs/002.前端开发/016.从零开始使用react写一个随机变色的标签组件.md",
		"id": "20220805175029-vxtmuzm",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20220805175412-zvsokwj\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20220805175306-7715030\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:18,\u0026amp;quot;focusId\u0026amp;quot;:\u0026amp;quot;20220805175412-zvsokwj\u0026amp;quot;,\u0026amp;quot;focusStart\u0026amp;quot;:0,\u0026amp;quot;focusEnd\u0026amp;quot;:0}",
		"tags": "标签,关闭,定义,是否,从零开始",
		"title": "从零开始使用react写一个随机变色的标签组件",
		"updated": "20220805175412"
	},
	"Children": [
		{
			"ID": "20220805175412-zvsokwj",
			"Type": "NodeWidget",
			"Data": "\u003ciframe src=\"/widgets/sy-post-publisher\" data-src=\"/widgets/sy-post-publisher\" data-subtype=\"widget\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\" style=\"width: 1277px; height: 483px;\"\u003e\u003c/iframe\u003e",
			"Properties": {
				"id": "20220805175412-zvsokwj",
				"style": "text-align: left;",
				"updated": "20220805175412"
			}
		},
		{
			"ID": "20220805175029-eckv6xh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220805175029-eckv6xh",
				"updated": "20220805175108"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标签定义及引用"
				}
			]
		},
		{
			"ID": "20220805175108-mfnbtaa",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220805175108-mfnbtaa",
				"updated": "20220805175116"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "/**\n *\n *  color: 设置标签颜色\n *  visible: 标签是否显示  true\n *  closable： 标签是否可以关闭（点击默认关闭） false\n *  onClose: 关闭会调\n *  icon: Icon\n */\nimport React, {useState} from 'react';\nimport classnames from 'classnames';\n\ninterface IPropsTag {\n    color?: string;\n    visbile?: boolean;\n    closable?: boolean;\n    onClose?: () =\u003e void;\n    icon?: React.ReactNode;\n    children?: any\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220805175118-awkl26m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220805175118-awkl26m",
				"updated": "20220805175138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "定义标签接口并且引入相关依赖"
				}
			]
		},
		{
			"ID": "20220805175127-1gr47fc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220805175127-1gr47fc",
				"updated": "20220805175157"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标签实现"
				}
			]
		},
		{
			"ID": "20220805175157-e3bvwyc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220805175157-e3bvwyc",
				"updated": "20220805175201"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "export const Tag: React.FC\u003cIPropsTag\u003e = (props) =\u003e {\n\n    const {color, visbile = true, closable = false, onClose, icon} = props;\n\n    const [showTag, setShowTag] = useState(visbile);\n\n    const handleClose = () =\u003e {\n        onClose \u0026\u0026 onClose();\n        setShowTag(false);\n    };\n\n    return (\n        \u003cdiv\n            className={classnames(tagStyles.OwnTag, color ? tagStyles.hasuserColor : '')}\n            style={{\n                display: !showTag ? 'none' : 'visible',\n                color: '#333333',\n                backgroundColor: color,\n            }}\n        \u003e\n            {icon \u0026\u0026 \u003cspan style={{marginRight: 4}}\u003e{icon}\u003c/span\u003e}\n            \u003cspan className={tagStyles.TagTextOwn}\u003e{props.children}\u003c/span\u003e\n            {closable \u0026\u0026 (\n                \u003cspan className={tagStyles.closeBtn} onClick={handleClose}\u003e\n          x\n        \u003c/span\u003e\n            )}\n        \u003c/div\u003e\n    );\n};\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220805175202-dypcrje",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220805175202-dypcrje",
				"updated": "20220805175208"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实现标签组件"
				}
			]
		},
		{
			"ID": "20220805175212-m46h9tp",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220805175212-m46h9tp",
				"updated": "20220805175216"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "样式"
				}
			]
		},
		{
			"ID": "20220805175216-l4p32lk",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220805175216-l4p32lk",
				"updated": "20220805175237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Y3Nz"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": ".tagBox{\n    margin-bottom: 10px;\n}\n\n.OwnTag {\n    margin: 4px 16px 4px 0;\n    padding: 0 4px;\n    border-radius: 4px;\n    cursor: default;\n    display: inline-block;\n    font-size: 14px;\n    line-height: 20px;\n    white-space: nowrap;\n    background-color: #fafafa;\n    border: 1px solid #d9d9d9;\n}\n.hasuserColor {\n    color: #fff;\n    background-color: transparent;\n}\n.TagTextOwn {\n    font-weight: 600;\n}\n.closeBtnWhite {\n    margin-left: 4px;\n    color: rgba(255, 255, 255, 0.8);\n    cursor: pointer;\n}\n.closeBtn {\n    margin-left: 4px;\n    color: rgba(0, 0, 0, 0.8);\n    cursor: pointer;\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220805175238-63xcm1x",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220805175238-63xcm1x",
				"updated": "20220805175241"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "标签使用"
				}
			]
		},
		{
			"ID": "20220805175242-0w6klik",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220805175242-0w6klik",
				"updated": "20220805175301"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "dHM="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "export default function DefaultPostTags({tagstr}: { tagstr: string }) {\n    const tags = tagstr.split(\",\")\n    const colors = [\"#cce7e0\", \"#dbdcf4\", \"#fcf4cc\", \"#fbd2d4\"]\n\n    return (\n        \u003cdiv className={tagStyles.tagBox}\u003e\n            {\n                tags.map((tag) =\u003e {\n                    const randomColor = colors[Math.floor(Math.random() * colors.length)];\n\n                    return \u003cTag key={tag} color={randomColor} closable={false}\u003e\n                        {tag}\n                    \u003c/Tag\u003e\n                })\n            }\n        \u003c/div\u003e\n    )\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220805175302-82598bf",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220805175302-82598bf",
				"updated": "20220805175306"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "实际效果"
				}
			]
		},
		{
			"ID": "20220805175306-7715030",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220805175306-7715030",
				"updated": "20220805175350"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img1.terwergreen.com/api/public/20220805175334.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		}
	]
}