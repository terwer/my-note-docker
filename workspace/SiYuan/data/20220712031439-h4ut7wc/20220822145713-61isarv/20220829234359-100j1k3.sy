{
	"ID": "20220829234359-100j1k3",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16637870",
		"custom-desc": "问题分析dao层使用持久层框架存在代码重复整个操作过程模板重复（加载配置文件创建sqlsessionfactory生产sqlsession）存在硬编码（statementid）解决思路getmapper动态代理方式优化使用代理模式生成dao层接口的实现类​​sqlsession接口新增getmapper方法fun?)_tpublicdefaultsqlsession中getmapper方法的实现overridefun)_t{使用jdk动态代理为dao接口生成代理对象returnproxynewproxyi",
		"custom-jvue-post-id": "8009",
		"custom-kms-post-id": "182ea50d8b0a282f74701eb452bb4272",
		"custom-slug": "use-getmapper-to-optimize-the-custom-persistence-layer-framework",
		"custom-vuepress-slug": "docs/001.后端开发/002.开源框架/001.MyBatis/124.使用getMapper方式对自定义持久层框架进行优化.md",
		"custom-wordpress-post-id": "4199",
		"custom-wordpress-wp2-post-id": "4257",
		"id": "20220829234359-100j1k3",
		"scroll": "{\u0026amp;quot;startId\u0026amp;quot;:\u0026amp;quot;20220829234519-y3gdxd3\u0026amp;quot;,\u0026amp;quot;endId\u0026amp;quot;:\u0026amp;quot;20220829234720-x26rnum\u0026amp;quot;,\u0026amp;quot;scrollTop\u0026amp;quot;:0,\u0026amp;quot;focusId\u0026amp;quot;:\u0026amp;quot;20220829234519-gnflz9u\u0026amp;quot;,\u0026amp;quot;focusStart\u0026amp;quot;:33,\u0026amp;quot;focusEnd\u0026amp;quot;:33}",
		"tags": "custom,dao,persistence,framework,mybatis,mybatis-5,mapper",
		"title": "124.使用getMapper方式对自定义持久层框架进行优化",
		"updated": "20220830212438"
	},
	"Children": [
		{
			"ID": "20220829234519-y3gdxd3",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220829234519-y3gdxd3",
				"updated": "20220829234529"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "问题分析"
				}
			]
		},
		{
			"ID": "20220829234519-vpm855g",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-vpm855g",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "1、Dao层使用持久层框架，存在代码重复，整个操作过程模板重复（加载配置文件、创建SqlSessionFactory、生产SqlSession）"
				}
			]
		},
		{
			"ID": "20220829234519-ccy16mq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-ccy16mq",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "2、存在硬编码（statementId）"
				}
			]
		},
		{
			"ID": "20220829234519-p2sw7or",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220829234519-p2sw7or",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "解决思路"
				}
			]
		},
		{
			"ID": "20220829234519-9zee4p3",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20220829234519-9zee4p3",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "getMapper+动态代理方式优化"
				}
			]
		},
		{
			"ID": "20220829234519-f6rq0fr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-f6rq0fr",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用代理模式生成Dao层接口的实现类"
				}
			]
		},
		{
			"ID": "20220829234556-p01iyp6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234556-p01iyp6",
				"updated": "20220829234616"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img1.terwer.space/20220314210022.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20220829234636-njkp3uo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234636-njkp3uo",
				"updated": "20220829234714"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeBang"
						},
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img1.terwer.space/20220314212430.png"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​"
				}
			]
		},
		{
			"ID": "20220829234519-6bhuud5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-6bhuud5",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "SqlSession接口新增getMapper方法"
				}
			]
		},
		{
			"ID": "20220829234519-jwzy1h0",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-group\u003e",
			"Properties": {
				"id": "20220829234519-jwzy1h0",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-4giaavb",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-block title=\"Kotlin\" active\u003e",
			"Properties": {
				"id": "20220829234519-4giaavb",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-i72fg7l",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220829234519-i72fg7l",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "fun \u003cT\u003e getMapper(mapperClass: Class\u003c*\u003e?): T\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220829234519-9d2w6ut",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-block\u003e",
			"Properties": {
				"id": "20220829234519-9d2w6ut",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-aao42e2",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-block title=\"Java\"\u003e",
			"Properties": {
				"id": "20220829234519-aao42e2",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-uhje22z",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220829234519-uhje22z",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public \u003cT\u003e T getMapper(Class\u003c?\u003e mapperClass);\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220829234519-6s4vsgq",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-block\u003e",
			"Properties": {
				"id": "20220829234519-6s4vsgq",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-6mky8hb",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-group\u003e",
			"Properties": {
				"id": "20220829234519-6mky8hb",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-hi2z3am",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-hi2z3am",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "DefaultSqlSession中getMapper方法的实现"
				}
			]
		},
		{
			"ID": "20220829234519-4s5o11w",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-group\u003e",
			"Properties": {
				"id": "20220829234519-4s5o11w",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-cj2h2iw",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-block title=\"Kotlin\" active\u003e",
			"Properties": {
				"id": "20220829234519-cj2h2iw",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-kneedby",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220829234519-kneedby",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu"
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "override fun \u003cT\u003e getMapper(mapperClass: Class\u003c*\u003e): T {\n    // 使用JDK动态代理为Dao接口生成代理对象\n    return Proxy.newProxyInstance(\n        DefaultSqlSession::class.java.classLoader,\n        arrayOf(mapperClass)\n    ) { proxy, method, args -\u003e // 底层还是执行JDBC\n        // 准备参数1\n        // statemendid=namespace.id，获取不到\n        // statemendid=接口全限定名.方法名\n        val clazzName = method.declaringClass.name\n        val methodName = method.name\n        val statementId = \"$clazzName.$methodName\"\n\n        // 准备参数2：params=args\n\n        // 获取被调用方法的返回类型\n        val genericReturnType = method.genericReturnType\n        // 判断是否进行了泛型类型参数化\n        if (genericReturnType is ParameterizedType) {\n            selectList\u003cAny\u003e(statementId, *args)\n        } else selectOne\u003cAny\u003e(statementId, *args)\n    } as T\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220829234519-k0ci6zo",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-block\u003e",
			"Properties": {
				"id": "20220829234519-k0ci6zo",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-y9irqh4",
			"Type": "NodeHTMLBlock",
			"Data": "\u003ccode-block title=\"Java\"\u003e",
			"Properties": {
				"id": "20220829234519-y9irqh4",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-x1gtny1",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"Properties": {
				"id": "20220829234519-x1gtny1",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```"
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ=="
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "@Override\npublic \u003cT\u003e T getMapper(Class\u003c?\u003e mapperClass) {\n    // 使用JDK动态代理为Dao接口生成代理对象\n    return (T) Proxy.newProxyInstance(DefaultSqlSession.class.getClassLoader(), new Class[]{mapperClass}, new InvocationHandler() {\n        @Override\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n            // 底层还是执行JDBC\n            // 准备参数1\n            // statemendid=namespace.id，获取不到\n            // statemendid=接口全限定名.方法名\n            String clazzName = method.getDeclaringClass().getName();\n            String methodName = method.getName();\n            String statementId = clazzName + \".\" + methodName;\n\n            // 准备参数2：params=args\n\n            // 获取被调用方法的返回类型\n            Type genericReturnType = method.getGenericReturnType();\n            // 判断是否进行了泛型类型参数化\n            if (genericReturnType instanceof ParameterizedType) {\n                return selectList(statementId, args);\n            }\n\n            return selectOne(statementId, args);\n        }\n    });\n}\n"
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```"
				}
			]
		},
		{
			"ID": "20220829234519-abvv8b4",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-block\u003e",
			"Properties": {
				"id": "20220829234519-abvv8b4",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-wwucteq",
			"Type": "NodeHTMLBlock",
			"Data": "\u003c/code-group\u003e",
			"Properties": {
				"id": "20220829234519-wwucteq",
				"updated": "20220829234519"
			}
		},
		{
			"ID": "20220829234519-42ydn17",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220829234519-42ydn17",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "优化版代码"
				}
			]
		},
		{
			"ID": "20220829234519-o1q2a4w",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-o1q2a4w",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "mybatis-proxy/custom-persistence"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/terwer/senior-java-engineer-road/tree/mybatis-proxy/p7-skill/framework/mybatis/custom-persistence"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220829234519-r6qi5oh",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20220829234519-r6qi5oh",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "默认实现方式"
				}
			]
		},
		{
			"ID": "20220829234519-zl80t2n",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234519-zl80t2n",
				"updated": "20220829234519"
			},
			"Children": [
				{
					"Type": "NodeLink",
					"Data": "span",
					"Children": [
						{
							"Type": "NodeOpenBracket"
						},
						{
							"Type": "NodeLinkText",
							"Data": "mybatis-normal/custom-persistence"
						},
						{
							"Type": "NodeCloseBracket"
						},
						{
							"Type": "NodeOpenParen"
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://github.com/terwer/senior-java-engineer-road/tree/mybatis-normal/p7-skill/framework/mybatis/custom-persistence"
						},
						{
							"Type": "NodeCloseParen"
						}
					]
				}
			]
		},
		{
			"ID": "20220829234532-dipvxzj",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20220829234532-dipvxzj",
				"style": "color: var(--b3-card-info-color); background-color: var(--b3-card-info-background);",
				"updated": "20220830212438"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e"
				},
				{
					"ID": "20220829234519-gnflz9u",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20220829234519-gnflz9u",
						"updated": "20220830212438"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "文章更新历史\n2022/05/08 feat:增加Kotlin实现"
						}
					]
				}
			]
		},
		{
			"ID": "20220829234720-x26rnum",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20220829234720-x26rnum"
			}
		}
	]
}