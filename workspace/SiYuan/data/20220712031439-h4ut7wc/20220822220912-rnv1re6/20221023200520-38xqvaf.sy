{
	"ID": "20221023200520-38xqvaf",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16820211",
		"custom-desc": "集合框架中的接口除了类集接口之外类集也是用comparatoriterator和listiterator接口。简单地说comparator接口定义了两个对象如何比较_iterator和listiterator接口枚举类集中的对象。为了在他们的使用中提供最大的灵活性类集接口允许对一些方法进行选择。可选择的方法使得使用者可以更改类集中的内容。支持这些方法额类集被称为可修改的（modifiable）。不允许修改其内容的类集被称为不可修改的（unmodifiable）。如果对一个不可修改发类集使用这些方法将引发一",
		"custom-slug": "linkedlist-source-code-in-depth-analysis-z2jmwit",
		"custom-vuepress-slug": "docs/001.后端开发/001.JavaSE/023.LinkedList源代码深入剖析.md",
		"custom-wordpress-post-id": "4345",
		"custom-yuque-post-id": "97675855_terwer/note",
		"id": "20221023200520-38xqvaf",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221023200520-tm5bp7v\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221024000442-yy4t95w\u0026quot;,\u0026quot;scrollTop\u0026quot;:4264,\u0026quot;focusId\u0026quot;:\u0026quot;20221024004601-tbx0rbj\u0026quot;,\u0026quot;focusStart\u0026quot;:62,\u0026quot;focusEnd\u0026quot;:62}",
		"tags": "方法,元素,调用,集合,java,linkedlist,collection",
		"title": "023.LinkedList源代码深入剖析",
		"updated": "20221024004628"
	},
	"Children": [
		{
			"ID": "20221023200520-tm5bp7v",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023200520-tm5bp7v",
				"updated": "20221023203001"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "集合框架中的接口",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023203001-p6v0psj",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023203001-p6v0psj",
				"updated": "20221023211510"
			},
			"Children": [
				{
					"ID": "20221023203006-irt0vgw",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023203006-irt0vgw",
						"updated": "20221023203006"
					},
					"Children": [
						{
							"ID": "20221023203006-iuacl7n",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023203006-iuacl7n",
								"updated": "20221023203106"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "除了类集接口之外，类集也是用 Comparator ， Iterator 和 ListIterator 接口。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023203106-a45jett",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023203106-a45jett",
						"updated": "20221023203106"
					},
					"Children": [
						{
							"ID": "20221023203106-40q77pd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023203106-40q77pd",
								"updated": "20221023203204"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "简单地说， Comparator 接口定义了两个对象如何比较；Iterator 和 ListIterator 接口枚举类集中的对象。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023203213-11czchj",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023203213-11czchj",
						"updated": "20221023203346"
					},
					"Children": [
						{
							"ID": "20221023203213-j1f0pzt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023203213-j1f0pzt",
								"updated": "20221023204401"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为了在他们的使用中提供最大的灵活性，类集接口允许对一些方法进行选择。可选择的方法使得使用者可以更改类集中的内容。支持这些方法额类集被称为可修改的（modifiable）。不允许修改其内容的类集被称为不可修改的（unmodifiable）。如果对一个不可修改发类集使用这些方法，将引发一个 UnsupportedOperationException 异常。 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color4);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "所有内置的类集都是可修改的"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color4);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": " 。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023204412-23agpem",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023204412-23agpem",
						"updated": "20221023204412"
					},
					"Children": [
						{
							"ID": "20221023204412-prb78n4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023204412-prb78n4",
								"updated": "20221023204726"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "add()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法可以将对象加入类集，注意 add() 带一个 Object 类的参数。因为 Object 是所有类的超类，所以任何类型的对象都可以被存储在一个类集中。然而原始类型 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color4);"
									},
									"TextMarkType": "text strong",
									"TextMarkTextContent": "不行"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color4);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": " 。例如，一个类集不能直接存储类型 int ，char ， double 等的值。如果想存储这些对象，也可以使用原始类型包装器。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023204731-lo2r921",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023204731-lo2r921",
								"updated": "20221023204815"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法将一个类集的全部内容增加到另一个类集中。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023204819-3klz1vn",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023204819-3klz1vn",
						"updated": "20221023204819"
					},
					"Children": [
						{
							"ID": "20221023204819-uj7i0ot",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023204819-uj7i0ot",
								"updated": "20221023205029"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以通过调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "remove()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法将一个对象删除。为了删除一组对象，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "removeAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "retainAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法可以将除了一组指定的元素之外的所有元素删除。为了清空类集，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "clear()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023205915-4km5gov",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023205915-4km5gov",
						"updated": "20221023205915"
					},
					"Children": [
						{
							"ID": "20221023205915-0eq6ybb",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023205915-0eq6ybb",
								"updated": "20221023210007"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "contains()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法可以确定一个类集中是否包含了一个指定的对象。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023210009-x86s575",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023210009-x86s575",
						"updated": "20221023210250"
					},
					"Children": [
						{
							"ID": "20221023210009-9x4fbao",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023210009-9x4fbao",
								"updated": "20221023210408"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为了确定一个类集是否包含了另一个类集的全部元素，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "contsinsAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023210408-cyyak4f",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023210408-cyyak4f",
						"updated": "20221023210408"
					},
					"Children": [
						{
							"ID": "20221023210408-s7ttgyk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023210408-s7ttgyk",
								"updated": "20221023210502"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "当一个类集是空的时候，可以通过调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "isEmpty()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法来予以确定。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023210504-yle8qx8",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023210504-yle8qx8",
						"updated": "20221023210528"
					},
					"Children": [
						{
							"ID": "20221023210504-rlmq2p8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023210504-rlmq2p8",
								"updated": "20221023210528"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "size()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法可以获得类集中当前元素的个数。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023210258-tdru3cu",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023210258-tdru3cu",
						"updated": "20221023210548"
					},
					"Children": [
						{
							"ID": "20221023210258-1ipwtfl",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023210258-1ipwtfl",
								"updated": "20221023210802"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "toArray()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法返回一个数组，这个数组包含了存储在调用类集中的元素。通过再类集合数组之间提供一条路径，可以充分利用这两者的优点。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023210803-3wl0h4l",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023210803-3wl0h4l",
						"updated": "20221023210803"
					},
					"Children": [
						{
							"ID": "20221023210803-hcbbd56",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023210803-hcbbd56",
								"updated": "20221023211045"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个更加重要的方法是 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "iterator()"
								},
								{
									"Type": "NodeText",
									"Data": "​ ，该方法对类集返回一个迭代程序。当使用一个类集框架时，迭代程序对于成功的编程来说是至关重要的。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023211048-wjtvtr7",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023211048-wjtvtr7",
						"updated": "20221023211048"
					},
					"Children": [
						{
							"ID": "20221023211048-ls9pvu7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023211048-ls9pvu7",
								"updated": "20221023211203"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Collection"
								},
								{
									"Type": "NodeText",
									"Data": "​ ：集合层次中的根接口，JDK 没有提供这个接口的直接实现类。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023211154-7v3si4e",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023211154-7v3si4e",
						"updated": "20221023211154"
					},
					"Children": [
						{
							"ID": "20221023211154-7nurf4p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023211154-7nurf4p",
								"updated": "20221023211259"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Set"
								},
								{
									"Type": "NodeText",
									"Data": "​ ：不能包含重复的元素。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "SortedSet"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是一个按照升序排列元素的 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Set"
								},
								{
									"Type": "NodeText",
									"Data": "​ 。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023211300-sy0adw9",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023211300-sy0adw9",
						"updated": "20221023211300"
					},
					"Children": [
						{
							"ID": "20221023211300-l90hfi2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023211300-l90hfi2",
								"updated": "20221023211337"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "List"
								},
								{
									"Type": "NodeText",
									"Data": "​ ：是一个有序的集合，可以包含重复的元素。提供了按照索引访问的方式。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023211510-cjajsch",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023211510-cjajsch",
						"updated": "20221023211510"
					},
					"Children": [
						{
							"ID": "20221023211510-w0vanyt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023211510-w0vanyt",
								"updated": "20221023211510"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Map"
								},
								{
									"Type": "NodeText",
									"Data": "​ ：包含了 key-value 对。Map 不能包含重复的 key 。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "SortedMap"
								},
								{
									"Type": "NodeText",
									"Data": "​ 是一个按照升序排列 key 的 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Map"
								},
								{
									"Type": "NodeText",
									"Data": "​ 。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023211549-6g6015x",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023211549-6g6015x",
				"updated": "20221023211601"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "集合框架中的实现类",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023211601-bdszloh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221023211601-bdszloh",
				"updated": "20221023211711"
			},
			"Children": [
				{
					"Type": "NodeImage",
					"Properties": {
						"id": ""
					},
					"Children": [
						{
							"Type": "NodeBang",
							"Data": "!",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeOpenBracket",
							"Data": "[",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeCloseBracket",
							"Data": "]",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeOpenParen",
							"Data": "(",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeLinkDest",
							"Data": "https://img1.terwer.space/api/public/20221023211650.png",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeCloseParen",
							"Data": ")",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"Type": "NodeText",
					"Data": "​",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023214158-99c48k2",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023214158-99c48k2",
				"updated": "20221023214208"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "List 接口",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023214209-hfozpv0",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023214209-hfozpv0",
				"updated": "20221023231331"
			},
			"Children": [
				{
					"ID": "20221023214210-c6cz1b1",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023214210-c6cz1b1",
						"updated": "20221023214210"
					},
					"Children": [
						{
							"ID": "20221023214210-ik02ids",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023214210-ik02ids",
								"updated": "20221023214611"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "List"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 接口扩展了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Colection"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 并声明存储一系列元素的类集的特性。使用一个基于零的下表，元素可以通过他们在列表中的位置被插入和访问。一个列表可以包含重复元素。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023214613-3ekap3l",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023214613-3ekap3l",
						"updated": "20221023214613"
					},
					"Children": [
						{
							"ID": "20221023214613-1qv8n82",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023214613-1qv8n82",
								"updated": "20221023224534"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "除了由 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Collection"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 定义的方法之外，List 还定义了一些它自己的方法。再次注意当类集不能被修改时，其中分几种方法引发 UnsupportedOperationException 异常。当一个对象与另一个不兼容，例如当企图将一个不兼容的对象加入一个类集当中时，将产生 ClassCastException 异常。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023224542-fluu5h9",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023224542-fluu5h9",
						"updated": "20221023231331"
					},
					"Children": [
						{
							"ID": "20221023224542-63yefxa",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023224542-63yefxa",
								"updated": "20221023231331"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对于由 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Collection"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 定义的 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "add()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 和 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法，List 增加了方法 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "add(int, Object)"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 和 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addAll(int, Collection)"
								},
								{
									"Type": "NodeText",
									"Data": "​​​。这些方法在指定的下标处插入元素。由 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Collection"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 定义的 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "add()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 和 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addAll()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 方法的语义也被 List 改变了，以便他们 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color4);"
									},
									"TextMarkType": "text strong",
									"TextMarkTextContent": "在列表的尾部增加元素"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color4);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": " 。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023224910-3ky7sds",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023224910-3ky7sds",
						"updated": "20221023224910"
					},
					"Children": [
						{
							"ID": "20221023224910-u3cfcuv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023224910-u3cfcuv",
								"updated": "20221023225216"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为了获得在指定位置存储的对象，可以用对象的下标调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "get()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，为了给元素赋值，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "set()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，指定被改变对象的下表。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "indexOf()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 和 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "lastIndexOf()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 可以得到一个对象的下标。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023225222-ntde0xp",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023225222-ntde0xp",
						"updated": "20221023225353"
					},
					"Children": [
						{
							"ID": "20221023225222-rtxra0z",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023225222-rtxra0z",
								"updated": "20221023225353"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "subList()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，可以获得列表的一个指定了开始下标和结束下标的子列表。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "subList()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法使得列表处理十分方便。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023214347-qn1wuxc",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023214347-qn1wuxc",
				"updated": "20221023225453"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "Set 接口",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023225454-yqy75yz",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023225454-yqy75yz",
				"updated": "20221023225815"
			},
			"Children": [
				{
					"ID": "20221023225559-ocvhpdq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023225559-ocvhpdq",
						"updated": "20221023225815"
					},
					"Children": [
						{
							"ID": "20221023225559-ezpvyjm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023225559-ezpvyjm",
								"updated": "20221023225815"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "集合接口定义了一个集合。它扩展了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Collection"
								},
								{
									"Type": "NodeText",
									"Data": "​ 并说明了不允许重复元素的类集的特性。因此，如果试图将重复元素加到集合中时，add() 方法将返回 false 。它本身并没有定义任何的附加方法。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023225820-j94zli9",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023225820-j94zli9",
				"updated": "20221023225850"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "SortedSet 接口",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023225851-7qbiruj",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023225851-7qbiruj",
				"updated": "20221023225853"
			},
			"Children": [
				{
					"ID": "20221023225853-sfwb6wu",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023225853-sfwb6wu",
						"updated": "20221023225853"
					},
					"Children": [
						{
							"ID": "20221023225853-0h4vrsk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023225853-0h4vrsk",
								"updated": "20221023230136"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "SortedSet"
								},
								{
									"Type": "NodeText",
									"Data": "​ 接口扩展了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Set"
								},
								{
									"Type": "NodeText",
									"Data": "​ 并说明了按照升序排列的集合的特性。当没有项包含在集合中时，其中的几种方法引发 NoSuchElementException 异常。当对象与调用集合中的元素不兼容时，引发 ClassCastException 异常。如果试图使用 null 对象，二集合不允许 null 时，引发 NullPointerException 异常。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023230620-giz3x3i",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023230620-giz3x3i",
						"updated": "20221023230620"
					},
					"Children": [
						{
							"ID": "20221023230620-th9j5mg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023230620-th9j5mg",
								"updated": "20221023230620"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "SortedSet"
								},
								{
									"Type": "NodeText",
									"Data": "​ 定义了几种方法，使得对集合的处理更加方便。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "first()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，可以获得集合中的第一个对象。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "last()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，可以获得集合中的最后一个元素。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "subset()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法，可以获得排序集合的一个指定了第一个和最后一个对象子集合。如果需要得到从集合的第一个元素开始的一个子集合。可以使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "headSet()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法。如果需要获得集合尾部的一个子集合，可以使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "tailSet()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023230622-gdl2kkz",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023230622-gdl2kkz",
				"updated": "20221023230655"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "Collection 类",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023230655-9rjt87u",
			"Type": "NodeList",
			"ListData": {
				"Tight": true,
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023230655-9rjt87u",
				"updated": "20221023230851"
			},
			"Children": [
				{
					"ID": "20221023230656-viezjj5",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023230656-viezjj5",
						"updated": "20221023230851"
					},
					"Children": [
						{
							"ID": "20221023230656-55b2b2w",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023230656-55b2b2w",
								"updated": "20221023230851"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类集接口的标准类一些提供了完整的可使用的工具，另一些是抽象的，提供主框架工具，最为创建具体类集的起始点。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023230852-5yz9pnn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023230852-5yz9pnn",
				"updated": "20221023230907"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "ArrayList",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023230908-g5uufqg",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023230908-g5uufqg",
				"updated": "20221023232406"
			},
			"Children": [
				{
					"ID": "20221023230910-jsh6t2r",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023230910-jsh6t2r",
						"updated": "20221023230910"
					},
					"Children": [
						{
							"ID": "20221023230910-jsmjafk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023230910-jsmjafk",
								"updated": "20221023231013"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ ：我们可以将其看做是能够自动增长容量的数组。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023230945-prl5gpd",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023230945-prl5gpd",
						"updated": "20221023230945"
					},
					"Children": [
						{
							"ID": "20221023230945-bxtkjwh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023230945-bxtkjwh",
								"updated": "20221023231017"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 的 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "toArray()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 返回一个数组。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023231018-g0htfrw",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023231018-g0htfrw",
						"updated": "20221023231018"
					},
					"Children": [
						{
							"ID": "20221023231018-daad5tg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023231018-daad5tg",
								"updated": "20221023231042"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Arrays.asList()"
								},
								{
									"Type": "NodeText",
									"Data": "​​​ 返回一个列表。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023231044-5jr3aws",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023231044-5jr3aws",
						"updated": "20221023231115"
					},
					"Children": [
						{
							"ID": "20221023231044-l19cv0o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023231044-l19cv0o",
								"updated": "20221023231146"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "迭代器（Iterator）给我们提供了一种通用的方式来访问集合中的元素。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023231154-107c0zq",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023231154-107c0zq",
						"updated": "20221023231248"
					},
					"Children": [
						{
							"ID": "20221023231154-f1zntor",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023231154-f1zntor",
								"updated": "20221023231257"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 继承自 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "AbstractList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 并实现了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "List"
								},
								{
									"Type": "NodeText",
									"Data": "​ 接口。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023231409-uow9bqu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023231409-uow9bqu",
								"updated": "20221023231854"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 支持可随需要增长的动态数组。在 Java 中，标准数组是定长的。在数组被创建后，它们不能被加长或者缩短，这意味着必须事先知道需要定义多大的数组。为了解决这个问题，类集框架定义了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 。 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color4);"
									},
									"TextMarkType": "strong text",
									"TextMarkTextContent": "本质上，ArrayList 是对象引用的一个变长数组"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color4);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": " 。也就是说，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 可以动态地增加或者减小其大小。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 以一个原始大小被创建，当超过了它的大小，类集自动增大。当对象被删除后，数组可以缩小。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023231920-f9zvfjz",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023231920-f9zvfjz",
						"updated": "20221023232406"
					},
					"Children": [
						{
							"ID": "20221023231920-cyofcwt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023231920-cyofcwt",
								"updated": "20221023231945"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 有如下的构造函数",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023231946-r314hn9",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221023231946-r314hn9",
								"updated": "20221023232406"
							},
							"Children": [
								{
									"ID": "20221023231948-x75xd8q",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023231948-x75xd8q",
										"updated": "20221023231948"
									},
									"Children": [
										{
											"ID": "20221023231948-2ohh01l",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023231948-2ohh01l",
												"updated": "20221023232020"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "ArrayList()"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023232008-tpza4vg",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023232008-tpza4vg",
										"updated": "20221023232008"
									},
									"Children": [
										{
											"ID": "20221023232008-8i7kfaf",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023232008-8i7kfaf",
												"updated": "20221023232048"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "ArrayList(Collection c)"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023232048-optsi5l",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023232048-optsi5l",
										"updated": "20221023232048"
									},
									"Children": [
										{
											"ID": "20221023232048-cxe2nj2",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023232048-cxe2nj2",
												"updated": "20221023232113"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "ArrayList(int capacity"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023232120-6gx6w69",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023232120-6gx6w69",
										"updated": "20221023232120"
									},
									"Children": [
										{
											"ID": "20221023232120-r3n88lj",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023232120-r3n88lj",
												"updated": "20221023232142"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第一个构造函数建立一个空的数组列表。",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023232142-znihdje",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023232142-znihdje",
										"updated": "20221023232142"
									},
									"Children": [
										{
											"ID": "20221023232142-9jx39xt",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023232142-9jx39xt",
												"updated": "20221023232221"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第二个构造函数建立一个数组列表，该数组列表由类集 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "c"
												},
												{
													"Type": "NodeText",
													"Data": "​ 中的元素初始化。",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023232226-huyh5q4",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023232226-huyh5q4",
										"updated": "20221023232406"
									},
									"Children": [
										{
											"ID": "20221023232226-j7yknmh",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023232226-j7yknmh",
												"updated": "20221023232406"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第三个构造函数建立一个数组列表，该数组有指定的初始容量（capacity）。容量是用于存储元素的基本数组的大小。当元素被追加到数组列表上时，容量会自动增加。",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023233137-zi5sgcn",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023233137-zi5sgcn",
				"updated": "20221023233939"
			},
			"Children": [
				{
					"ID": "20221023233139-1ydqugj",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023233139-1ydqugj",
						"updated": "20221023233139"
					},
					"Children": [
						{
							"ID": "20221023233139-w6qui72",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023233139-w6qui72",
								"updated": "20221023233318"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "尽管当对象被存储在 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 对象中时，其容量会自动增加。仍然可以通过 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ensureCapacity()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法来人工地增加 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 的容量。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023233324-9jimkxr",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023233324-9jimkxr",
								"updated": "20221023233434"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果事先知道将在当前能够容纳的类集中存储许多项时，可能会这么做。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023233434-rnl3vna",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023233434-rnl3vna",
								"updated": "20221023233535"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在开始时，一次性增加它的容量，可以避免后面的再分配。因为再分配比较花时间，避免不必要的处理可以改善性能。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221023233550-7ewst17",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"Tight": true,
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023233550-7ewst17",
						"updated": "20221023233939"
					},
					"Children": [
						{
							"ID": "20221023233550-384evfm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023233550-384evfm",
								"updated": "20221023233905"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ensureCapacity()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法如下",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023233905-i7q5dku",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221023233905-i7q5dku",
								"updated": "20221023233939"
							},
							"Children": [
								{
									"ID": "20221023233906-kxew3l1",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023233906-kxew3l1",
										"updated": "20221023233939"
									},
									"Children": [
										{
											"ID": "20221023233906-2w67h78",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023233906-2w67h78",
												"updated": "20221023233939"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "void ensureCapacity(int cap)"
												},
												{
													"Type": "NodeText",
													"Data": "​ ，这里，cap 是新的容量",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023233832-welhgvk",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023233832-welhgvk",
				"updated": "20221023234112"
			},
			"Children": [
				{
					"ID": "20221023233947-n7zi876",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023233947-n7zi876",
						"updated": "20221023234112"
					},
					"Children": [
						{
							"ID": "20221023233947-0qfy1qn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023233947-0qfy1qn",
								"updated": "20221023234100"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "相反的，如果想要减小在 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ArrayList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 对象之下的数组的大小，以便它有真正正好容纳当前项的大小，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "trimToSize()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法。该方法如下：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023234101-ao9a25x",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023234101-ao9a25x",
								"updated": "20221023234112"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "void trimToSize()"
								},
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023235258-px7fo30",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20221023235258-px7fo30",
				"updated": "20221023235304"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "LinkedList",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221023235307-288oawq",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023235307-288oawq",
				"updated": "20221023235612"
			},
			"Children": [
				{
					"ID": "20221023235309-4wmf31l",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023235309-4wmf31l",
						"updated": "20221023235612"
					},
					"Children": [
						{
							"ID": "20221023235309-dphc81j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235309-dphc81j",
								"updated": "20221023235433"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "LinkedList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 类继承自 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "AbstractSequentialList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 并实现了 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "List"
								},
								{
									"Type": "NodeText",
									"Data": "​ 接口。他提供了一个 链表 数据结构。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023235436-czikhjt",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235436-czikhjt",
								"updated": "20221023235455"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它具有两个狗在函数，说明如下：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023235456-gibwrrk",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221023235456-gibwrrk",
								"updated": "20221023235612"
							},
							"Children": [
								{
									"ID": "20221023235458-c7ai7b3",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235458-c7ai7b3",
										"updated": "20221023235458"
									},
									"Children": [
										{
											"ID": "20221023235458-9sx9sch",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235458-9sx9sch",
												"updated": "20221023235505"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "LinkedList()"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023235506-66bntpk",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235506-66bntpk",
										"updated": "20221023235506"
									},
									"Children": [
										{
											"ID": "20221023235506-aa2spaw",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235506-aa2spaw",
												"updated": "20221023235519"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "LinkedList(Collection c)"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023235521-etb3gjf",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235521-etb3gjf",
										"updated": "20221023235521"
									},
									"Children": [
										{
											"ID": "20221023235521-o05n0z7",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235521-o05n0z7",
												"updated": "20221023235537"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第一个构造函数建立一个空的链表",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023235537-gd6fg1x",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235537-gd6fg1x",
										"updated": "20221023235612"
									},
									"Children": [
										{
											"ID": "20221023235537-5abkoez",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235537-5abkoez",
												"updated": "20221023235612"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "第二个构造函数建立一个链表，该链表由类集 c 中的元素初始化。",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023235623-fjpryqx",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023235623-fjpryqx",
				"updated": "20221023235916"
			},
			"Children": [
				{
					"ID": "20221023235624-n1nsqwc",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023235624-n1nsqwc",
						"updated": "20221023235916"
					},
					"Children": [
						{
							"ID": "20221023235624-vs63g36",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235624-vs63g36",
								"updated": "20221023235718"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "除了它继承的方法之外，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "LinkedList"
								},
								{
									"Type": "NodeText",
									"Data": "​ 类本身还定义了一些有用的方法，这些方法主要用于操作和访问列表。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023235724-zwt0inc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235724-zwt0inc",
								"updated": "20221023235819"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addFirst()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法可以在列表头增加元素；使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addLast()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 可以在列表的尾部增加元素。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023235826-sytdqy4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235826-sytdqy4",
								"updated": "20221023235832"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它们的形式如下：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221023235832-jfry4in",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221023235832-jfry4in",
								"updated": "20221023235916"
							},
							"Children": [
								{
									"ID": "20221023235835-aleh9zq",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235835-aleh9zq",
										"updated": "20221023235835"
									},
									"Children": [
										{
											"ID": "20221023235835-60qmd4x",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235835-60qmd4x",
												"updated": "20221023235848"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "void addFirst(Object obj)"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023235848-9dyzaga",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235848-9dyzaga",
										"updated": "20221023235848"
									},
									"Children": [
										{
											"ID": "20221023235848-utv38wd",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235848-utv38wd",
												"updated": "20221023235900"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "void addLast(Object obj)"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221023235900-kuhuodw",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221023235900-kuhuodw",
										"updated": "20221023235916"
									},
									"Children": [
										{
											"ID": "20221023235900-s2m0398",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221023235900-s2m0398",
												"updated": "20221023235916"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "这里，obj 是被增加的项",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221023235929-8k8t6fd",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221023235929-8k8t6fd",
				"updated": "20221024000049"
			},
			"Children": [
				{
					"ID": "20221023235930-pzxvyr5",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221023235930-pzxvyr5",
						"updated": "20221024000049"
					},
					"Children": [
						{
							"ID": "20221023235930-vx3uhjg",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221023235930-vx3uhjg",
								"updated": "20221024000014"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "getFirst()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 方法可以获得第一个元素。调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "getLast()"
								},
								{
									"Type": "NodeText",
									"Data": "​ 可以获得最后一个元素。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221024000021-lrhbphd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221024000021-lrhbphd",
								"updated": "20221024000028"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "它们的形式如下：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221024000029-y4u539k",
							"Type": "NodeList",
							"ListData": {
								"Tight": true,
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221024000029-y4u539k",
								"updated": "20221024000049"
							},
							"Children": [
								{
									"ID": "20221024000032-ilt8xwx",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024000032-ilt8xwx",
										"updated": "20221024000032"
									},
									"Children": [
										{
											"ID": "20221024000032-1u1zf4v",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000032-1u1zf4v",
												"updated": "20221024000041"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "Object getFirst()"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221024000041-bz83j0l",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024000041-bz83j0l",
										"updated": "20221024000049"
									},
									"Children": [
										{
											"ID": "20221024000041-5yn9ul1",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000041-5yn9ul1",
												"updated": "20221024000049"
											},
											"Children": [
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "Object getLast()"
												},
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221024000052-z4jj7so",
			"Type": "NodeList",
			"ListData": {
				"BulletChar": 42,
				"Padding": 2,
				"Marker": "Kg==",
				"Num": -1
			},
			"Properties": {
				"id": "20221024000052-z4jj7so",
				"updated": "20221024010958"
			},
			"Children": [
				{
					"ID": "20221024000054-kmmcbn9",
					"Type": "NodeListItem",
					"Data": "*",
					"ListData": {
						"BulletChar": 42,
						"Padding": 2,
						"Marker": "Kg==",
						"Num": -1
					},
					"Properties": {
						"id": "20221024000054-kmmcbn9",
						"updated": "20221024010958"
					},
					"Children": [
						{
							"ID": "20221024000054-82yzdjn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221024000054-82yzdjn",
								"updated": "20221024000212"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "为了删除第一个元素，可以使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "removeFirst()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法；为了删除最后一个元素，可以调用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "removeLast()"
								},
								{
									"Type": "NodeText",
									"Data": "​​ 方法。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221024000212-nmbc0v4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221024000212-nmbc0v4",
								"updated": "20221024000220"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "他们的形式如下：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221024000221-c2uak41",
							"Type": "NodeList",
							"ListData": {
								"BulletChar": 42,
								"Padding": 2,
								"Marker": "Kg==",
								"Num": -1
							},
							"Properties": {
								"id": "20221024000221-c2uak41",
								"updated": "20221024010958"
							},
							"Children": [
								{
									"ID": "20221024000224-a768whg",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024000224-a768whg",
										"updated": "20221024000224"
									},
									"Children": [
										{
											"ID": "20221024000224-yl9qs36",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000224-yl9qs36",
												"updated": "20221024000238"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "Object removeFirst()"
												},
												{
													"Type": "NodeText",
													"Data": "​​​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221024000238-bkttveh",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024000238-bkttveh",
										"updated": "20221024000247"
									},
									"Children": [
										{
											"ID": "20221024000238-8zaz5qc",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000238-8zaz5qc",
												"updated": "20221024000247"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "​",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "Object removeLast()"
												},
												{
													"Type": "NodeText",
													"Data": "​​​",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221024000356-gywo2w4",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024000356-gywo2w4",
										"updated": "20221024004523"
									},
									"Children": [
										{
											"ID": "20221024000356-1dx2fgn",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000356-1dx2fgn",
												"updated": "20221024000409"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "示例 1",
													"Properties": {
														"id": ""
													}
												}
											]
										},
										{
											"ID": "20221024000413-q956fj7",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "amF2YQ==",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20221024000413-q956fj7",
												"updated": "20221024000434"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3,
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "amF2YQ==",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "import java.util.LinkedList;\n\npublic class LinkedListTest1 {\n\n\tpublic static void main(String[] args) {\n\t\tLinkedList list = new LinkedList();\n\n\t\tlist.add(\"F\");\n\t\tlist.add(\"B\");\n\t\tlist.add(\"D\");\n\t\tlist.add(\"E\");\n\t\tlist.add(\"C\");\n\n\t\tlist.addLast(\"Z\");\n\t\tlist.addFirst(\"A\");\n\n\t\tlist.add(1, \"A2\");\n\n\t\tSystem.out.println(\"最初的集合：\" + list);\n\n\t\tlist.remove(\"F\");\n\t\tlist.remove(2);\n\n\t\tSystem.out.println(\"变化之后的集合：\" + list);\n\n\t\tObject value = list.get(2);\n\t\tlist.set(2, (String)value + \"changed\");\n\n\t\tSystem.out.println(\"最后的集合：\" + list);\n\n\t}\n}\n",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3,
													"Properties": {
														"id": ""
													}
												}
											]
										},
										{
											"ID": "20221024000459-kjlz5ns",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000459-kjlz5ns",
												"updated": "20221024000622"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "因为 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "LinkedList"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 实现 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "List"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 接口，调用 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "add(Object)"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 将项目追加到列表的尾部，如同 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "addLast()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 方法所做的那样。",
													"Properties": {
														"id": ""
													}
												}
											]
										},
										{
											"ID": "20221024000622-m3gj3v0",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000622-m3gj3v0",
												"updated": "20221024000729"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "使用 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "add()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 方法的 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "add(int, Object)"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 形式，插入项目到指定的位置，例如上面例子的 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "add(1, \u0026quot;A2\u0026quot;)"
												},
												{
													"Type": "NodeText",
													"Data": "​​",
													"Properties": {
														"id": ""
													}
												}
											]
										},
										{
											"ID": "20221024000733-jd3gmlm",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024000733-jd3gmlm",
												"updated": "20221024004523"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "注意如何通过调用 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "get()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 和 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "set()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 方法而使得 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "LinkedList"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 中的第三个元素发生了改变。为了获得一个元素的当前值，通过 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "get()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 方法传递存储元素的下标值。为了对这个下标位置赋一个新值，通过 ",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeTextMark",
													"Properties": {
														"id": ""
													},
													"TextMarkType": "code",
													"TextMarkTextContent": "set()"
												},
												{
													"Type": "NodeText",
													"Data": "​​ 传递对应的下标和新值。",
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								},
								{
									"ID": "20221024010945-ak9a1fw",
									"Type": "NodeListItem",
									"Data": "*",
									"ListData": {
										"Tight": true,
										"BulletChar": 42,
										"Padding": 2,
										"Marker": "Kg==",
										"Num": -1
									},
									"Properties": {
										"id": "20221024010945-ak9a1fw",
										"updated": "20221024010958"
									},
									"Children": [
										{
											"ID": "20221024010945-p3lim3i",
											"Type": "NodeParagraph",
											"Properties": {
												"id": "20221024010945-p3lim3i",
												"updated": "20221024010950"
											},
											"Children": [
												{
													"Type": "NodeText",
													"Data": "运行结果",
													"Properties": {
														"id": ""
													}
												}
											]
										},
										{
											"ID": "20221024010951-y0qx7i9",
											"Type": "NodeCodeBlock",
											"IsFencedCodeBlock": true,
											"CodeBlockFenceChar": 96,
											"CodeBlockFenceLen": 3,
											"CodeBlockOpenFence": "YGBg",
											"CodeBlockInfo": "cGxhaW50ZXh0",
											"CodeBlockCloseFence": "YGBg",
											"Properties": {
												"id": "20221024010951-y0qx7i9",
												"updated": "20221024010958"
											},
											"Children": [
												{
													"Type": "NodeCodeBlockFenceOpenMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3,
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockFenceInfoMarker",
													"CodeBlockInfo": "cGxhaW50ZXh0",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockCode",
													"Data": "最初的集合：[A, A2, F, B, D, E, C, Z]\n变化之后的集合：[A, A2, D, E, C, Z]\n最后的集合：[A, A2, Dchanged, E, C, Z]\n",
													"Properties": {
														"id": ""
													}
												},
												{
													"Type": "NodeCodeBlockFenceCloseMarker",
													"Data": "```",
													"CodeBlockFenceLen": 3,
													"Properties": {
														"id": ""
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221024000442-yy4t95w",
			"Type": "NodeList",
			"ListData": {},
			"Properties": {
				"id": "20221024000442-yy4t95w",
				"updated": "20221024004628"
			},
			"Children": [
				{
					"ID": "20221024004532-ep2e5d2",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221024004532-ep2e5d2",
						"updated": "20221024004612"
					},
					"Children": [
						{
							"ID": "20221024004532-jcz1li4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221024004532-jcz1li4",
								"updated": "20221024004612"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "​"
								},
								{
									"Type": "NodeTextMark",
									"TextMarkType": "code",
									"TextMarkTextContent": "LinkedList "
								},
								{
									"Type": "NodeText",
									"Data": "​​ ​是采用双向循环列表实现的。"
								}
							]
						}
					]
				},
				{
					"ID": "20221024004601-vsprsgm",
					"Type": "NodeListItem",
					"ListData": {
						"BulletChar": 42,
						"Marker": "Kg=="
					},
					"Properties": {
						"id": "20221024004601-vsprsgm",
						"updated": "20221024004628"
					},
					"Children": [
						{
							"ID": "20221024004601-tbx0rbj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221024004601-tbx0rbj",
								"updated": "20221024004628"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "利用 LinkedList 实现栈(stack)、队列 (queue)、双向队列(double-ended queue )。"
								}
							]
						}
					]
				}
			]
		}
	]
}