{
	"ID": "20221010212849-w26yacj",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-desc": "面向对象程序设计的三大基本特征_继承（inheritence​）封装（encapsulation​）多态（polymorphism​）封装_类包含了数据与方法将数据与方法放在一个类中就构成了封装。如何定义类？修饰符class类的名字{类的内容（包含了属性与方法）}修饰符class类的名字{类的内容（包含了属性与方法）}方法。如何定义方法？修饰符fun方法名称([参数参数参数…])_返回类型{方法体}修饰符返回类型方法名称（[参数参数参数…]）{方法体}main​​方法是整个java程序的入口点如果类的定义",
		"custom-slug": "java-object-oriented-encapsulation",
		"custom-vuepress-slug": "docs/001.后端开发/001.JavaSE/009.Java_SE_第九讲_面向对象之封装.md",
		"custom-wordpress-post-id": "4299",
		"id": "20221010212849-w26yacj",
		"tags": "方法,参数,定义,类型,使用,面向对象,oop,封装",
		"title": "009.Java_SE_第九讲：面向对象之封装",
		"updated": "20221010214019"
	},
	"Children": [
		{
			"ID": "20221010213136-bgo9qti",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20221010213136-bgo9qti",
				"updated": "20221010213310"
			},
			"Children": [
				{
					"ID": "20221010213136-82fpy99",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20221010213136-82fpy99",
						"updated": "20221010213305"
					},
					"Children": [
						{
							"ID": "20221010213136-krjg5ae",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-krjg5ae",
								"updated": "20221010213305"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "面向对象程序设计的三大基本特征： 继承（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Inheritence"
								},
								{
									"Type": "NodeText",
									"Data": "​）、封装（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Encapsulation"
								},
								{
									"Type": "NodeText",
									"Data": "​）、多态 （",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Polymorphism"
								},
								{
									"Type": "NodeText",
									"Data": "​）",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010213136-9mlq8lc",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20221010213136-9mlq8lc",
						"updated": "20221010213308"
					},
					"Children": [
						{
							"ID": "20221010213136-o1g7akp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-o1g7akp",
								"updated": "20221010213308"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "封装： 类包含了数据与方法，将数据与方法放在一个类中就构成了封装。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010213136-vzujhsz",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20221010213136-vzujhsz",
						"updated": "20221010213310"
					},
					"Children": [
						{
							"ID": "20221010213136-bmlmg7o",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-bmlmg7o",
								"updated": "20221010213310"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何定义类？",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010213136-0luoi0g",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "a290bGlu",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-0luoi0g",
				"updated": "20221010213331"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 修饰符 class 类的名字{\n   // 类的内容（包含了属性与方法）\n }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-tr04icc",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-tr04icc",
				"updated": "20221010213334"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 修饰符 class 类的名字{\n   // 类的内容（包含了属性与方法）\n }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-zrchi8e",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 4,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "NA==",
				"Num": 4
			},
			"Properties": {
				"id": "20221010213136-zrchi8e",
				"updated": "20221010213353"
			},
			"Children": [
				{
					"ID": "20221010213136-v10htra",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20221010213136-v10htra",
						"updated": "20221010213353"
					},
					"Children": [
						{
							"ID": "20221010213136-r4jsf8b",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-r4jsf8b",
								"updated": "20221010213353"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法。如何定义方法？",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010213136-a0vohjj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "a290bGlu",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-a0vohjj",
				"updated": "20221010213340"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 修饰符 fun 方法名称([参数 1 ，  参数 2 ，  参数 3 …]): 返回类型{\n   // 方法体\n }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-pse5vri",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-pse5vri",
				"updated": "20221010213345"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 修饰符 返回类型 方法名称（[参数 1 ，  参数 2 ，  参数 3 …]）{\n   // 方法体\n }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-ik2mn2u",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213136-ik2mn2u",
				"updated": "20221010213405"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "5.",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"id": ""
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "main"
				},
				{
					"Type": "NodeText",
					"Data": "​​ 方法是整个 Java 程序的入口点，如果类的定义中没有 ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"id": ""
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "main"
				},
				{
					"Type": "NodeText",
					"Data": "​​ 方法，则程序无法执行。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-tf5h5kn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213136-tf5h5kn",
				"updated": "20221010213407"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "6.方法定义不能嵌套， 也就说不能在一个方法中定义另外一个方法。方法只能定义在类中。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-mqeu76m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213136-mqeu76m",
				"updated": "20221010213410"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "7.关于方法的执行： 首先需要定义方法，接下来就可以使用方法（调用方法），当方法调用完毕后，方法可以返回值。 方法到底是否返回值是由方法的定义决定的。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-hzt6rjf",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213136-hzt6rjf",
				"updated": "20221010213418"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "8.如何生成对象？通过类来生成对象（通常使用 ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"id": ""
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "new"
				},
				{
					"Type": "NodeText",
					"Data": "​ 关键字来生成对象）。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-fmc0nrg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "a290bGlu",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-fmc0nrg",
				"updated": "20221010213423"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " class Person\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-79kpzui",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-79kpzui",
				"updated": "20221010213426"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " public class Person\n {\n ​\n }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-dbzgjbo",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213136-dbzgjbo",
				"updated": "20221010213431"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "使用",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-uay8h0b",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "a290bGlu",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-uay8h0b",
				"updated": "20221010213435"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " val 变量名 = 类名()\n ​\n val person = Person()\n val person2 = Person()\n val person3 = Person()\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-ymwmyq9",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-ymwmyq9",
				"updated": "20221010213438"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 类名 变量名 = new 类名();\n ​\n Person person = new Person();\n Person person2 = new Person();\n Person person3 = new Person();\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-ll3ocw0",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 9,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "OQ==",
				"Num": 9
			},
			"Properties": {
				"id": "20221010213136-ll3ocw0",
				"updated": "20221010213721"
			},
			"Children": [
				{
					"ID": "20221010213136-s9hb123",
					"Type": "NodeListItem",
					"Data": "9",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 9,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "OQ==",
						"Num": 9
					},
					"Properties": {
						"id": "20221010213136-s9hb123",
						"updated": "20221010213721"
					},
					"Children": [
						{
							"ID": "20221010213136-olgdlbm",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-olgdlbm",
								"updated": "20221010213721"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法调用需要通过对象来完成，方法调用的形式是：",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010213136-kzke6zl",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "a290bGlu",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-kzke6zl",
				"updated": "20221010213444"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "a290bGlu",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 对象变量.方法名([参数值 1 ，  参数值 2 ，  参数值 3 ….]);\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-yd9ba5q",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010213136-yd9ba5q",
				"updated": "20221010213447"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": " 对象变量.方法名([参数值 1 ，  参数值 2 ，  参数值 3 ….]);\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010213136-7u6q34v",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 10,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MTA=",
				"Num": 10
			},
			"Properties": {
				"id": "20221010213136-7u6q34v",
				"updated": "20221010214019"
			},
			"Children": [
				{
					"ID": "20221010213136-33uprlb",
					"Type": "NodeListItem",
					"Data": "10",
					"ListData": {
						"Typ": 1,
						"Start": 10,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTA=",
						"Num": 10
					},
					"Properties": {
						"id": "20221010213136-33uprlb",
						"updated": "20221010213708"
					},
					"Children": [
						{
							"ID": "20221010213136-q36upaf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-q36upaf",
								"updated": "20221010213504"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于方法的注意事项：",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeBr",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213708-qy3fr22",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213708-qy3fr22",
								"updated": "20221010213708"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1） 在方法定义中，方法的返回类型与  后面的变量或常量类型保持一致。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213505-wknb8c9",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213505-wknb8c9",
								"updated": "20221010213514"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2） 在方法调用时， 给方法传递的参数需要与方法定义时的参数保持一致（参数个数一 致，参数类型一致）。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213511-ex9pxma",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213511-ex9pxma",
								"updated": "20221010213511"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3） 方法定义时的返回类型与接收方法返回值的变量类型保持一致。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-3aue96s",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "a290bGlu",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-3aue96s",
								"updated": "20221010213520"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "a290bGlu",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " fun add(a: Int, b: Int): Int {\n     return a + b\n }\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-yau1nj3",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-yau1nj3",
								"updated": "20221010213523"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "  public int add(int a, int b) {\n      return a + b;\n  }\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-d63avzi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-d63avzi",
								"updated": "20221010213532"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法定义时的参数叫做形式参数。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-qgxf0c0",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "a290bGlu",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-qgxf0c0",
								"updated": "20221010213529"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "a290bGlu",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " val a = test.add(8, 3)\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-spl27eo",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-spl27eo",
								"updated": "20221010213536"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " int a = test.add(8, 3);\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-4bbyltk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-4bbyltk",
								"updated": "20221010213539"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "方法调用时所赋予的具体值叫做实际参数。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010213136-jice1uq",
					"Type": "NodeListItem",
					"Data": "11",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 11,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTE=",
						"Num": 11
					},
					"Properties": {
						"id": "20221010213136-jice1uq",
						"updated": "20221010213543"
					},
					"Children": [
						{
							"ID": "20221010213136-ugpikcy",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-ugpikcy",
								"updated": "20221010213543"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关键字 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​ 表示方法不返回值。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010213136-l8bgy5z",
					"Type": "NodeListItem",
					"Data": "12",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 12,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTI=",
						"Num": 12
					},
					"Properties": {
						"id": "20221010213136-l8bgy5z",
						"updated": "20221010214019"
					},
					"Children": [
						{
							"ID": "20221010213136-5h4dr2u",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213136-5h4dr2u",
								"updated": "20221010214019"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果方法不返回值， 那么声明方法的时候使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": " 关键字， 在方法定义中可以有两种情况实现不返回值：",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "void"
								},
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213550-w5e10ap",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213550-w5e10ap",
								"updated": "20221010213600"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a) 不使用语句。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213605-q1d0crk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213605-q1d0crk",
								"updated": "20221010213611"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "b) 使用 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​，但 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​ 后面没有任何值或者变量， ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "return"
								},
								{
									"Type": "NodeText",
									"Data": "​ 后面只有一个分号， 表示退出方法，返回到方法的调用端。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeBr",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213615-6d6177i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010213615-6d6177i",
								"updated": "20221010213617"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "使用方式：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-zc5laeg",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "a290bGlu",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-zc5laeg",
								"updated": "20221010213620"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "a290bGlu",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " return\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010213136-w8l4svd",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010213136-w8l4svd",
								"updated": "20221010213623"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": " return;\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010213152-0sz2rao",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221010213152-0sz2rao",
				"style": "color: var(--b3-card-success-color); background-color: var(--b3-card-success-background);",
				"updated": "20221010213152"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e ",
					"Properties": {
						"id": ""
					}
				},
				{
					"ID": "20221010213233-u2e5vc6",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010213233-u2e5vc6",
						"updated": "20221010213238"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "文章更新历史",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010213247-hq3jsm1",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010213247-hq3jsm1",
						"updated": "20221010213249"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022/05/08 feat:新增部分 Kotlin 语法。",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010213212-qhk3186",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010213212-qhk3186",
						"updated": "20221010213241"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022/05/08 fix:修改备注。",
							"Properties": {
								"id": ""
							}
						}
					]
				}
			]
		},
		{
			"ID": "20221010213241-eihvoae",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010213241-eihvoae",
				"updated": "20221010213241"
			}
		}
	]
}