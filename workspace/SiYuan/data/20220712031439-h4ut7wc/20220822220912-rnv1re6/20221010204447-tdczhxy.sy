{
	"ID": "20221010204447-tdczhxy",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16798343",
		"custom-desc": "java中的循环控制语句一共有种分别是whiledo…while以及for循环。while循环形式为_while(布尔表达式){待执行的代码}do…while循环新式为_do{待执行的代码}while(布尔表达式)_while与do…while之间的区别_如果布尔表达式的第一次判断就为false那么while循环一次也不执行_do…while循环则会执行一次。如果布尔表达式第一次判断为true那么while循环与do…while循环等价。for循环（使用最多的一种循环）形式为_for(变量初始化_条件判断",
		"custom-slug": "java-flow-control-statement-continued",
		"custom-vuepress-slug": "docs/001.后端开发/001.JavaSE/007.Java_SE_第七讲_流程控制语句续.md",
		"custom-wordpress-post-id": "4297",
		"custom-yuque-post-id": "96954313_terwer/note",
		"id": "20221010204447-tdczhxy",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221010204452-pfyvle6\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221010204503-occ5v5o\u0026quot;,\u0026quot;scrollTop\u0026quot;:653.5,\u0026quot;focusId\u0026quot;:\u0026quot;20221010204452-l6rx5in\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"tags": "循环,执行,判断,代码,布尔,flow,control,continue,javase",
		"title": "007.Java_SE_第七讲：流程控制续",
		"updated": "20221010204742"
	},
	"Children": [
		{
			"ID": "20221010204452-pfyvle6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20221010204452-pfyvle6",
				"updated": "20221010204452"
			},
			"Children": [
				{
					"ID": "20221010204452-ideb807",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20221010204452-ideb807",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"ID": "20221010204452-l6rx5in",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204452-l6rx5in",
								"updated": "20221010204529"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Java 中的循环控制语句一共有 3 种，分别是 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "while"
								},
								{
									"Type": "NodeText",
									"Data": "，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "do… while"
								},
								{
									"Type": "NodeText",
									"Data": " 以及 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "for"
								},
								{
									"Type": "NodeText",
									"Data": " 循环。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010204452-jijblae",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20221010204452-jijblae",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"ID": "20221010204452-55199dp",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204452-55199dp",
								"updated": "20221010204535"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "while 循环，形式为：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204536-v9aytjy",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010204536-v9aytjy",
								"updated": "20221010204543"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "while(布尔表达式)    {  \n//待执行的代码   \n}\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010204452-zkca7az",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20221010204452-zkca7az",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"ID": "20221010204452-v6gw6y1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204452-v6gw6y1",
								"updated": "20221010204548"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "do…while 循环，新式为：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204549-4z16oy4",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010204549-4z16oy4",
								"updated": "20221010204604"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "do{  \n//待执行的代码    \n} while(布尔表达式);\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010204452-znhca1a",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20221010204452-znhca1a",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"ID": "20221010204452-0b7wto1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204452-0b7wto1",
								"updated": "20221010204452"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "while 与 do…while 之间的区别：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204611-vobcbu1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204611-vobcbu1",
								"updated": "20221010204626"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果布尔表达式的第一次判断就为 false，那么 while 循环一次也不执行；do…while 循环则会执行一次。如果布尔表达式第一次判断为 true，那么 while 循环与 do…while 循环等价。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010204452-2rhcqr5",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20221010204452-2rhcqr5",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"ID": "20221010204452-l7yi29a",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204452-l7yi29a",
								"updated": "20221010204633"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "for 循环（使用最多的一种循环），形式为：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204641-tmdi3uh",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010204641-tmdi3uh",
								"updated": "20221010204659"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "for(变量初始化; 条件判断; 步进) {  \n//待执行的代码    \n}\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204634-mzwxoey",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204634-mzwxoey",
								"updated": "20221010204702"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "for 循环的执行过程：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204705-yh79244",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204705-yh79244",
								"updated": "20221010204705"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1） 执行变量初始化。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204707-ijdv0bq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204707-ijdv0bq",
								"updated": "20221010204712"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2） 执行条件判断。如果条件判断结果为假，那么退出 for 循环，开始执行循环后面的代码；如果条件判断为真，执行 for 循环里面的代码。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204713-s57ugbd",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204713-s57ugbd",
								"updated": "20221010204713"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3） 执行步进。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010204715-8ok526l",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010204715-8ok526l",
								"updated": "20221010204715"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4） 重复步骤 2。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010204503-occ5v5o",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221010204503-occ5v5o",
				"style": "color: var(--b3-card-success-color); background-color: var(--b3-card-success-background);",
				"updated": "20221010204452"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e ",
					"Properties": {
						"id": ""
					}
				},
				{
					"ID": "20221010204452-a7jvps3",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010204452-a7jvps3",
						"updated": "20221010204510"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "文章更新历史",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010204452-zwepjnq",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010204452-zwepjnq",
						"updated": "20221010204452"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022/05/08 fix:修改备注。",
							"Properties": {
								"id": ""
							}
						}
					]
				}
			]
		}
	]
}