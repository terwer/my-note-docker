{
	"ID": "20221010214505-r33lcvt",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16798362",
		"custom-desc": "类中的属性又叫做成员变量（membervariable）属性用英文表示为property或者attribute。对象（object）又叫做实例（instance）。生成一个对象的过程又叫做实例化。命名约定a)类_首字母大写如果一个类名由多个单词构成那么每个单词的首字母都大写中间不使用任何的连接符。比如person类membertest类。b)方法_首字母小写。如果一个方法由多个单词构成那么第一个单词的所有字母全都小写从第二个单词开始每个单词的首字母大写。比如addaddthreeint。c)属性_命名约定",
		"custom-slug": "java-object-oriented-encapsulation-continued",
		"custom-vuepress-slug": "docs/001.后端开发/001.JavaSE/010.Java_SE_第十讲_面向对象之封装续.md",
		"custom-wordpress-post-id": "4300",
		"custom-yuque-post-id": "96954877_terwer/note",
		"id": "20221010214505-r33lcvt",
		"tags": "使用,属性,变量,成员,类型,oop,面向对象,object",
		"title": "010.Java_SE_第十讲：面向对象之封装续",
		"type": "doc",
		"updated": "20221010214703"
	},
	"Children": [
		{
			"ID": "20221010214510-3x9y1u6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20221010214510-3x9y1u6",
				"updated": "20221010214510"
			},
			"Children": [
				{
					"ID": "20221010214511-f39z62h",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20221010214511-f39z62h",
						"updated": "20221010214511"
					},
					"Children": [
						{
							"ID": "20221010214512-6koexia",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214512-6koexia",
								"updated": "20221010214512"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "类中的属性又叫做成员变量（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "member variable"
								},
								{
									"Type": "NodeText",
									"Data": "），属性用英文表示为 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "property"
								},
								{
									"Type": "NodeText",
									"Data": " 或者",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "attribute"
								},
								{
									"Type": "NodeText",
									"Data": "。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214513-8bdpqrd",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20221010214513-8bdpqrd",
						"updated": "20221010214513"
					},
					"Children": [
						{
							"ID": "20221010214514-s1jh3i3",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214514-s1jh3i3",
								"updated": "20221010214514"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "对象（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Object"
								},
								{
									"Type": "NodeText",
									"Data": "）又叫做实例（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Instance"
								},
								{
									"Type": "NodeText",
									"Data": "）。生成一个对象的过程又叫做实例化。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214515-o5q3fmi",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20221010214515-o5q3fmi",
						"updated": "20221010214515"
					},
					"Children": [
						{
							"ID": "20221010214516-35latlo",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214516-35latlo",
								"updated": "20221010214516"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "命名约定",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214517-cb0n9ly",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214517-cb0n9ly",
								"updated": "20221010214517"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a) 类：首字母大写，如果一个类名由多个单词构成，那么每个单词的首字母都大写，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "中间不使用任何的连接符。比如 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "Person"
								},
								{
									"Type": "NodeText",
									"Data": " 类，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "MemberTest"
								},
								{
									"Type": "NodeText",
									"Data": " 类。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214518-xyix26q",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214518-xyix26q",
								"updated": "20221010214518"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "b) 方法：首字母小写。如果一个方法由多个单词构成，那么第一个单词的所有字母全",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "都小写，从第二个单词开始，每个单词的首字母大写。比如 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "add"
								},
								{
									"Type": "NodeText",
									"Data": "，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "addThreeInt"
								},
								{
									"Type": "NodeText",
									"Data": "。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214519-yb07tua",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214519-yb07tua",
								"updated": "20221010214519"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "c) 属性：命名约定与方法相同。比如 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": " age"
								},
								{
									"Type": "NodeText",
									"Data": "，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "ageOfPerson"
								},
								{
									"Type": "NodeText",
									"Data": "。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214520-cquhblq",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20221010214520-cquhblq",
						"updated": "20221010214520"
					},
					"Children": [
						{
							"ID": "20221010214521-vesm889",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214521-vesm889",
								"updated": "20221010214521"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "属性需要定义在类中，又叫做成员变量；而定义在方法中的变量叫做局部变量。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214522-a9j1ia4",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20221010214522-a9j1ia4",
						"updated": "20221010214522"
					},
					"Children": [
						{
							"ID": "20221010214523-5nz5rd2",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214523-5nz5rd2",
								"updated": "20221010214523"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何定义属性？",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214524-wy79f7v",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "a290bGlu",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010214524-wy79f7v",
								"updated": "20221010214524"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "a290bGlu",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "class 类的名字{\n  修饰符 val 属性名称\n}\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214525-r1u58mx",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010214525-r1u58mx",
								"updated": "20221010214525"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public class Person{\n  修饰符 类型 属性名称;\n}\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214526-3l1176r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214526-3l1176r",
								"updated": "20221010214526"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如何使用属性？与方法一样，使用.运算符。首先需要生成类的实例，然后使用实例 +”.”",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "的方式来使用属性。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214527-b4vylf0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214527-b4vylf0",
								"updated": "20221010214527"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "比如：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214528-jvei19g",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "a290bGlu",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010214528-jvei19g",
								"updated": "20221010214528"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "a290bGlu",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "val person = Person()\nperson.age\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214529-rvgtf8q",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010214529-rvgtf8q",
								"updated": "20221010214529"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "Person person = new Person();\nperson.age\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214530-6b2fsl0",
					"Type": "NodeListItem",
					"Data": "6",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 6,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Ng==",
						"Num": 6
					},
					"Properties": {
						"id": "20221010214530-6b2fsl0",
						"updated": "20221010214530"
					},
					"Children": [
						{
							"ID": "20221010214531-1n51iaq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214531-1n51iaq",
								"updated": "20221010214531"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "局部变量使用前必须要声明并赋初值；成员变量使用前必须要声明，但可以不赋初值。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010214532-m00s3nb",
					"Type": "NodeListItem",
					"Data": "7",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 7,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Nw==",
						"Num": 7
					},
					"Properties": {
						"id": "20221010214532-m00s3nb",
						"updated": "20221010214532"
					},
					"Children": [
						{
							"ID": "20221010214533-tlhum0i",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214533-tlhum0i",
								"updated": "20221010214533"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "成员变量与局部变量的联系与区别：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214534-4w6dv2p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214534-4w6dv2p",
								"updated": "20221010214534"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a) 无论是成员变量还是局部变量，使用前都需要声明（定义）。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214535-79zmvf8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214535-79zmvf8",
								"updated": "20221010214535"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "b) 对于局部变量来说，使用前必须要初始化；对于成员变量来说，使用前可以不初",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "始化。如果没有初始化成员变量就开始使用，那么每个类型的成员变量都有一个",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "默认的初始值",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010214536-l8zztu0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214536-l8zztu0",
								"updated": "20221010214536"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "i.     ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "byte"
								},
								{
									"Type": "NodeText",
									"Data": "、",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "short"
								},
								{
									"Type": "NodeText",
									"Data": "、",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "int"
								},
								{
									"Type": "NodeText",
									"Data": "、",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "long"
								},
								{
									"Type": "NodeText",
									"Data": " 类型的初始值为 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "0 "
								}
							]
						},
						{
							"ID": "20221010214537-hamaurk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214537-hamaurk",
								"updated": "20221010214537"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "ii.   ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": " float"
								},
								{
									"Type": "NodeText",
									"Data": "、",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "double"
								},
								{
									"Type": "NodeText",
									"Data": " 类型的初始值为 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "0.0"
								}
							]
						},
						{
							"ID": "20221010214538-tto1p4h",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214538-tto1p4h",
								"updated": "20221010214538"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "iii.   ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "char"
								},
								{
									"Type": "NodeText",
									"Data": " 类型的初始值 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "‘\\u0000’"
								}
							]
						},
						{
							"ID": "20221010214539-601sqhx",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214539-601sqhx",
								"updated": "20221010214539"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "iv.  ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "boolean"
								},
								{
									"Type": "NodeText",
									"Data": " 类型的初始值为 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "false    "
								}
							]
						}
					]
				},
				{
					"ID": "20221010214540-xe3aw96",
					"Type": "NodeListItem",
					"Data": "8",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 8,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "OA==",
						"Num": 8
					},
					"Properties": {
						"id": "20221010214540-xe3aw96",
						"updated": "20221010214540"
					},
					"Children": [
						{
							"ID": "20221010214541-dwrte2r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010214541-dwrte2r",
								"updated": "20221010214541"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "引用类型（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "reference type"
								},
								{
									"Type": "NodeText",
									"Data": "）：引用类型是用在对象上的。一个对象可以被多个引用所指",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "向，但同一时刻，每个引用只能指向唯一的一个对象。如果一个对象被多个引用所指向，",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeSoftBreak",
									"Data": "\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeText",
									"Data": "那么无论哪个引用对对象的属性进行了修改，都会反映到其他的引用当中。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010214633-mvtx2rj",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221010214633-mvtx2rj",
				"style": "color: var(--b3-card-success-color); background-color: var(--b3-card-success-background);",
				"updated": "20221010214508"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e ",
					"Properties": {
						"id": ""
					}
				},
				{
					"ID": "20221010214506-68ycra0",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010214506-68ycra0",
						"updated": "20221010214641"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "文章更新历史",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010214507-bftm4ih",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010214507-bftm4ih",
						"updated": "20221010214507"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022/05/08 feat:新增 Kotlin 语法支持。",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010214508-eaz61y3",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010214508-eaz61y3",
						"updated": "20221010214508"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022/05/08 fix:修改备注。",
							"Properties": {
								"id": ""
							}
						}
					]
				}
			]
		}
	]
}