{
	"ID": "20220930204253-cvu44rx",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16798387",
		"custom-desc": "接口中所声明的方法都是抽象方法。接口中的方法都是public​的。接口中也可以定义成员变量。接口中的成员变量都是publicfinalstatic的。一个类不能既是final又是abstract的。因为abstract的主要目的是啥定义一种约定让子类去实现这种约定而final表示该类不能被继承。这样abstract希望该类可以被继承而final明确说明该类不能被继承两者矛盾。因此一个类不能既是final的又是abstract的。desginpattern（设计模式）。单例模式（singleton）publ",
		"custom-slug": "ava-se-lesson-3-interface_package-and-string",
		"custom-vuepress-slug": "docs/001.后端开发/001.JavaSE/014.Java_SE_Lesson_3_接口_包与字符串.md",
		"custom-wordpress-post-id": "4304",
		"custom-yuque-post-id": "96955751_terwer/note",
		"id": "20220930204253-cvu44rx",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20220930205121-y29jrks\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221011210622-677izzv\u0026quot;,\u0026quot;scrollTop\u0026quot;:2515,\u0026quot;focusId\u0026quot;:\u0026quot;20221011205446-hv7tbsl\u0026quot;,\u0026quot;focusStart\u0026quot;:4,\u0026quot;focusEnd\u0026quot;:4}",
		"tags": "接口,方法,成员,变量,声明",
		"title": "014.Java_SE_Lesson_3：接口、单例模式、包与访问控制",
		"updated": "20221024131519"
	},
	"Children": [
		{
			"ID": "20220930205121-y29jrks",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20220930205121-y29jrks",
				"updated": "20221010230228"
			},
			"Children": [
				{
					"ID": "20221010223401-zngsf5y",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20221010223401-zngsf5y",
						"updated": "20221010223410"
					},
					"Children": [
						{
							"ID": "20221010223401-29xg2bj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010223401-29xg2bj",
								"updated": "20221010223410"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口中所声明的方法都是抽象方法。接口中的方法都是 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "public"
								},
								{
									"Type": "NodeText",
									"Data": "​ 的。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010223401-2d0soag",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20221010223401-2d0soag",
						"updated": "20221010223419"
					},
					"Children": [
						{
							"ID": "20221010223401-xltshr8",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010223401-xltshr8",
								"updated": "20221010225644"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "接口中也可以定义成员变量。",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "text",
									"TextMarkTextContent": "接口中的成员变量都是 "
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "code text",
									"TextMarkTextContent": "public"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "text",
									"TextMarkTextContent": " ， "
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "code text",
									"TextMarkTextContent": "final"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "text",
									"TextMarkTextContent": " ， "
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "code text",
									"TextMarkTextContent": "static"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": "",
										"style": "color: var(--b3-font-color8);"
									},
									"TextMarkType": "text",
									"TextMarkTextContent": " 的。"
								},
								{
									"Type": "NodeKramdownSpanIAL",
									"Data": "{: style=\"color: var(--b3-font-color8);\"}",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221010223401-g9mc2um",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20221010223401-g9mc2um",
						"updated": "20221010230228"
					},
					"Children": [
						{
							"ID": "20221010223401-q5oi0nc",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010223401-q5oi0nc",
								"updated": "20221010230122"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "一个类不能既是 final 又是 abstract 的。因为 abstract 的主要目的是啥定义一种约定，让子类去实现这种约定，而 final 表示该类不能被继承。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010230125-h8p39c0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010230125-h8p39c0",
								"updated": "20221010230213"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这样 abstract 希望该类可以被继承而 final 明确说明该类不能被继承，两者矛盾。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010230215-r0c4bga",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010230215-r0c4bga",
								"updated": "20221010230228"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因此一个类不能既是 final 的又是 abstract 的。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010225615-l6fogbc",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 4,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "NA==",
				"Num": 4
			},
			"Properties": {
				"id": "20221010225615-l6fogbc",
				"updated": "20221010234821"
			},
			"Children": [
				{
					"ID": "20221010230729-vkwpy65",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20221010230729-vkwpy65",
						"updated": "20221010234821"
					},
					"Children": [
						{
							"ID": "20221010230729-dh4m4px",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010230729-dh4m4px",
								"updated": "20221010230729"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "Desgin Pattern（设计模式）。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010230730-j4338wf",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221010230730-j4338wf",
								"updated": "20221010234821"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "单例模式（Singleton）",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221010231710-3ofd097",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"CodeBlockFenceChar": 96,
							"CodeBlockFenceLen": 3,
							"CodeBlockOpenFence": "YGBg",
							"CodeBlockInfo": "amF2YQ==",
							"CodeBlockCloseFence": "YGBg",
							"Properties": {
								"id": "20221010231710-3ofd097",
								"updated": "20221010231714"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ==",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "public class SingletonTest {\n    public static void main(String[] args) {\n        Singleton s1 = Singleton.getInstance();\n        Singleton s2 = Singleton.getInstance();\n\n        System.out.println(s1 == s2);\n    }\n}\n\nclass Singleton {\n    private static Singleton singleton = new Singleton();\n\n    private Singleton() {\n    }\n\n    public static Singleton getInstance() {\n        return singleton;\n    }\n}\n",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```",
									"CodeBlockFenceLen": 3,
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010233930-4xfr4r5",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010233930-4xfr4r5",
				"updated": "20221010233943"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "或者",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010233943-vi758ty",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YQ==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221010233943-vi758ty",
				"updated": "20221010233946"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YQ==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "public class SingletonTest {\n    public static void main(String[] args) {\n        Singleton s1 = Singleton.getInstance();\n        Singleton s2 = Singleton.getInstance();\n\n        System.out.println(s1 == s2);\n    }\n}\n\nclass Singleton {\n    private static Singleton singleton;\n\n    private Singleton() {\n    }\n\n    public static Singleton getInstance() {\n        if (null == singleton) {\n            singleton = new Singleton();\n        }\n        return singleton;\n    }\n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010234006-rqkr18i",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221010234006-rqkr18i",
				"style": "霞鹜文楷\u0026amp;amp;amp;quot;;霞鹜文楷\u0026amp;amp;quot;;font-family: \u0026amp;quot;霞鹜文楷\u0026amp;quot;;",
				"updated": "20221010234032"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意：方式二，在多线程的时候，可能会出现线程不安全，不是单例的情况。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221010234550-6lyod9e",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 5,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "NQ==",
				"Num": 5
			},
			"Properties": {
				"id": "20221010234550-6lyod9e",
				"updated": "20221011204339"
			},
			"Children": [
				{
					"ID": "20221011202942-eztvm6q",
					"Type": "NodeListItem",
					"Data": "5",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 5,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NQ==",
						"Num": 5
					},
					"Properties": {
						"id": "20221011202942-eztvm6q",
						"updated": "20221011204339"
					},
					"Children": [
						{
							"ID": "20221011202942-3pnv7ly",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011202942-3pnv7ly",
								"updated": "20221011204339"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "包（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "package"
								},
								{
									"Type": "NodeText",
									"Data": "）",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011201625-di7szlq",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011201625-di7szlq",
				"updated": "20221011201724"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "用于将完成不同功能的类分门别类，放在不同的目录（包）下。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221011201724-pfe28fp",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011201724-pfe28fp",
				"updated": "20221011201749"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "包命名规则：将公司域名反转作为包名。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221011201756-g3os95v",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011201756-g3os95v",
				"updated": "20221011201838"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "www.terwer.space，包名：space.terwer",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221011201757-c4ywjnt",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011201757-c4ywjnt",
				"updated": "20221011202025"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对于包名：每个字母都是小写。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221011202727-78l8d54",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011202727-78l8d54",
				"updated": "20221011202842"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "如果定义类的时候，没有使用 package，那么 Java 认为我们的包位于默认的包里面（default package）。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221011201758-ctrmjwa",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 6,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "Ng==",
				"Num": 6
			},
			"Properties": {
				"id": "20221011201758-ctrmjwa",
				"updated": "20221011203923"
			},
			"Children": [
				{
					"ID": "20221011202939-hqr1f54",
					"Type": "NodeListItem",
					"Data": "6",
					"ListData": {
						"Typ": 1,
						"Start": 6,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Ng==",
						"Num": 6
					},
					"Properties": {
						"fold": "0",
						"id": "20221011202939-hqr1f54",
						"updated": "20221011203923"
					},
					"Children": [
						{
							"ID": "20221011202939-0nzdy3d",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011202939-0nzdy3d",
								"updated": "20221011203559"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "编译带有 package 声明的 java 源文件有两种方式",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011203602-8fjejqu",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011203602-8fjejqu",
								"updated": "20221011203733"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a）直接编译，然后根据类中所定义的包名，逐一手工建立目录结构，最后将生成的 class 文件拷贝该目录（较麻烦，很少使用）。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011203714-bnt4nnv",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011203714-bnt4nnv",
								"updated": "20221011203923"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "b）使用编译参数 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "-d"
								},
								{
									"Type": "NodeText",
									"Data": "​ ，方式为 ",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "javac -d . 源文件.java"
								},
								{
									"Type": "NodeText",
									"Data": " ，这样编译后，编译器会自动帮我们建立好包对应的目录结构。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011204156-k29ep1z",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 7,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "Nw==",
				"Num": 7
			},
			"Properties": {
				"id": "20221011204156-k29ep1z",
				"updated": "20221011204241"
			},
			"Children": [
				{
					"ID": "20221011204159-p4q6l2q",
					"Type": "NodeListItem",
					"Data": "7",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 7,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Nw==",
						"Num": 7
					},
					"Properties": {
						"id": "20221011204159-p4q6l2q",
						"updated": "20221011204241"
					},
					"Children": [
						{
							"ID": "20221011204159-k7by1ej",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011204159-k7by1ej",
								"updated": "20221011204241"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "有两个报名。分别是 aa.bb.cc 与 aa.bb.cc.dd，那么我们称后者为前者的子包。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011204317-o7rk6iy",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 8,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "OA==",
				"Num": 8
			},
			"Properties": {
				"id": "20221011204317-o7rk6iy",
				"updated": "20221011204407"
			},
			"Children": [
				{
					"ID": "20221011204323-22z7o70",
					"Type": "NodeListItem",
					"Data": "8",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 8,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "OA==",
						"Num": 8
					},
					"Properties": {
						"id": "20221011204323-22z7o70",
						"updated": "20221011204407"
					},
					"Children": [
						{
							"ID": "20221011204323-v9w38f0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011204323-v9w38f0",
								"updated": "20221011204407"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "导入（",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "import"
								},
								{
									"Type": "NodeText",
									"Data": "​）：将使用 package 分离的各个类导入回来，让编译器能够找到所需的类。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011205038-5bev4d9",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 9,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "OQ==",
				"Num": 9
			},
			"Properties": {
				"id": "20221011205038-5bev4d9",
				"updated": "20221011205122"
			},
			"Children": [
				{
					"ID": "20221011205041-a4rzl3i",
					"Type": "NodeListItem",
					"Data": "9",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 9,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "OQ==",
						"Num": 9
					},
					"Properties": {
						"id": "20221011205041-a4rzl3i",
						"updated": "20221011205122"
					},
					"Children": [
						{
							"ID": "20221011205041-gw4wd8j",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205041-gw4wd8j",
								"updated": "20221011205122"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "import 的语法：",
									"Properties": {
										"id": ""
									}
								},
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "import space.terwer.PackageTest;"
								},
								{
									"Type": "NodeText",
									"Data": "​",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011205115-rjzz9bs",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 10,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MTA=",
				"Num": 10
			},
			"Properties": {
				"id": "20221011205115-rjzz9bs",
				"updated": "20221011205410"
			},
			"Children": [
				{
					"ID": "20221011205306-2dxlcbv",
					"Type": "NodeListItem",
					"Data": "10",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 10,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTA=",
						"Num": 10
					},
					"Properties": {
						"id": "20221011205306-2dxlcbv",
						"updated": "20221011205410"
					},
					"Children": [
						{
							"ID": "20221011205306-i0wxc6r",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205306-i0wxc6r",
								"updated": "20221011205410"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "import space.terwer.*"
								},
								{
									"Type": "NodeText",
									"Data": " ，博士导入 space.terwer 包下面的所有类。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221011205339-oq1acyr",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Start": 11,
				"Delimiter": 46,
				"Padding": 4,
				"Marker": "MTE=",
				"Num": 11
			},
			"Properties": {
				"id": "20221011205339-oq1acyr",
				"updated": "20221024131519"
			},
			"Children": [
				{
					"ID": "20221011205341-i106gbo",
					"Type": "NodeListItem",
					"Data": "11",
					"ListData": {
						"Typ": 1,
						"Start": 11,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTE=",
						"Num": 11
					},
					"Properties": {
						"id": "20221011205341-i106gbo",
						"updated": "20221024131519"
					},
					"Children": [
						{
							"ID": "20221011205341-eb4ztdn",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205341-eb4ztdn",
								"updated": "20221011205415"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "import aa.bb.*"
								},
								{
									"Type": "NodeText",
									"Data": "​​​​​​ 并不会导入 aa.bb.cc 包下面的类。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011205420-u8f8dr6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205420-u8f8dr6",
								"updated": "20221011205426"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "这样写：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011205446-hv7tbsl",
							"Type": "NodeCodeBlock",
							"IsFencedCodeBlock": true,
							"Properties": {
								"id": "20221011205446-hv7tbsl",
								"updated": "20221024131519"
							},
							"Children": [
								{
									"Type": "NodeCodeBlockFenceOpenMarker",
									"Data": "```"
								},
								{
									"Type": "NodeCodeBlockFenceInfoMarker",
									"CodeBlockInfo": "amF2YQ=="
								},
								{
									"Type": "NodeCodeBlockCode",
									"Data": "import aa.bb.*;\nimport aa.bb.cc,*;\n"
								},
								{
									"Type": "NodeCodeBlockFenceCloseMarker",
									"Data": "```"
								}
							]
						}
					]
				},
				{
					"ID": "20221011205506-6h5rw69",
					"Type": "NodeListItem",
					"Data": "12",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 12,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTI=",
						"Num": 12
					},
					"Properties": {
						"id": "20221011205506-6h5rw69",
						"updated": "20221011205620"
					},
					"Children": [
						{
							"ID": "20221011205506-se4haag",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205506-se4haag",
								"updated": "20221011205534"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "关于 package、import、class 的顺序问题：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011205535-rvgr4o0",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205535-rvgr4o0",
								"updated": "20221011205556"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "a）首先要定义包（package），可选",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011205556-3h3606c",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205556-3h3606c",
								"updated": "20221011205611"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "b）接下来使用 import 进行导入，可选",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011205611-z8hd8bk",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205611-z8hd8bk",
								"updated": "20221011205713"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "c）然后才是 class 或者 interface 的定义。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221011205717-4kec77o",
					"Type": "NodeListItem",
					"Data": "13",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 13,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTM=",
						"Num": 13
					},
					"Properties": {
						"id": "20221011205717-4kec77o",
						"updated": "20221011205927"
					},
					"Children": [
						{
							"ID": "20221011205717-yc84s3p",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011205717-yc84s3p",
								"updated": "20221011205927"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "如果两个类在同一个包下面，那么不需要导入，直接使用即可。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221011210000-dokkbsa",
					"Type": "NodeListItem",
					"Data": "14",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 14,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTQ=",
						"Num": 14
					},
					"Properties": {
						"id": "20221011210000-dokkbsa",
						"updated": "20221011212200"
					},
					"Children": [
						{
							"ID": "20221011210000-g61k1vi",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011210000-g61k1vi",
								"updated": "20221011210037"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "访问修饰符（access modifier）",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011210156-5n3is18",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011210156-5n3is18",
								"updated": "20221011210416"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "1）public（公共的）：被 public 修饰的属性和方法可以被所有类访问。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011210338-df447aj",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011210338-df447aj",
								"updated": "20221011212200"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "2）protected（受保护的）：被 protected 修饰的属性和方法可以在类内部、相同包以及该类额子类所访问。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011210353-wvy4mrh",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011210353-wvy4mrh",
								"updated": "20221011210448"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "3）private（私有的）：被 private 修饰的属性和方法只能在定义该属性和方法的类的内部使用。",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011210459-sc5dhny",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011210459-sc5dhny",
								"updated": "20221011210558"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "4）默认（不加访问修饰符）：在类内部以及相同包下面的类所使用。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221011214917-vjp64p8",
					"Type": "NodeListItem",
					"Data": "15",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 15,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTU=",
						"Num": 15
					},
					"Properties": {
						"id": "20221011214917-vjp64p8",
						"updated": "20221011214917"
					},
					"Children": [
						{
							"ID": "20221011214917-1vajce7",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011214917-1vajce7",
								"updated": "20221011214955"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "instanceof：判断某个对象是否是某个类的实例。用法：",
									"Properties": {
										"id": ""
									}
								}
							]
						},
						{
							"ID": "20221011214955-9an2aix",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011214955-9an2aix",
								"updated": "20221011215156"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "引用名 instanceof 类名（接口名）"
								},
								{
									"Type": "NodeText",
									"Data": "，返回一个 boolean 值。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20221011215021-jonvqnn",
					"Type": "NodeListItem",
					"Data": "16",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 16,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTY=",
						"Num": 16
					},
					"Properties": {
						"id": "20221011215021-jonvqnn",
						"updated": "20221011215556"
					},
					"Children": [
						{
							"ID": "20221011215021-8gnmfyq",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011215021-8gnmfyq",
								"updated": "20221011215556"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "People people = new Man();"
								}
							]
						}
					]
				},
				{
					"ID": "20221011215449-lwsthtv",
					"Type": "NodeListItem",
					"Data": "17",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 17,
						"Delimiter": 46,
						"Padding": 4,
						"Marker": "MTc=",
						"Num": 17
					},
					"Properties": {
						"id": "20221011215449-lwsthtv",
						"updated": "20221011215559"
					},
					"Children": [
						{
							"ID": "20221011215449-javpum4",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011215449-javpum4",
								"updated": "20221011215559"
							},
							"Children": [
								{
									"Type": "NodeTextMark",
									"Properties": {
										"id": ""
									},
									"TextMarkType": "code",
									"TextMarkTextContent": "System.out.println(people instanceof People);// 结果为true"
								}
							]
						},
						{
							"ID": "20221011215520-atsxd60",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20221011215520-atsxd60",
								"updated": "20221011215549"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "因为 Man 是 People 的子类，因此 Man 可以看做是 People 的实例。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20221010234034-1kjlrmq",
			"Type": "NodeBlockquote",
			"Properties": {
				"id": "20221010234034-1kjlrmq",
				"style": "color: var(--b3-card-success-color); background-color: var(--b3-card-success-background);",
				"updated": "20221010234211"
			},
			"Children": [
				{
					"Type": "NodeBlockquoteMarker",
					"Data": "\u003e ",
					"Properties": {
						"id": ""
					}
				},
				{
					"ID": "20221010234133-78g07es",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010234133-78g07es",
						"updated": "20221010234139"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "文章更新历史",
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"ID": "20221010234140-n6o3j6s",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20221010234140-n6o3j6s",
						"updated": "20221010234211"
					},
					"Children": [
						{
							"Type": "NodeText",
							"Data": "2022-10-10 feat:初稿。",
							"Properties": {
								"id": ""
							}
						}
					]
				}
			]
		},
		{
			"ID": "20221011210622-677izzv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221011210622-677izzv",
				"updated": "20221011210622"
			}
		}
	]
}