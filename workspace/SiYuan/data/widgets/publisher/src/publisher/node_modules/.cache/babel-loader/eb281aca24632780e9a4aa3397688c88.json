{"ast":null,"code":"(function (root) {\n  'use strict';\n  /**\n   * charMap\n   * @type {Object}\n   */\n\n  var charMap = {\n    // latin\n    'À': 'A',\n    'Á': 'A',\n    'Â': 'A',\n    'Ã': 'A',\n    'Ä': 'Ae',\n    'Å': 'A',\n    'Æ': 'AE',\n    'Ç': 'C',\n    'È': 'E',\n    'É': 'E',\n    'Ê': 'E',\n    'Ë': 'E',\n    'Ì': 'I',\n    'Í': 'I',\n    'Î': 'I',\n    'Ï': 'I',\n    'Ð': 'D',\n    'Ñ': 'N',\n    'Ò': 'O',\n    'Ó': 'O',\n    'Ô': 'O',\n    'Õ': 'O',\n    'Ö': 'Oe',\n    'Ő': 'O',\n    'Ø': 'O',\n    'Ù': 'U',\n    'Ú': 'U',\n    'Û': 'U',\n    'Ü': 'Ue',\n    'Ű': 'U',\n    'Ý': 'Y',\n    'Þ': 'TH',\n    'ß': 'ss',\n    'à': 'a',\n    'á': 'a',\n    'â': 'a',\n    'ã': 'a',\n    'ä': 'ae',\n    'å': 'a',\n    'æ': 'ae',\n    'ç': 'c',\n    'è': 'e',\n    'é': 'e',\n    'ê': 'e',\n    'ë': 'e',\n    'ì': 'i',\n    'í': 'i',\n    'î': 'i',\n    'ï': 'i',\n    'ð': 'd',\n    'ñ': 'n',\n    'ò': 'o',\n    'ó': 'o',\n    'ô': 'o',\n    'õ': 'o',\n    'ö': 'oe',\n    'ő': 'o',\n    'ø': 'o',\n    'ù': 'u',\n    'ú': 'u',\n    'û': 'u',\n    'ü': 'ue',\n    'ű': 'u',\n    'ý': 'y',\n    'þ': 'th',\n    'ÿ': 'y',\n    'ẞ': 'SS',\n    // language specific\n    // Arabic\n    'ا': 'a',\n    'أ': 'a',\n    'إ': 'i',\n    'آ': 'aa',\n    'ؤ': 'u',\n    'ئ': 'e',\n    'ء': 'a',\n    'ب': 'b',\n    'ت': 't',\n    'ث': 'th',\n    'ج': 'j',\n    'ح': 'h',\n    'خ': 'kh',\n    'د': 'd',\n    'ذ': 'th',\n    'ر': 'r',\n    'ز': 'z',\n    'س': 's',\n    'ش': 'sh',\n    'ص': 's',\n    'ض': 'dh',\n    'ط': 't',\n    'ظ': 'z',\n    'ع': 'a',\n    'غ': 'gh',\n    'ف': 'f',\n    'ق': 'q',\n    'ك': 'k',\n    'ل': 'l',\n    'م': 'm',\n    'ن': 'n',\n    'ه': 'h',\n    'و': 'w',\n    'ي': 'y',\n    'ى': 'a',\n    'ة': 'h',\n    'ﻻ': 'la',\n    'ﻷ': 'laa',\n    'ﻹ': 'lai',\n    'ﻵ': 'laa',\n    // Persian additional characters than Arabic\n    'گ': 'g',\n    'چ': 'ch',\n    'پ': 'p',\n    'ژ': 'zh',\n    'ک': 'k',\n    'ی': 'y',\n    // Arabic diactrics\n    'َ': 'a',\n    'ً': 'an',\n    'ِ': 'e',\n    'ٍ': 'en',\n    'ُ': 'u',\n    'ٌ': 'on',\n    'ْ': '',\n    // Arabic numbers\n    '٠': '0',\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    // Persian numbers\n    '۰': '0',\n    '۱': '1',\n    '۲': '2',\n    '۳': '3',\n    '۴': '4',\n    '۵': '5',\n    '۶': '6',\n    '۷': '7',\n    '۸': '8',\n    '۹': '9',\n    // Burmese consonants\n    'က': 'k',\n    'ခ': 'kh',\n    'ဂ': 'g',\n    'ဃ': 'ga',\n    'င': 'ng',\n    'စ': 's',\n    'ဆ': 'sa',\n    'ဇ': 'z',\n    'စျ': 'za',\n    'ည': 'ny',\n    'ဋ': 't',\n    'ဌ': 'ta',\n    'ဍ': 'd',\n    'ဎ': 'da',\n    'ဏ': 'na',\n    'တ': 't',\n    'ထ': 'ta',\n    'ဒ': 'd',\n    'ဓ': 'da',\n    'န': 'n',\n    'ပ': 'p',\n    'ဖ': 'pa',\n    'ဗ': 'b',\n    'ဘ': 'ba',\n    'မ': 'm',\n    'ယ': 'y',\n    'ရ': 'ya',\n    'လ': 'l',\n    'ဝ': 'w',\n    'သ': 'th',\n    'ဟ': 'h',\n    'ဠ': 'la',\n    'အ': 'a',\n    // consonant character combos\n    'ြ': 'y',\n    'ျ': 'ya',\n    'ွ': 'w',\n    'ြွ': 'yw',\n    'ျွ': 'ywa',\n    'ှ': 'h',\n    // independent vowels\n    'ဧ': 'e',\n    '၏': '-e',\n    'ဣ': 'i',\n    'ဤ': '-i',\n    'ဉ': 'u',\n    'ဦ': '-u',\n    'ဩ': 'aw',\n    'သြော': 'aw',\n    'ဪ': 'aw',\n    // numbers\n    '၀': '0',\n    '၁': '1',\n    '၂': '2',\n    '၃': '3',\n    '၄': '4',\n    '၅': '5',\n    '၆': '6',\n    '၇': '7',\n    '၈': '8',\n    '၉': '9',\n    // virama and tone marks which are silent in transliteration\n    '္': '',\n    '့': '',\n    'း': '',\n    // Czech\n    'č': 'c',\n    'ď': 'd',\n    'ě': 'e',\n    'ň': 'n',\n    'ř': 'r',\n    'š': 's',\n    'ť': 't',\n    'ů': 'u',\n    'ž': 'z',\n    'Č': 'C',\n    'Ď': 'D',\n    'Ě': 'E',\n    'Ň': 'N',\n    'Ř': 'R',\n    'Š': 'S',\n    'Ť': 'T',\n    'Ů': 'U',\n    'Ž': 'Z',\n    // Dhivehi\n    'ހ': 'h',\n    'ށ': 'sh',\n    'ނ': 'n',\n    'ރ': 'r',\n    'ބ': 'b',\n    'ޅ': 'lh',\n    'ކ': 'k',\n    'އ': 'a',\n    'ވ': 'v',\n    'މ': 'm',\n    'ފ': 'f',\n    'ދ': 'dh',\n    'ތ': 'th',\n    'ލ': 'l',\n    'ގ': 'g',\n    'ޏ': 'gn',\n    'ސ': 's',\n    'ޑ': 'd',\n    'ޒ': 'z',\n    'ޓ': 't',\n    'ޔ': 'y',\n    'ޕ': 'p',\n    'ޖ': 'j',\n    'ޗ': 'ch',\n    'ޘ': 'tt',\n    'ޙ': 'hh',\n    'ޚ': 'kh',\n    'ޛ': 'th',\n    'ޜ': 'z',\n    'ޝ': 'sh',\n    'ޞ': 's',\n    'ޟ': 'd',\n    'ޠ': 't',\n    'ޡ': 'z',\n    'ޢ': 'a',\n    'ޣ': 'gh',\n    'ޤ': 'q',\n    'ޥ': 'w',\n    'ަ': 'a',\n    'ާ': 'aa',\n    'ި': 'i',\n    'ީ': 'ee',\n    'ު': 'u',\n    'ޫ': 'oo',\n    'ެ': 'e',\n    'ޭ': 'ey',\n    'ޮ': 'o',\n    'ޯ': 'oa',\n    'ް': '',\n    // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n    // National system (2002)\n    'ა': 'a',\n    'ბ': 'b',\n    'გ': 'g',\n    'დ': 'd',\n    'ე': 'e',\n    'ვ': 'v',\n    'ზ': 'z',\n    'თ': 't',\n    'ი': 'i',\n    'კ': 'k',\n    'ლ': 'l',\n    'მ': 'm',\n    'ნ': 'n',\n    'ო': 'o',\n    'პ': 'p',\n    'ჟ': 'zh',\n    'რ': 'r',\n    'ს': 's',\n    'ტ': 't',\n    'უ': 'u',\n    'ფ': 'p',\n    'ქ': 'k',\n    'ღ': 'gh',\n    'ყ': 'q',\n    'შ': 'sh',\n    'ჩ': 'ch',\n    'ც': 'ts',\n    'ძ': 'dz',\n    'წ': 'ts',\n    'ჭ': 'ch',\n    'ხ': 'kh',\n    'ჯ': 'j',\n    'ჰ': 'h',\n    // Greek\n    'α': 'a',\n    'β': 'v',\n    'γ': 'g',\n    'δ': 'd',\n    'ε': 'e',\n    'ζ': 'z',\n    'η': 'i',\n    'θ': 'th',\n    'ι': 'i',\n    'κ': 'k',\n    'λ': 'l',\n    'μ': 'm',\n    'ν': 'n',\n    'ξ': 'ks',\n    'ο': 'o',\n    'π': 'p',\n    'ρ': 'r',\n    'σ': 's',\n    'τ': 't',\n    'υ': 'y',\n    'φ': 'f',\n    'χ': 'x',\n    'ψ': 'ps',\n    'ω': 'o',\n    'ά': 'a',\n    'έ': 'e',\n    'ί': 'i',\n    'ό': 'o',\n    'ύ': 'y',\n    'ή': 'i',\n    'ώ': 'o',\n    'ς': 's',\n    'ϊ': 'i',\n    'ΰ': 'y',\n    'ϋ': 'y',\n    'ΐ': 'i',\n    'Α': 'A',\n    'Β': 'B',\n    'Γ': 'G',\n    'Δ': 'D',\n    'Ε': 'E',\n    'Ζ': 'Z',\n    'Η': 'I',\n    'Θ': 'TH',\n    'Ι': 'I',\n    'Κ': 'K',\n    'Λ': 'L',\n    'Μ': 'M',\n    'Ν': 'N',\n    'Ξ': 'KS',\n    'Ο': 'O',\n    'Π': 'P',\n    'Ρ': 'R',\n    'Σ': 'S',\n    'Τ': 'T',\n    'Υ': 'Y',\n    'Φ': 'F',\n    'Χ': 'X',\n    'Ψ': 'PS',\n    'Ω': 'O',\n    'Ά': 'A',\n    'Έ': 'E',\n    'Ί': 'I',\n    'Ό': 'O',\n    'Ύ': 'Y',\n    'Ή': 'I',\n    'Ώ': 'O',\n    'Ϊ': 'I',\n    'Ϋ': 'Y',\n    // Latvian\n    'ā': 'a',\n    // 'č': 'c', // duplicate\n    'ē': 'e',\n    'ģ': 'g',\n    'ī': 'i',\n    'ķ': 'k',\n    'ļ': 'l',\n    'ņ': 'n',\n    // 'š': 's', // duplicate\n    'ū': 'u',\n    // 'ž': 'z', // duplicate\n    'Ā': 'A',\n    // 'Č': 'C', // duplicate\n    'Ē': 'E',\n    'Ģ': 'G',\n    'Ī': 'I',\n    'Ķ': 'k',\n    'Ļ': 'L',\n    'Ņ': 'N',\n    // 'Š': 'S', // duplicate\n    'Ū': 'U',\n    // 'Ž': 'Z', // duplicate\n    // Macedonian\n    'Ќ': 'Kj',\n    'ќ': 'kj',\n    'Љ': 'Lj',\n    'љ': 'lj',\n    'Њ': 'Nj',\n    'њ': 'nj',\n    'Тс': 'Ts',\n    'тс': 'ts',\n    // Polish\n    'ą': 'a',\n    'ć': 'c',\n    'ę': 'e',\n    'ł': 'l',\n    'ń': 'n',\n    // 'ó': 'o', // duplicate\n    'ś': 's',\n    'ź': 'z',\n    'ż': 'z',\n    'Ą': 'A',\n    'Ć': 'C',\n    'Ę': 'E',\n    'Ł': 'L',\n    'Ń': 'N',\n    'Ś': 'S',\n    'Ź': 'Z',\n    'Ż': 'Z',\n    // Ukranian\n    'Є': 'Ye',\n    'І': 'I',\n    'Ї': 'Yi',\n    'Ґ': 'G',\n    'є': 'ye',\n    'і': 'i',\n    'ї': 'yi',\n    'ґ': 'g',\n    // Romanian\n    'ă': 'a',\n    'Ă': 'A',\n    'ș': 's',\n    'Ș': 'S',\n    // 'ş': 's', // duplicate\n    // 'Ş': 'S', // duplicate\n    'ț': 't',\n    'Ț': 'T',\n    'ţ': 't',\n    'Ţ': 'T',\n    // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n    // ICAO\n    'а': 'a',\n    'б': 'b',\n    'в': 'v',\n    'г': 'g',\n    'д': 'd',\n    'е': 'e',\n    'ё': 'yo',\n    'ж': 'zh',\n    'з': 'z',\n    'и': 'i',\n    'й': 'i',\n    'к': 'k',\n    'л': 'l',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'p',\n    'р': 'r',\n    'с': 's',\n    'т': 't',\n    'у': 'u',\n    'ф': 'f',\n    'х': 'kh',\n    'ц': 'c',\n    'ч': 'ch',\n    'ш': 'sh',\n    'щ': 'sh',\n    'ъ': '',\n    'ы': 'y',\n    'ь': '',\n    'э': 'e',\n    'ю': 'yu',\n    'я': 'ya',\n    'А': 'A',\n    'Б': 'B',\n    'В': 'V',\n    'Г': 'G',\n    'Д': 'D',\n    'Е': 'E',\n    'Ё': 'Yo',\n    'Ж': 'Zh',\n    'З': 'Z',\n    'И': 'I',\n    'Й': 'I',\n    'К': 'K',\n    'Л': 'L',\n    'М': 'M',\n    'Н': 'N',\n    'О': 'O',\n    'П': 'P',\n    'Р': 'R',\n    'С': 'S',\n    'Т': 'T',\n    'У': 'U',\n    'Ф': 'F',\n    'Х': 'Kh',\n    'Ц': 'C',\n    'Ч': 'Ch',\n    'Ш': 'Sh',\n    'Щ': 'Sh',\n    'Ъ': '',\n    'Ы': 'Y',\n    'Ь': '',\n    'Э': 'E',\n    'Ю': 'Yu',\n    'Я': 'Ya',\n    // Serbian\n    'ђ': 'dj',\n    'ј': 'j',\n    // 'љ': 'lj',  // duplicate\n    // 'њ': 'nj', // duplicate\n    'ћ': 'c',\n    'џ': 'dz',\n    'Ђ': 'Dj',\n    'Ј': 'j',\n    // 'Љ': 'Lj', // duplicate\n    // 'Њ': 'Nj', // duplicate\n    'Ћ': 'C',\n    'Џ': 'Dz',\n    // Slovak\n    'ľ': 'l',\n    'ĺ': 'l',\n    'ŕ': 'r',\n    'Ľ': 'L',\n    'Ĺ': 'L',\n    'Ŕ': 'R',\n    // Turkish\n    'ş': 's',\n    'Ş': 'S',\n    'ı': 'i',\n    'İ': 'I',\n    // 'ç': 'c', // duplicate\n    // 'Ç': 'C', // duplicate\n    // 'ü': 'u', // duplicate, see langCharMap\n    // 'Ü': 'U', // duplicate, see langCharMap\n    // 'ö': 'o', // duplicate, see langCharMap\n    // 'Ö': 'O', // duplicate, see langCharMap\n    'ğ': 'g',\n    'Ğ': 'G',\n    // Vietnamese\n    'ả': 'a',\n    'Ả': 'A',\n    'ẳ': 'a',\n    'Ẳ': 'A',\n    'ẩ': 'a',\n    'Ẩ': 'A',\n    'đ': 'd',\n    'Đ': 'D',\n    'ẹ': 'e',\n    'Ẹ': 'E',\n    'ẽ': 'e',\n    'Ẽ': 'E',\n    'ẻ': 'e',\n    'Ẻ': 'E',\n    'ế': 'e',\n    'Ế': 'E',\n    'ề': 'e',\n    'Ề': 'E',\n    'ệ': 'e',\n    'Ệ': 'E',\n    'ễ': 'e',\n    'Ễ': 'E',\n    'ể': 'e',\n    'Ể': 'E',\n    'ỏ': 'o',\n    'ọ': 'o',\n    'Ọ': 'o',\n    'ố': 'o',\n    'Ố': 'O',\n    'ồ': 'o',\n    'Ồ': 'O',\n    'ổ': 'o',\n    'Ổ': 'O',\n    'ộ': 'o',\n    'Ộ': 'O',\n    'ỗ': 'o',\n    'Ỗ': 'O',\n    'ơ': 'o',\n    'Ơ': 'O',\n    'ớ': 'o',\n    'Ớ': 'O',\n    'ờ': 'o',\n    'Ờ': 'O',\n    'ợ': 'o',\n    'Ợ': 'O',\n    'ỡ': 'o',\n    'Ỡ': 'O',\n    'Ở': 'o',\n    'ở': 'o',\n    'ị': 'i',\n    'Ị': 'I',\n    'ĩ': 'i',\n    'Ĩ': 'I',\n    'ỉ': 'i',\n    'Ỉ': 'i',\n    'ủ': 'u',\n    'Ủ': 'U',\n    'ụ': 'u',\n    'Ụ': 'U',\n    'ũ': 'u',\n    'Ũ': 'U',\n    'ư': 'u',\n    'Ư': 'U',\n    'ứ': 'u',\n    'Ứ': 'U',\n    'ừ': 'u',\n    'Ừ': 'U',\n    'ự': 'u',\n    'Ự': 'U',\n    'ữ': 'u',\n    'Ữ': 'U',\n    'ử': 'u',\n    'Ử': 'ư',\n    'ỷ': 'y',\n    'Ỷ': 'y',\n    'ỳ': 'y',\n    'Ỳ': 'Y',\n    'ỵ': 'y',\n    'Ỵ': 'Y',\n    'ỹ': 'y',\n    'Ỹ': 'Y',\n    'ạ': 'a',\n    'Ạ': 'A',\n    'ấ': 'a',\n    'Ấ': 'A',\n    'ầ': 'a',\n    'Ầ': 'A',\n    'ậ': 'a',\n    'Ậ': 'A',\n    'ẫ': 'a',\n    'Ẫ': 'A',\n    // 'ă': 'a', // duplicate\n    // 'Ă': 'A', // duplicate\n    'ắ': 'a',\n    'Ắ': 'A',\n    'ằ': 'a',\n    'Ằ': 'A',\n    'ặ': 'a',\n    'Ặ': 'A',\n    'ẵ': 'a',\n    'Ẵ': 'A',\n    \"⓪\": \"0\",\n    \"①\": \"1\",\n    \"②\": \"2\",\n    \"③\": \"3\",\n    \"④\": \"4\",\n    \"⑤\": \"5\",\n    \"⑥\": \"6\",\n    \"⑦\": \"7\",\n    \"⑧\": \"8\",\n    \"⑨\": \"9\",\n    \"⑩\": \"10\",\n    \"⑪\": \"11\",\n    \"⑫\": \"12\",\n    \"⑬\": \"13\",\n    \"⑭\": \"14\",\n    \"⑮\": \"15\",\n    \"⑯\": \"16\",\n    \"⑰\": \"17\",\n    \"⑱\": \"18\",\n    \"⑲\": \"18\",\n    \"⑳\": \"18\",\n    \"⓵\": \"1\",\n    \"⓶\": \"2\",\n    \"⓷\": \"3\",\n    \"⓸\": \"4\",\n    \"⓹\": \"5\",\n    \"⓺\": \"6\",\n    \"⓻\": \"7\",\n    \"⓼\": \"8\",\n    \"⓽\": \"9\",\n    \"⓾\": \"10\",\n    \"⓿\": \"0\",\n    \"⓫\": \"11\",\n    \"⓬\": \"12\",\n    \"⓭\": \"13\",\n    \"⓮\": \"14\",\n    \"⓯\": \"15\",\n    \"⓰\": \"16\",\n    \"⓱\": \"17\",\n    \"⓲\": \"18\",\n    \"⓳\": \"19\",\n    \"⓴\": \"20\",\n    \"Ⓐ\": \"A\",\n    \"Ⓑ\": \"B\",\n    \"Ⓒ\": \"C\",\n    \"Ⓓ\": \"D\",\n    \"Ⓔ\": \"E\",\n    \"Ⓕ\": \"F\",\n    \"Ⓖ\": \"G\",\n    \"Ⓗ\": \"H\",\n    \"Ⓘ\": \"I\",\n    \"Ⓙ\": \"J\",\n    \"Ⓚ\": \"K\",\n    \"Ⓛ\": \"L\",\n    \"Ⓜ\": \"M\",\n    \"Ⓝ\": \"N\",\n    \"Ⓞ\": \"O\",\n    \"Ⓟ\": \"P\",\n    \"Ⓠ\": \"Q\",\n    \"Ⓡ\": \"R\",\n    \"Ⓢ\": \"S\",\n    \"Ⓣ\": \"T\",\n    \"Ⓤ\": \"U\",\n    \"Ⓥ\": \"V\",\n    \"Ⓦ\": \"W\",\n    \"Ⓧ\": \"X\",\n    \"Ⓨ\": \"Y\",\n    \"Ⓩ\": \"Z\",\n    \"ⓐ\": \"a\",\n    \"ⓑ\": \"b\",\n    \"ⓒ\": \"c\",\n    \"ⓓ\": \"d\",\n    \"ⓔ\": \"e\",\n    \"ⓕ\": \"f\",\n    \"ⓖ\": \"g\",\n    \"ⓗ\": \"h\",\n    \"ⓘ\": \"i\",\n    \"ⓙ\": \"j\",\n    \"ⓚ\": \"k\",\n    \"ⓛ\": \"l\",\n    \"ⓜ\": \"m\",\n    \"ⓝ\": \"n\",\n    \"ⓞ\": \"o\",\n    \"ⓟ\": \"p\",\n    \"ⓠ\": \"q\",\n    \"ⓡ\": \"r\",\n    \"ⓢ\": \"s\",\n    \"ⓣ\": \"t\",\n    \"ⓤ\": \"u\",\n    \"ⓦ\": \"v\",\n    \"ⓥ\": \"w\",\n    \"ⓧ\": \"x\",\n    \"ⓨ\": \"y\",\n    \"ⓩ\": \"z\",\n    // symbols\n    '“': '\"',\n    '”': '\"',\n    '‘': \"'\",\n    '’': \"'\",\n    '∂': 'd',\n    'ƒ': 'f',\n    '™': '(TM)',\n    '©': '(C)',\n    'œ': 'oe',\n    'Œ': 'OE',\n    '®': '(R)',\n    '†': '+',\n    '℠': '(SM)',\n    '…': '...',\n    '˚': 'o',\n    'º': 'o',\n    'ª': 'a',\n    '•': '*',\n    '၊': ',',\n    '။': '.',\n    // currency\n    '$': 'USD',\n    '€': 'EUR',\n    '₢': 'BRN',\n    '₣': 'FRF',\n    '£': 'GBP',\n    '₤': 'ITL',\n    '₦': 'NGN',\n    '₧': 'ESP',\n    '₩': 'KRW',\n    '₪': 'ILS',\n    '₫': 'VND',\n    '₭': 'LAK',\n    '₮': 'MNT',\n    '₯': 'GRD',\n    '₱': 'ARS',\n    '₲': 'PYG',\n    '₳': 'ARA',\n    '₴': 'UAH',\n    '₵': 'GHS',\n    '¢': 'cent',\n    '¥': 'CNY',\n    '元': 'CNY',\n    '円': 'YEN',\n    '﷼': 'IRR',\n    '₠': 'EWE',\n    '฿': 'THB',\n    '₨': 'INR',\n    '₹': 'INR',\n    '₰': 'PF',\n    '₺': 'TRY',\n    '؋': 'AFN',\n    '₼': 'AZN',\n    'лв': 'BGN',\n    '៛': 'KHR',\n    '₡': 'CRC',\n    '₸': 'KZT',\n    'ден': 'MKD',\n    'zł': 'PLN',\n    '₽': 'RUB',\n    '₾': 'GEL'\n  };\n  /**\n   * special look ahead character array\n   * These characters form with consonants to become 'single'/consonant combo\n   * @type [Array]\n   */\n\n  var lookAheadCharArray = [// burmese\n  '်', // Dhivehi\n  'ް'];\n  /**\n   * diatricMap for languages where transliteration changes entirely as more diatrics are added\n   * @type {Object}\n   */\n\n  var diatricMap = {\n    // Burmese\n    // dependent vowels\n    'ာ': 'a',\n    'ါ': 'a',\n    'ေ': 'e',\n    'ဲ': 'e',\n    'ိ': 'i',\n    'ီ': 'i',\n    'ို': 'o',\n    'ု': 'u',\n    'ူ': 'u',\n    'ေါင်': 'aung',\n    'ော': 'aw',\n    'ော်': 'aw',\n    'ေါ': 'aw',\n    'ေါ်': 'aw',\n    '်': '်',\n    // this is special case but the character will be converted to latin in the code\n    'က်': 'et',\n    'ိုက်': 'aik',\n    'ောက်': 'auk',\n    'င်': 'in',\n    'ိုင်': 'aing',\n    'ောင်': 'aung',\n    'စ်': 'it',\n    'ည်': 'i',\n    'တ်': 'at',\n    'ိတ်': 'eik',\n    'ုတ်': 'ok',\n    'ွတ်': 'ut',\n    'ေတ်': 'it',\n    'ဒ်': 'd',\n    'ိုဒ်': 'ok',\n    'ုဒ်': 'ait',\n    'န်': 'an',\n    'ာန်': 'an',\n    'ိန်': 'ein',\n    'ုန်': 'on',\n    'ွန်': 'un',\n    'ပ်': 'at',\n    'ိပ်': 'eik',\n    'ုပ်': 'ok',\n    'ွပ်': 'ut',\n    'န်ုပ်': 'nub',\n    'မ်': 'an',\n    'ိမ်': 'ein',\n    'ုမ်': 'on',\n    'ွမ်': 'un',\n    'ယ်': 'e',\n    'ိုလ်': 'ol',\n    'ဉ်': 'in',\n    'ံ': 'an',\n    'ိံ': 'ein',\n    'ုံ': 'on',\n    // Dhivehi\n    'ައް': 'ah',\n    'ަށް': 'ah'\n  };\n  /**\n   * langCharMap language specific characters translations\n   * @type   {Object}\n   */\n\n  var langCharMap = {\n    'en': {},\n    // default language\n    'az': {\n      // Azerbaijani\n      'ç': 'c',\n      'ə': 'e',\n      'ğ': 'g',\n      'ı': 'i',\n      'ö': 'o',\n      'ş': 's',\n      'ü': 'u',\n      'Ç': 'C',\n      'Ə': 'E',\n      'Ğ': 'G',\n      'İ': 'I',\n      'Ö': 'O',\n      'Ş': 'S',\n      'Ü': 'U'\n    },\n    'cs': {\n      // Czech\n      'č': 'c',\n      'ď': 'd',\n      'ě': 'e',\n      'ň': 'n',\n      'ř': 'r',\n      'š': 's',\n      'ť': 't',\n      'ů': 'u',\n      'ž': 'z',\n      'Č': 'C',\n      'Ď': 'D',\n      'Ě': 'E',\n      'Ň': 'N',\n      'Ř': 'R',\n      'Š': 'S',\n      'Ť': 'T',\n      'Ů': 'U',\n      'Ž': 'Z'\n    },\n    'fi': {\n      // Finnish\n      // 'å': 'a', duplicate see charMap/latin\n      // 'Å': 'A', duplicate see charMap/latin\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      'ö': 'o',\n      // ok\n      'Ö': 'O' // ok\n\n    },\n    'hu': {\n      // Hungarian\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      // 'á': 'a', duplicate see charMap/latin\n      // 'Á': 'A', duplicate see charMap/latin\n      'ö': 'o',\n      // ok\n      'Ö': 'O',\n      // ok\n      // 'ő': 'o', duplicate see charMap/latin\n      // 'Ő': 'O', duplicate see charMap/latin\n      'ü': 'u',\n      'Ü': 'U',\n      'ű': 'u',\n      'Ű': 'U'\n    },\n    'lt': {\n      // Lithuanian\n      'ą': 'a',\n      'č': 'c',\n      'ę': 'e',\n      'ė': 'e',\n      'į': 'i',\n      'š': 's',\n      'ų': 'u',\n      'ū': 'u',\n      'ž': 'z',\n      'Ą': 'A',\n      'Č': 'C',\n      'Ę': 'E',\n      'Ė': 'E',\n      'Į': 'I',\n      'Š': 'S',\n      'Ų': 'U',\n      'Ū': 'U'\n    },\n    'lv': {\n      // Latvian\n      'ā': 'a',\n      'č': 'c',\n      'ē': 'e',\n      'ģ': 'g',\n      'ī': 'i',\n      'ķ': 'k',\n      'ļ': 'l',\n      'ņ': 'n',\n      'š': 's',\n      'ū': 'u',\n      'ž': 'z',\n      'Ā': 'A',\n      'Č': 'C',\n      'Ē': 'E',\n      'Ģ': 'G',\n      'Ī': 'i',\n      'Ķ': 'k',\n      'Ļ': 'L',\n      'Ņ': 'N',\n      'Š': 'S',\n      'Ū': 'u',\n      'Ž': 'Z'\n    },\n    'pl': {\n      // Polish\n      'ą': 'a',\n      'ć': 'c',\n      'ę': 'e',\n      'ł': 'l',\n      'ń': 'n',\n      'ó': 'o',\n      'ś': 's',\n      'ź': 'z',\n      'ż': 'z',\n      'Ą': 'A',\n      'Ć': 'C',\n      'Ę': 'e',\n      'Ł': 'L',\n      'Ń': 'N',\n      'Ó': 'O',\n      'Ś': 'S',\n      'Ź': 'Z',\n      'Ż': 'Z'\n    },\n    'sv': {\n      // Swedish\n      // 'å': 'a', duplicate see charMap/latin\n      // 'Å': 'A', duplicate see charMap/latin\n      'ä': 'a',\n      // ok\n      'Ä': 'A',\n      // ok\n      'ö': 'o',\n      // ok\n      'Ö': 'O' // ok\n\n    },\n    'sk': {\n      // Slovak\n      'ä': 'a',\n      'Ä': 'A'\n    },\n    'sr': {\n      // Serbian\n      'љ': 'lj',\n      'њ': 'nj',\n      'Љ': 'Lj',\n      'Њ': 'Nj',\n      'đ': 'dj',\n      'Đ': 'Dj'\n    },\n    'tr': {\n      // Turkish\n      'Ü': 'U',\n      'Ö': 'O',\n      'ü': 'u',\n      'ö': 'o'\n    }\n  };\n  /**\n   * symbolMap language specific symbol translations\n   * translations must be transliterated already\n   * @type   {Object}\n   */\n\n  var symbolMap = {\n    'ar': {\n      '∆': 'delta',\n      '∞': 'la-nihaya',\n      '♥': 'hob',\n      '&': 'wa',\n      '|': 'aw',\n      '<': 'aqal-men',\n      '>': 'akbar-men',\n      '∑': 'majmou',\n      '¤': 'omla'\n    },\n    'az': {},\n    'ca': {\n      '∆': 'delta',\n      '∞': 'infinit',\n      '♥': 'amor',\n      '&': 'i',\n      '|': 'o',\n      '<': 'menys que',\n      '>': 'mes que',\n      '∑': 'suma dels',\n      '¤': 'moneda'\n    },\n    'cs': {\n      '∆': 'delta',\n      '∞': 'nekonecno',\n      '♥': 'laska',\n      '&': 'a',\n      '|': 'nebo',\n      '<': 'mensi nez',\n      '>': 'vetsi nez',\n      '∑': 'soucet',\n      '¤': 'mena'\n    },\n    'de': {\n      '∆': 'delta',\n      '∞': 'unendlich',\n      '♥': 'Liebe',\n      '&': 'und',\n      '|': 'oder',\n      '<': 'kleiner als',\n      '>': 'groesser als',\n      '∑': 'Summe von',\n      '¤': 'Waehrung'\n    },\n    'dv': {\n      '∆': 'delta',\n      '∞': 'kolunulaa',\n      '♥': 'loabi',\n      '&': 'aai',\n      '|': 'noonee',\n      '<': 'ah vure kuda',\n      '>': 'ah vure bodu',\n      '∑': 'jumula',\n      '¤': 'faisaa'\n    },\n    'en': {\n      '∆': 'delta',\n      '∞': 'infinity',\n      '♥': 'love',\n      '&': 'and',\n      '|': 'or',\n      '<': 'less than',\n      '>': 'greater than',\n      '∑': 'sum',\n      '¤': 'currency'\n    },\n    'es': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amor',\n      '&': 'y',\n      '|': 'u',\n      '<': 'menos que',\n      '>': 'mas que',\n      '∑': 'suma de los',\n      '¤': 'moneda'\n    },\n    'fa': {\n      '∆': 'delta',\n      '∞': 'bi-nahayat',\n      '♥': 'eshgh',\n      '&': 'va',\n      '|': 'ya',\n      '<': 'kamtar-az',\n      '>': 'bishtar-az',\n      '∑': 'majmooe',\n      '¤': 'vahed'\n    },\n    'fi': {\n      '∆': 'delta',\n      '∞': 'aarettomyys',\n      '♥': 'rakkaus',\n      '&': 'ja',\n      '|': 'tai',\n      '<': 'pienempi kuin',\n      '>': 'suurempi kuin',\n      '∑': 'summa',\n      '¤': 'valuutta'\n    },\n    'fr': {\n      '∆': 'delta',\n      '∞': 'infiniment',\n      '♥': 'Amour',\n      '&': 'et',\n      '|': 'ou',\n      '<': 'moins que',\n      '>': 'superieure a',\n      '∑': 'somme des',\n      '¤': 'monnaie'\n    },\n    'ge': {\n      '∆': 'delta',\n      '∞': 'usasruloba',\n      '♥': 'siqvaruli',\n      '&': 'da',\n      '|': 'an',\n      '<': 'naklebi',\n      '>': 'meti',\n      '∑': 'jami',\n      '¤': 'valuta'\n    },\n    'gr': {},\n    'hu': {\n      '∆': 'delta',\n      '∞': 'vegtelen',\n      '♥': 'szerelem',\n      '&': 'es',\n      '|': 'vagy',\n      '<': 'kisebb mint',\n      '>': 'nagyobb mint',\n      '∑': 'szumma',\n      '¤': 'penznem'\n    },\n    'it': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amore',\n      '&': 'e',\n      '|': 'o',\n      '<': 'minore di',\n      '>': 'maggiore di',\n      '∑': 'somma',\n      '¤': 'moneta'\n    },\n    'lt': {\n      '∆': 'delta',\n      '∞': 'begalybe',\n      '♥': 'meile',\n      '&': 'ir',\n      '|': 'ar',\n      '<': 'maziau nei',\n      '>': 'daugiau nei',\n      '∑': 'suma',\n      '¤': 'valiuta'\n    },\n    'lv': {\n      '∆': 'delta',\n      '∞': 'bezgaliba',\n      '♥': 'milestiba',\n      '&': 'un',\n      '|': 'vai',\n      '<': 'mazak neka',\n      '>': 'lielaks neka',\n      '∑': 'summa',\n      '¤': 'valuta'\n    },\n    'my': {\n      '∆': 'kwahkhyaet',\n      '∞': 'asaonasme',\n      '♥': 'akhyait',\n      '&': 'nhin',\n      '|': 'tho',\n      '<': 'ngethaw',\n      '>': 'kyithaw',\n      '∑': 'paungld',\n      '¤': 'ngwekye'\n    },\n    'mk': {},\n    'nl': {\n      '∆': 'delta',\n      '∞': 'oneindig',\n      '♥': 'liefde',\n      '&': 'en',\n      '|': 'of',\n      '<': 'kleiner dan',\n      '>': 'groter dan',\n      '∑': 'som',\n      '¤': 'valuta'\n    },\n    'pl': {\n      '∆': 'delta',\n      '∞': 'nieskonczonosc',\n      '♥': 'milosc',\n      '&': 'i',\n      '|': 'lub',\n      '<': 'mniejsze niz',\n      '>': 'wieksze niz',\n      '∑': 'suma',\n      '¤': 'waluta'\n    },\n    'pt': {\n      '∆': 'delta',\n      '∞': 'infinito',\n      '♥': 'amor',\n      '&': 'e',\n      '|': 'ou',\n      '<': 'menor que',\n      '>': 'maior que',\n      '∑': 'soma',\n      '¤': 'moeda'\n    },\n    'ro': {\n      '∆': 'delta',\n      '∞': 'infinit',\n      '♥': 'dragoste',\n      '&': 'si',\n      '|': 'sau',\n      '<': 'mai mic ca',\n      '>': 'mai mare ca',\n      '∑': 'suma',\n      '¤': 'valuta'\n    },\n    'ru': {\n      '∆': 'delta',\n      '∞': 'beskonechno',\n      '♥': 'lubov',\n      '&': 'i',\n      '|': 'ili',\n      '<': 'menshe',\n      '>': 'bolshe',\n      '∑': 'summa',\n      '¤': 'valjuta'\n    },\n    'sk': {\n      '∆': 'delta',\n      '∞': 'nekonecno',\n      '♥': 'laska',\n      '&': 'a',\n      '|': 'alebo',\n      '<': 'menej ako',\n      '>': 'viac ako',\n      '∑': 'sucet',\n      '¤': 'mena'\n    },\n    'sr': {},\n    'tr': {\n      '∆': 'delta',\n      '∞': 'sonsuzluk',\n      '♥': 'ask',\n      '&': 've',\n      '|': 'veya',\n      '<': 'kucuktur',\n      '>': 'buyuktur',\n      '∑': 'toplam',\n      '¤': 'para birimi'\n    },\n    'uk': {\n      '∆': 'delta',\n      '∞': 'bezkinechnist',\n      '♥': 'lubov',\n      '&': 'i',\n      '|': 'abo',\n      '<': 'menshe',\n      '>': 'bilshe',\n      '∑': 'suma',\n      '¤': 'valjuta'\n    },\n    'vn': {\n      '∆': 'delta',\n      '∞': 'vo cuc',\n      '♥': 'yeu',\n      '&': 'va',\n      '|': 'hoac',\n      '<': 'nho hon',\n      '>': 'lon hon',\n      '∑': 'tong',\n      '¤': 'tien te'\n    }\n  };\n  var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n  var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n  var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n  /**\n   * getSlug\n   * @param  {string} input input string\n   * @param  {object|string} opts config object or separator string/char\n   * @api    public\n   * @return {string}  sluggified string\n   */\n\n  var getSlug = function getSlug(input, opts) {\n    var separator = '-';\n    var result = '';\n    var diatricString = '';\n    var convertSymbols = true;\n    var customReplacements = {};\n    var maintainCase;\n    var titleCase;\n    var truncate;\n    var uricFlag;\n    var uricNoSlashFlag;\n    var markFlag;\n    var symbol;\n    var langChar;\n    var lucky;\n    var i;\n    var ch;\n    var l;\n    var lastCharWasSymbol;\n    var lastCharWasDiatric;\n    var allowedChars = '';\n\n    if (typeof input !== 'string') {\n      return '';\n    }\n\n    if (typeof opts === 'string') {\n      separator = opts;\n    }\n\n    symbol = symbolMap.en;\n    langChar = langCharMap.en;\n\n    if (typeof opts === 'object') {\n      maintainCase = opts.maintainCase || false;\n      customReplacements = opts.custom && typeof opts.custom === 'object' ? opts.custom : customReplacements;\n      truncate = +opts.truncate > 1 && opts.truncate || false;\n      uricFlag = opts.uric || false;\n      uricNoSlashFlag = opts.uricNoSlash || false;\n      markFlag = opts.mark || false;\n      convertSymbols = opts.symbols === false || opts.lang === false ? false : true;\n      separator = opts.separator || separator;\n\n      if (uricFlag) {\n        allowedChars += uricChars;\n      }\n\n      if (uricNoSlashFlag) {\n        allowedChars += uricNoSlashChars;\n      }\n\n      if (markFlag) {\n        allowedChars += markChars;\n      }\n\n      symbol = opts.lang && symbolMap[opts.lang] && convertSymbols ? symbolMap[opts.lang] : convertSymbols ? symbolMap.en : {};\n      langChar = opts.lang && langCharMap[opts.lang] ? langCharMap[opts.lang] : opts.lang === false || opts.lang === true ? {} : langCharMap.en; // if titleCase config is an Array, rewrite to object format\n\n      if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n        opts.titleCase.forEach(function (v) {\n          customReplacements[v + ''] = v + '';\n        });\n        titleCase = true;\n      } else {\n        titleCase = !!opts.titleCase;\n      } // if custom config is an Array, rewrite to object format\n\n\n      if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n        opts.custom.forEach(function (v) {\n          customReplacements[v + ''] = v + '';\n        });\n      } // custom replacements\n\n\n      Object.keys(customReplacements).forEach(function (v) {\n        var r;\n\n        if (v.length > 1) {\n          r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n        } else {\n          r = new RegExp(escapeChars(v), 'gi');\n        }\n\n        input = input.replace(r, customReplacements[v]);\n      }); // add all custom replacement to allowed charlist\n\n      for (ch in customReplacements) {\n        allowedChars += ch;\n      }\n    }\n\n    allowedChars += separator; // escape all necessary chars\n\n    allowedChars = escapeChars(allowedChars); // trim whitespaces\n\n    input = input.replace(/(^\\s+|\\s+$)/g, '');\n    lastCharWasSymbol = false;\n    lastCharWasDiatric = false;\n\n    for (i = 0, l = input.length; i < l; i++) {\n      ch = input[i];\n\n      if (isReplacedCustomChar(ch, customReplacements)) {\n        // don't convert a already converted char\n        lastCharWasSymbol = false;\n      } else if (langChar[ch]) {\n        // process language specific diactrics chars conversion\n        ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n        lastCharWasSymbol = false;\n      } else if (ch in charMap) {\n        // the transliteration changes entirely when some special characters are added\n        if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n          diatricString += ch;\n          ch = '';\n        } else if (lastCharWasDiatric === true) {\n          ch = diatricMap[diatricString] + charMap[ch];\n          diatricString = '';\n        } else {\n          // process diactrics chars\n          ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n        }\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n      } else if (ch in diatricMap) {\n        diatricString += ch;\n        ch = ''; // end of string, put the whole meaningful word\n\n        if (i === l - 1) {\n          ch = diatricMap[diatricString];\n        }\n\n        lastCharWasDiatric = true;\n      } else if ( // process symbol chars\n      symbol[ch] && !(uricFlag && uricChars.indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars // .indexOf(ch) !== -1) && !(markFlag && markChars\n      .indexOf(ch) !== -1)) {\n        ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n        ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n        lastCharWasSymbol = true;\n      } else {\n        if (lastCharWasDiatric === true) {\n          ch = diatricMap[diatricString] + ch;\n          diatricString = '';\n          lastCharWasDiatric = false;\n        } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n          // process latin chars\n          ch = ' ' + ch;\n        }\n\n        lastCharWasSymbol = false;\n      } // add allowed chars\n\n\n      result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n    }\n\n    if (titleCase) {\n      result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n        var j = i.toUpperCase() + (r !== null ? r : '');\n        return Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0 ? j : j.toLowerCase();\n      });\n    } // eliminate duplicate separators\n    // add separator\n    // trim separators from start and end\n\n\n    result = result.replace(/\\s+/g, separator).replace(new RegExp('\\\\' + separator + '+', 'g'), separator).replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n    if (truncate && result.length > truncate) {\n      lucky = result.charAt(truncate) === separator;\n      result = result.slice(0, truncate);\n\n      if (!lucky) {\n        result = result.slice(0, result.lastIndexOf(separator));\n      }\n    }\n\n    if (!maintainCase && !titleCase) {\n      result = result.toLowerCase();\n    }\n\n    return result;\n  };\n  /**\n   * createSlug curried(opts)(input)\n   * @param   {object|string} opts config object or input string\n   * @return  {Function} function getSlugWithConfig()\n   **/\n\n\n  var createSlug = function createSlug(opts) {\n    /**\n     * getSlugWithConfig\n     * @param   {string} input string\n     * @return  {string} slug string\n     */\n    return function getSlugWithConfig(input) {\n      return getSlug(input, opts);\n    };\n  };\n  /**\n   * escape Chars\n   * @param   {string} input string\n   */\n\n\n  var escapeChars = function escapeChars(input) {\n    return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n  };\n  /**\n   * check if the char is an already converted char from custom list\n   * @param   {char} ch character to check\n   * @param   {object} customReplacements custom translation map\n   */\n\n\n  var isReplacedCustomChar = function (ch, customReplacements) {\n    for (var c in customReplacements) {\n      if (customReplacements[c] === ch) {\n        return true;\n      }\n    }\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    // export functions for use in Node\n    module.exports = getSlug;\n    module.exports.createSlug = createSlug;\n  } else if (typeof define !== 'undefined' && define.amd) {\n    // export function for use in AMD\n    define([], function () {\n      return getSlug;\n    });\n  } else {\n    // don't overwrite global if exists\n    try {\n      if (root.getSlug || root.createSlug) {\n        throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n      } else {\n        root.getSlug = getSlug;\n        root.createSlug = createSlug;\n      }\n    } catch (e) {}\n  }\n})(this);","map":{"version":3,"names":["root","charMap","lookAheadCharArray","diatricMap","langCharMap","symbolMap","uricChars","join","uricNoSlashChars","markChars","getSlug","input","opts","separator","result","diatricString","convertSymbols","customReplacements","maintainCase","titleCase","truncate","uricFlag","uricNoSlashFlag","markFlag","symbol","langChar","lucky","i","ch","l","lastCharWasSymbol","lastCharWasDiatric","allowedChars","en","custom","uric","uricNoSlash","mark","symbols","lang","length","Array","prototype","toString","call","forEach","v","Object","keys","r","RegExp","escapeChars","replace","isReplacedCustomChar","match","indexOf","substr","test","_","j","toUpperCase","toLowerCase","charAt","slice","lastIndexOf","createSlug","getSlugWithConfig","c","module","exports","define","amd","e"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/speakingurl/lib/speakingurl.js"],"sourcesContent":["(function (root) {\n    'use strict';\n\n    /**\n     * charMap\n     * @type {Object}\n     */\n    var charMap = {\n\n        // latin\n        'À': 'A',\n        'Á': 'A',\n        'Â': 'A',\n        'Ã': 'A',\n        'Ä': 'Ae',\n        'Å': 'A',\n        'Æ': 'AE',\n        'Ç': 'C',\n        'È': 'E',\n        'É': 'E',\n        'Ê': 'E',\n        'Ë': 'E',\n        'Ì': 'I',\n        'Í': 'I',\n        'Î': 'I',\n        'Ï': 'I',\n        'Ð': 'D',\n        'Ñ': 'N',\n        'Ò': 'O',\n        'Ó': 'O',\n        'Ô': 'O',\n        'Õ': 'O',\n        'Ö': 'Oe',\n        'Ő': 'O',\n        'Ø': 'O',\n        'Ù': 'U',\n        'Ú': 'U',\n        'Û': 'U',\n        'Ü': 'Ue',\n        'Ű': 'U',\n        'Ý': 'Y',\n        'Þ': 'TH',\n        'ß': 'ss',\n        'à': 'a',\n        'á': 'a',\n        'â': 'a',\n        'ã': 'a',\n        'ä': 'ae',\n        'å': 'a',\n        'æ': 'ae',\n        'ç': 'c',\n        'è': 'e',\n        'é': 'e',\n        'ê': 'e',\n        'ë': 'e',\n        'ì': 'i',\n        'í': 'i',\n        'î': 'i',\n        'ï': 'i',\n        'ð': 'd',\n        'ñ': 'n',\n        'ò': 'o',\n        'ó': 'o',\n        'ô': 'o',\n        'õ': 'o',\n        'ö': 'oe',\n        'ő': 'o',\n        'ø': 'o',\n        'ù': 'u',\n        'ú': 'u',\n        'û': 'u',\n        'ü': 'ue',\n        'ű': 'u',\n        'ý': 'y',\n        'þ': 'th',\n        'ÿ': 'y',\n        'ẞ': 'SS',\n\n        // language specific\n\n        // Arabic\n        'ا': 'a',\n        'أ': 'a',\n        'إ': 'i',\n        'آ': 'aa',\n        'ؤ': 'u',\n        'ئ': 'e',\n        'ء': 'a',\n        'ب': 'b',\n        'ت': 't',\n        'ث': 'th',\n        'ج': 'j',\n        'ح': 'h',\n        'خ': 'kh',\n        'د': 'd',\n        'ذ': 'th',\n        'ر': 'r',\n        'ز': 'z',\n        'س': 's',\n        'ش': 'sh',\n        'ص': 's',\n        'ض': 'dh',\n        'ط': 't',\n        'ظ': 'z',\n        'ع': 'a',\n        'غ': 'gh',\n        'ف': 'f',\n        'ق': 'q',\n        'ك': 'k',\n        'ل': 'l',\n        'م': 'm',\n        'ن': 'n',\n        'ه': 'h',\n        'و': 'w',\n        'ي': 'y',\n        'ى': 'a',\n        'ة': 'h',\n        'ﻻ': 'la',\n        'ﻷ': 'laa',\n        'ﻹ': 'lai',\n        'ﻵ': 'laa',\n\n        // Persian additional characters than Arabic\n        'گ': 'g',\n        'چ': 'ch',\n        'پ': 'p',\n        'ژ': 'zh',\n        'ک': 'k',\n        'ی': 'y',\n\n        // Arabic diactrics\n        'َ': 'a',\n        'ً': 'an',\n        'ِ': 'e',\n        'ٍ': 'en',\n        'ُ': 'u',\n        'ٌ': 'on',\n        'ْ': '',\n\n        // Arabic numbers\n        '٠': '0',\n        '١': '1',\n        '٢': '2',\n        '٣': '3',\n        '٤': '4',\n        '٥': '5',\n        '٦': '6',\n        '٧': '7',\n        '٨': '8',\n        '٩': '9',\n\n        // Persian numbers\n        '۰': '0',\n        '۱': '1',\n        '۲': '2',\n        '۳': '3',\n        '۴': '4',\n        '۵': '5',\n        '۶': '6',\n        '۷': '7',\n        '۸': '8',\n        '۹': '9',\n\n        // Burmese consonants\n        'က': 'k',\n        'ခ': 'kh',\n        'ဂ': 'g',\n        'ဃ': 'ga',\n        'င': 'ng',\n        'စ': 's',\n        'ဆ': 'sa',\n        'ဇ': 'z',\n        'စျ': 'za',\n        'ည': 'ny',\n        'ဋ': 't',\n        'ဌ': 'ta',\n        'ဍ': 'd',\n        'ဎ': 'da',\n        'ဏ': 'na',\n        'တ': 't',\n        'ထ': 'ta',\n        'ဒ': 'd',\n        'ဓ': 'da',\n        'န': 'n',\n        'ပ': 'p',\n        'ဖ': 'pa',\n        'ဗ': 'b',\n        'ဘ': 'ba',\n        'မ': 'm',\n        'ယ': 'y',\n        'ရ': 'ya',\n        'လ': 'l',\n        'ဝ': 'w',\n        'သ': 'th',\n        'ဟ': 'h',\n        'ဠ': 'la',\n        'အ': 'a',\n        // consonant character combos\n        'ြ': 'y',\n        'ျ': 'ya',\n        'ွ': 'w',\n        'ြွ': 'yw',\n        'ျွ': 'ywa',\n        'ှ': 'h',\n        // independent vowels\n        'ဧ': 'e',\n        '၏': '-e',\n        'ဣ': 'i',\n        'ဤ': '-i',\n        'ဉ': 'u',\n        'ဦ': '-u',\n        'ဩ': 'aw',\n        'သြော': 'aw',\n        'ဪ': 'aw',\n        // numbers\n        '၀': '0',\n        '၁': '1',\n        '၂': '2',\n        '၃': '3',\n        '၄': '4',\n        '၅': '5',\n        '၆': '6',\n        '၇': '7',\n        '၈': '8',\n        '၉': '9',\n        // virama and tone marks which are silent in transliteration\n        '္': '',\n        '့': '',\n        'း': '',\n\n        // Czech\n        'č': 'c',\n        'ď': 'd',\n        'ě': 'e',\n        'ň': 'n',\n        'ř': 'r',\n        'š': 's',\n        'ť': 't',\n        'ů': 'u',\n        'ž': 'z',\n        'Č': 'C',\n        'Ď': 'D',\n        'Ě': 'E',\n        'Ň': 'N',\n        'Ř': 'R',\n        'Š': 'S',\n        'Ť': 'T',\n        'Ů': 'U',\n        'Ž': 'Z',\n\n        // Dhivehi\n        'ހ': 'h',\n        'ށ': 'sh',\n        'ނ': 'n',\n        'ރ': 'r',\n        'ބ': 'b',\n        'ޅ': 'lh',\n        'ކ': 'k',\n        'އ': 'a',\n        'ވ': 'v',\n        'މ': 'm',\n        'ފ': 'f',\n        'ދ': 'dh',\n        'ތ': 'th',\n        'ލ': 'l',\n        'ގ': 'g',\n        'ޏ': 'gn',\n        'ސ': 's',\n        'ޑ': 'd',\n        'ޒ': 'z',\n        'ޓ': 't',\n        'ޔ': 'y',\n        'ޕ': 'p',\n        'ޖ': 'j',\n        'ޗ': 'ch',\n        'ޘ': 'tt',\n        'ޙ': 'hh',\n        'ޚ': 'kh',\n        'ޛ': 'th',\n        'ޜ': 'z',\n        'ޝ': 'sh',\n        'ޞ': 's',\n        'ޟ': 'd',\n        'ޠ': 't',\n        'ޡ': 'z',\n        'ޢ': 'a',\n        'ޣ': 'gh',\n        'ޤ': 'q',\n        'ޥ': 'w',\n        'ަ': 'a',\n        'ާ': 'aa',\n        'ި': 'i',\n        'ީ': 'ee',\n        'ު': 'u',\n        'ޫ': 'oo',\n        'ެ': 'e',\n        'ޭ': 'ey',\n        'ޮ': 'o',\n        'ޯ': 'oa',\n        'ް': '',\n\n        // Georgian https://en.wikipedia.org/wiki/Romanization_of_Georgian\n        // National system (2002)\n        'ა': 'a',\n        'ბ': 'b',\n        'გ': 'g',\n        'დ': 'd',\n        'ე': 'e',\n        'ვ': 'v',\n        'ზ': 'z',\n        'თ': 't',\n        'ი': 'i',\n        'კ': 'k',\n        'ლ': 'l',\n        'მ': 'm',\n        'ნ': 'n',\n        'ო': 'o',\n        'პ': 'p',\n        'ჟ': 'zh',\n        'რ': 'r',\n        'ს': 's',\n        'ტ': 't',\n        'უ': 'u',\n        'ფ': 'p',\n        'ქ': 'k',\n        'ღ': 'gh',\n        'ყ': 'q',\n        'შ': 'sh',\n        'ჩ': 'ch',\n        'ც': 'ts',\n        'ძ': 'dz',\n        'წ': 'ts',\n        'ჭ': 'ch',\n        'ხ': 'kh',\n        'ჯ': 'j',\n        'ჰ': 'h',\n\n        // Greek\n        'α': 'a',\n        'β': 'v',\n        'γ': 'g',\n        'δ': 'd',\n        'ε': 'e',\n        'ζ': 'z',\n        'η': 'i',\n        'θ': 'th',\n        'ι': 'i',\n        'κ': 'k',\n        'λ': 'l',\n        'μ': 'm',\n        'ν': 'n',\n        'ξ': 'ks',\n        'ο': 'o',\n        'π': 'p',\n        'ρ': 'r',\n        'σ': 's',\n        'τ': 't',\n        'υ': 'y',\n        'φ': 'f',\n        'χ': 'x',\n        'ψ': 'ps',\n        'ω': 'o',\n        'ά': 'a',\n        'έ': 'e',\n        'ί': 'i',\n        'ό': 'o',\n        'ύ': 'y',\n        'ή': 'i',\n        'ώ': 'o',\n        'ς': 's',\n        'ϊ': 'i',\n        'ΰ': 'y',\n        'ϋ': 'y',\n        'ΐ': 'i',\n        'Α': 'A',\n        'Β': 'B',\n        'Γ': 'G',\n        'Δ': 'D',\n        'Ε': 'E',\n        'Ζ': 'Z',\n        'Η': 'I',\n        'Θ': 'TH',\n        'Ι': 'I',\n        'Κ': 'K',\n        'Λ': 'L',\n        'Μ': 'M',\n        'Ν': 'N',\n        'Ξ': 'KS',\n        'Ο': 'O',\n        'Π': 'P',\n        'Ρ': 'R',\n        'Σ': 'S',\n        'Τ': 'T',\n        'Υ': 'Y',\n        'Φ': 'F',\n        'Χ': 'X',\n        'Ψ': 'PS',\n        'Ω': 'O',\n        'Ά': 'A',\n        'Έ': 'E',\n        'Ί': 'I',\n        'Ό': 'O',\n        'Ύ': 'Y',\n        'Ή': 'I',\n        'Ώ': 'O',\n        'Ϊ': 'I',\n        'Ϋ': 'Y',\n\n        // Latvian\n        'ā': 'a',\n        // 'č': 'c', // duplicate\n        'ē': 'e',\n        'ģ': 'g',\n        'ī': 'i',\n        'ķ': 'k',\n        'ļ': 'l',\n        'ņ': 'n',\n        // 'š': 's', // duplicate\n        'ū': 'u',\n        // 'ž': 'z', // duplicate\n        'Ā': 'A',\n        // 'Č': 'C', // duplicate\n        'Ē': 'E',\n        'Ģ': 'G',\n        'Ī': 'I',\n        'Ķ': 'k',\n        'Ļ': 'L',\n        'Ņ': 'N',\n        // 'Š': 'S', // duplicate\n        'Ū': 'U',\n        // 'Ž': 'Z', // duplicate\n\n        // Macedonian\n        'Ќ': 'Kj',\n        'ќ': 'kj',\n        'Љ': 'Lj',\n        'љ': 'lj',\n        'Њ': 'Nj',\n        'њ': 'nj',\n        'Тс': 'Ts',\n        'тс': 'ts',\n\n        // Polish\n        'ą': 'a',\n        'ć': 'c',\n        'ę': 'e',\n        'ł': 'l',\n        'ń': 'n',\n        // 'ó': 'o', // duplicate\n        'ś': 's',\n        'ź': 'z',\n        'ż': 'z',\n        'Ą': 'A',\n        'Ć': 'C',\n        'Ę': 'E',\n        'Ł': 'L',\n        'Ń': 'N',\n        'Ś': 'S',\n        'Ź': 'Z',\n        'Ż': 'Z',\n\n        // Ukranian\n        'Є': 'Ye',\n        'І': 'I',\n        'Ї': 'Yi',\n        'Ґ': 'G',\n        'є': 'ye',\n        'і': 'i',\n        'ї': 'yi',\n        'ґ': 'g',\n\n        // Romanian\n        'ă': 'a',\n        'Ă': 'A',\n        'ș': 's',\n        'Ș': 'S',\n        // 'ş': 's', // duplicate\n        // 'Ş': 'S', // duplicate\n        'ț': 't',\n        'Ț': 'T',\n        'ţ': 't',\n        'Ţ': 'T',\n\n        // Russian https://en.wikipedia.org/wiki/Romanization_of_Russian\n        // ICAO\n\n        'а': 'a',\n        'б': 'b',\n        'в': 'v',\n        'г': 'g',\n        'д': 'd',\n        'е': 'e',\n        'ё': 'yo',\n        'ж': 'zh',\n        'з': 'z',\n        'и': 'i',\n        'й': 'i',\n        'к': 'k',\n        'л': 'l',\n        'м': 'm',\n        'н': 'n',\n        'о': 'o',\n        'п': 'p',\n        'р': 'r',\n        'с': 's',\n        'т': 't',\n        'у': 'u',\n        'ф': 'f',\n        'х': 'kh',\n        'ц': 'c',\n        'ч': 'ch',\n        'ш': 'sh',\n        'щ': 'sh',\n        'ъ': '',\n        'ы': 'y',\n        'ь': '',\n        'э': 'e',\n        'ю': 'yu',\n        'я': 'ya',\n        'А': 'A',\n        'Б': 'B',\n        'В': 'V',\n        'Г': 'G',\n        'Д': 'D',\n        'Е': 'E',\n        'Ё': 'Yo',\n        'Ж': 'Zh',\n        'З': 'Z',\n        'И': 'I',\n        'Й': 'I',\n        'К': 'K',\n        'Л': 'L',\n        'М': 'M',\n        'Н': 'N',\n        'О': 'O',\n        'П': 'P',\n        'Р': 'R',\n        'С': 'S',\n        'Т': 'T',\n        'У': 'U',\n        'Ф': 'F',\n        'Х': 'Kh',\n        'Ц': 'C',\n        'Ч': 'Ch',\n        'Ш': 'Sh',\n        'Щ': 'Sh',\n        'Ъ': '',\n        'Ы': 'Y',\n        'Ь': '',\n        'Э': 'E',\n        'Ю': 'Yu',\n        'Я': 'Ya',\n\n        // Serbian\n        'ђ': 'dj',\n        'ј': 'j',\n        // 'љ': 'lj',  // duplicate\n        // 'њ': 'nj', // duplicate\n        'ћ': 'c',\n        'џ': 'dz',\n        'Ђ': 'Dj',\n        'Ј': 'j',\n        // 'Љ': 'Lj', // duplicate\n        // 'Њ': 'Nj', // duplicate\n        'Ћ': 'C',\n        'Џ': 'Dz',\n\n        // Slovak\n        'ľ': 'l',\n        'ĺ': 'l',\n        'ŕ': 'r',\n        'Ľ': 'L',\n        'Ĺ': 'L',\n        'Ŕ': 'R',\n\n        // Turkish\n        'ş': 's',\n        'Ş': 'S',\n        'ı': 'i',\n        'İ': 'I',\n        // 'ç': 'c', // duplicate\n        // 'Ç': 'C', // duplicate\n        // 'ü': 'u', // duplicate, see langCharMap\n        // 'Ü': 'U', // duplicate, see langCharMap\n        // 'ö': 'o', // duplicate, see langCharMap\n        // 'Ö': 'O', // duplicate, see langCharMap\n        'ğ': 'g',\n        'Ğ': 'G',\n\n        // Vietnamese\n        'ả': 'a',\n        'Ả': 'A',\n        'ẳ': 'a',\n        'Ẳ': 'A',\n        'ẩ': 'a',\n        'Ẩ': 'A',\n        'đ': 'd',\n        'Đ': 'D',\n        'ẹ': 'e',\n        'Ẹ': 'E',\n        'ẽ': 'e',\n        'Ẽ': 'E',\n        'ẻ': 'e',\n        'Ẻ': 'E',\n        'ế': 'e',\n        'Ế': 'E',\n        'ề': 'e',\n        'Ề': 'E',\n        'ệ': 'e',\n        'Ệ': 'E',\n        'ễ': 'e',\n        'Ễ': 'E',\n        'ể': 'e',\n        'Ể': 'E',\n        'ỏ': 'o',\n        'ọ': 'o',\n        'Ọ': 'o',\n        'ố': 'o',\n        'Ố': 'O',\n        'ồ': 'o',\n        'Ồ': 'O',\n        'ổ': 'o',\n        'Ổ': 'O',\n        'ộ': 'o',\n        'Ộ': 'O',\n        'ỗ': 'o',\n        'Ỗ': 'O',\n        'ơ': 'o',\n        'Ơ': 'O',\n        'ớ': 'o',\n        'Ớ': 'O',\n        'ờ': 'o',\n        'Ờ': 'O',\n        'ợ': 'o',\n        'Ợ': 'O',\n        'ỡ': 'o',\n        'Ỡ': 'O',\n        'Ở': 'o',\n        'ở': 'o',\n        'ị': 'i',\n        'Ị': 'I',\n        'ĩ': 'i',\n        'Ĩ': 'I',\n        'ỉ': 'i',\n        'Ỉ': 'i',\n        'ủ': 'u',\n        'Ủ': 'U',\n        'ụ': 'u',\n        'Ụ': 'U',\n        'ũ': 'u',\n        'Ũ': 'U',\n        'ư': 'u',\n        'Ư': 'U',\n        'ứ': 'u',\n        'Ứ': 'U',\n        'ừ': 'u',\n        'Ừ': 'U',\n        'ự': 'u',\n        'Ự': 'U',\n        'ữ': 'u',\n        'Ữ': 'U',\n        'ử': 'u',\n        'Ử': 'ư',\n        'ỷ': 'y',\n        'Ỷ': 'y',\n        'ỳ': 'y',\n        'Ỳ': 'Y',\n        'ỵ': 'y',\n        'Ỵ': 'Y',\n        'ỹ': 'y',\n        'Ỹ': 'Y',\n        'ạ': 'a',\n        'Ạ': 'A',\n        'ấ': 'a',\n        'Ấ': 'A',\n        'ầ': 'a',\n        'Ầ': 'A',\n        'ậ': 'a',\n        'Ậ': 'A',\n        'ẫ': 'a',\n        'Ẫ': 'A',\n        // 'ă': 'a', // duplicate\n        // 'Ă': 'A', // duplicate\n        'ắ': 'a',\n        'Ắ': 'A',\n        'ằ': 'a',\n        'Ằ': 'A',\n        'ặ': 'a',\n        'Ặ': 'A',\n        'ẵ': 'a',\n        'Ẵ': 'A',\n        \"⓪\": \"0\",\n        \"①\": \"1\",\n        \"②\": \"2\",\n        \"③\": \"3\",\n        \"④\": \"4\",\n        \"⑤\": \"5\",\n        \"⑥\": \"6\",\n        \"⑦\": \"7\",\n        \"⑧\": \"8\",\n        \"⑨\": \"9\",\n        \"⑩\": \"10\",\n        \"⑪\": \"11\",\n        \"⑫\": \"12\",\n        \"⑬\": \"13\",\n        \"⑭\": \"14\",\n        \"⑮\": \"15\",\n        \"⑯\": \"16\",\n        \"⑰\": \"17\",\n        \"⑱\": \"18\",\n        \"⑲\": \"18\",\n        \"⑳\": \"18\",\n\n        \"⓵\": \"1\",\n        \"⓶\": \"2\",\n        \"⓷\": \"3\",\n        \"⓸\": \"4\",\n        \"⓹\": \"5\",\n        \"⓺\": \"6\",\n        \"⓻\": \"7\",\n        \"⓼\": \"8\",\n        \"⓽\": \"9\",\n        \"⓾\": \"10\",\n\n        \"⓿\": \"0\",\n        \"⓫\": \"11\",\n        \"⓬\": \"12\",\n        \"⓭\": \"13\",\n        \"⓮\": \"14\",\n        \"⓯\": \"15\",\n        \"⓰\": \"16\",\n        \"⓱\": \"17\",\n        \"⓲\": \"18\",\n        \"⓳\": \"19\",\n        \"⓴\": \"20\",\n\n        \"Ⓐ\": \"A\",\n        \"Ⓑ\": \"B\",\n        \"Ⓒ\": \"C\",\n        \"Ⓓ\": \"D\",\n        \"Ⓔ\": \"E\",\n        \"Ⓕ\": \"F\",\n        \"Ⓖ\": \"G\",\n        \"Ⓗ\": \"H\",\n        \"Ⓘ\": \"I\",\n        \"Ⓙ\": \"J\",\n        \"Ⓚ\": \"K\",\n        \"Ⓛ\": \"L\",\n        \"Ⓜ\": \"M\",\n        \"Ⓝ\": \"N\",\n        \"Ⓞ\": \"O\",\n        \"Ⓟ\": \"P\",\n        \"Ⓠ\": \"Q\",\n        \"Ⓡ\": \"R\",\n        \"Ⓢ\": \"S\",\n        \"Ⓣ\": \"T\",\n        \"Ⓤ\": \"U\",\n        \"Ⓥ\": \"V\",\n        \"Ⓦ\": \"W\",\n        \"Ⓧ\": \"X\",\n        \"Ⓨ\": \"Y\",\n        \"Ⓩ\": \"Z\",\n\n        \"ⓐ\": \"a\",\n        \"ⓑ\": \"b\",\n        \"ⓒ\": \"c\",\n        \"ⓓ\": \"d\",\n        \"ⓔ\": \"e\",\n        \"ⓕ\": \"f\",\n        \"ⓖ\": \"g\",\n        \"ⓗ\": \"h\",\n        \"ⓘ\": \"i\",\n        \"ⓙ\": \"j\",\n        \"ⓚ\": \"k\",\n        \"ⓛ\": \"l\",\n        \"ⓜ\": \"m\",\n        \"ⓝ\": \"n\",\n        \"ⓞ\": \"o\",\n        \"ⓟ\": \"p\",\n        \"ⓠ\": \"q\",\n        \"ⓡ\": \"r\",\n        \"ⓢ\": \"s\",\n        \"ⓣ\": \"t\",\n        \"ⓤ\": \"u\",\n        \"ⓦ\": \"v\",\n        \"ⓥ\": \"w\",\n        \"ⓧ\": \"x\",\n        \"ⓨ\": \"y\",\n        \"ⓩ\": \"z\",\n\n        // symbols\n        '“': '\"',\n        '”': '\"',\n        '‘': \"'\",\n        '’': \"'\",\n        '∂': 'd',\n        'ƒ': 'f',\n        '™': '(TM)',\n        '©': '(C)',\n        'œ': 'oe',\n        'Œ': 'OE',\n        '®': '(R)',\n        '†': '+',\n        '℠': '(SM)',\n        '…': '...',\n        '˚': 'o',\n        'º': 'o',\n        'ª': 'a',\n        '•': '*',\n        '၊': ',',\n        '။': '.',\n\n        // currency\n        '$': 'USD',\n        '€': 'EUR',\n        '₢': 'BRN',\n        '₣': 'FRF',\n        '£': 'GBP',\n        '₤': 'ITL',\n        '₦': 'NGN',\n        '₧': 'ESP',\n        '₩': 'KRW',\n        '₪': 'ILS',\n        '₫': 'VND',\n        '₭': 'LAK',\n        '₮': 'MNT',\n        '₯': 'GRD',\n        '₱': 'ARS',\n        '₲': 'PYG',\n        '₳': 'ARA',\n        '₴': 'UAH',\n        '₵': 'GHS',\n        '¢': 'cent',\n        '¥': 'CNY',\n        '元': 'CNY',\n        '円': 'YEN',\n        '﷼': 'IRR',\n        '₠': 'EWE',\n        '฿': 'THB',\n        '₨': 'INR',\n        '₹': 'INR',\n        '₰': 'PF',\n        '₺': 'TRY',\n        '؋': 'AFN',\n        '₼': 'AZN',\n        'лв': 'BGN',\n        '៛': 'KHR',\n        '₡': 'CRC',\n        '₸': 'KZT',\n        'ден': 'MKD',\n        'zł': 'PLN',\n        '₽': 'RUB',\n        '₾': 'GEL'\n\n    };\n\n    /**\n     * special look ahead character array\n     * These characters form with consonants to become 'single'/consonant combo\n     * @type [Array]\n     */\n    var lookAheadCharArray = [\n        // burmese\n        '်',\n\n        // Dhivehi\n        'ް'\n    ];\n\n    /**\n     * diatricMap for languages where transliteration changes entirely as more diatrics are added\n     * @type {Object}\n     */\n    var diatricMap = {\n        // Burmese\n        // dependent vowels\n        'ာ': 'a',\n        'ါ': 'a',\n        'ေ': 'e',\n        'ဲ': 'e',\n        'ိ': 'i',\n        'ီ': 'i',\n        'ို': 'o',\n        'ု': 'u',\n        'ူ': 'u',\n        'ေါင်': 'aung',\n        'ော': 'aw',\n        'ော်': 'aw',\n        'ေါ': 'aw',\n        'ေါ်': 'aw',\n        '်': '်', // this is special case but the character will be converted to latin in the code\n        'က်': 'et',\n        'ိုက်': 'aik',\n        'ောက်': 'auk',\n        'င်': 'in',\n        'ိုင်': 'aing',\n        'ောင်': 'aung',\n        'စ်': 'it',\n        'ည်': 'i',\n        'တ်': 'at',\n        'ိတ်': 'eik',\n        'ုတ်': 'ok',\n        'ွတ်': 'ut',\n        'ေတ်': 'it',\n        'ဒ်': 'd',\n        'ိုဒ်': 'ok',\n        'ုဒ်': 'ait',\n        'န်': 'an',\n        'ာန်': 'an',\n        'ိန်': 'ein',\n        'ုန်': 'on',\n        'ွန်': 'un',\n        'ပ်': 'at',\n        'ိပ်': 'eik',\n        'ုပ်': 'ok',\n        'ွပ်': 'ut',\n        'န်ုပ်': 'nub',\n        'မ်': 'an',\n        'ိမ်': 'ein',\n        'ုမ်': 'on',\n        'ွမ်': 'un',\n        'ယ်': 'e',\n        'ိုလ်': 'ol',\n        'ဉ်': 'in',\n        'ံ': 'an',\n        'ိံ': 'ein',\n        'ုံ': 'on',\n\n        // Dhivehi\n        'ައް': 'ah',\n        'ަށް': 'ah'\n    };\n\n    /**\n     * langCharMap language specific characters translations\n     * @type   {Object}\n     */\n    var langCharMap = {\n        'en': {}, // default language\n\n        'az': { // Azerbaijani\n            'ç': 'c',\n            'ə': 'e',\n            'ğ': 'g',\n            'ı': 'i',\n            'ö': 'o',\n            'ş': 's',\n            'ü': 'u',\n            'Ç': 'C',\n            'Ə': 'E',\n            'Ğ': 'G',\n            'İ': 'I',\n            'Ö': 'O',\n            'Ş': 'S',\n            'Ü': 'U'\n        },\n\n        'cs': { // Czech\n            'č': 'c',\n            'ď': 'd',\n            'ě': 'e',\n            'ň': 'n',\n            'ř': 'r',\n            'š': 's',\n            'ť': 't',\n            'ů': 'u',\n            'ž': 'z',\n            'Č': 'C',\n            'Ď': 'D',\n            'Ě': 'E',\n            'Ň': 'N',\n            'Ř': 'R',\n            'Š': 'S',\n            'Ť': 'T',\n            'Ů': 'U',\n            'Ž': 'Z'\n        },\n\n        'fi': { // Finnish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'hu': { // Hungarian\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            // 'á': 'a', duplicate see charMap/latin\n            // 'Á': 'A', duplicate see charMap/latin\n            'ö': 'o', // ok\n            'Ö': 'O', // ok\n            // 'ő': 'o', duplicate see charMap/latin\n            // 'Ő': 'O', duplicate see charMap/latin\n            'ü': 'u',\n            'Ü': 'U',\n            'ű': 'u',\n            'Ű': 'U'\n        },\n\n        'lt': { // Lithuanian\n            'ą': 'a',\n            'č': 'c',\n            'ę': 'e',\n            'ė': 'e',\n            'į': 'i',\n            'š': 's',\n            'ų': 'u',\n            'ū': 'u',\n            'ž': 'z',\n            'Ą': 'A',\n            'Č': 'C',\n            'Ę': 'E',\n            'Ė': 'E',\n            'Į': 'I',\n            'Š': 'S',\n            'Ų': 'U',\n            'Ū': 'U'\n        },\n\n        'lv': { // Latvian\n            'ā': 'a',\n            'č': 'c',\n            'ē': 'e',\n            'ģ': 'g',\n            'ī': 'i',\n            'ķ': 'k',\n            'ļ': 'l',\n            'ņ': 'n',\n            'š': 's',\n            'ū': 'u',\n            'ž': 'z',\n            'Ā': 'A',\n            'Č': 'C',\n            'Ē': 'E',\n            'Ģ': 'G',\n            'Ī': 'i',\n            'Ķ': 'k',\n            'Ļ': 'L',\n            'Ņ': 'N',\n            'Š': 'S',\n            'Ū': 'u',\n            'Ž': 'Z'\n        },\n\n        'pl': { // Polish\n            'ą': 'a',\n            'ć': 'c',\n            'ę': 'e',\n            'ł': 'l',\n            'ń': 'n',\n            'ó': 'o',\n            'ś': 's',\n            'ź': 'z',\n            'ż': 'z',\n            'Ą': 'A',\n            'Ć': 'C',\n            'Ę': 'e',\n            'Ł': 'L',\n            'Ń': 'N',\n            'Ó': 'O',\n            'Ś': 'S',\n            'Ź': 'Z',\n            'Ż': 'Z'\n        },\n\n        'sv': { // Swedish\n            // 'å': 'a', duplicate see charMap/latin\n            // 'Å': 'A', duplicate see charMap/latin\n            'ä': 'a', // ok\n            'Ä': 'A', // ok\n            'ö': 'o', // ok\n            'Ö': 'O' // ok\n        },\n\n        'sk': { // Slovak\n            'ä': 'a',\n            'Ä': 'A'\n        },\n\n        'sr': { // Serbian\n            'љ': 'lj',\n            'њ': 'nj',\n            'Љ': 'Lj',\n            'Њ': 'Nj',\n            'đ': 'dj',\n            'Đ': 'Dj'\n        },\n\n        'tr': { // Turkish\n            'Ü': 'U',\n            'Ö': 'O',\n            'ü': 'u',\n            'ö': 'o'\n        }\n    };\n\n    /**\n     * symbolMap language specific symbol translations\n     * translations must be transliterated already\n     * @type   {Object}\n     */\n    var symbolMap = {\n        'ar': {\n            '∆': 'delta',\n            '∞': 'la-nihaya',\n            '♥': 'hob',\n            '&': 'wa',\n            '|': 'aw',\n            '<': 'aqal-men',\n            '>': 'akbar-men',\n            '∑': 'majmou',\n            '¤': 'omla'\n        },\n\n        'az': {},\n\n        'ca': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'amor',\n            '&': 'i',\n            '|': 'o',\n            '<': 'menys que',\n            '>': 'mes que',\n            '∑': 'suma dels',\n            '¤': 'moneda'\n        },\n\n        'cs': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'nebo',\n            '<': 'mensi nez',\n            '>': 'vetsi nez',\n            '∑': 'soucet',\n            '¤': 'mena'\n        },\n\n        'de': {\n            '∆': 'delta',\n            '∞': 'unendlich',\n            '♥': 'Liebe',\n            '&': 'und',\n            '|': 'oder',\n            '<': 'kleiner als',\n            '>': 'groesser als',\n            '∑': 'Summe von',\n            '¤': 'Waehrung'\n        },\n\n        'dv': {\n            '∆': 'delta',\n            '∞': 'kolunulaa',\n            '♥': 'loabi',\n            '&': 'aai',\n            '|': 'noonee',\n            '<': 'ah vure kuda',\n            '>': 'ah vure bodu',\n            '∑': 'jumula',\n            '¤': 'faisaa'\n        },\n\n        'en': {\n            '∆': 'delta',\n            '∞': 'infinity',\n            '♥': 'love',\n            '&': 'and',\n            '|': 'or',\n            '<': 'less than',\n            '>': 'greater than',\n            '∑': 'sum',\n            '¤': 'currency'\n        },\n\n        'es': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'y',\n            '|': 'u',\n            '<': 'menos que',\n            '>': 'mas que',\n            '∑': 'suma de los',\n            '¤': 'moneda'\n        },\n\n        'fa': {\n            '∆': 'delta',\n            '∞': 'bi-nahayat',\n            '♥': 'eshgh',\n            '&': 'va',\n            '|': 'ya',\n            '<': 'kamtar-az',\n            '>': 'bishtar-az',\n            '∑': 'majmooe',\n            '¤': 'vahed'\n        },\n\n        'fi': {\n            '∆': 'delta',\n            '∞': 'aarettomyys',\n            '♥': 'rakkaus',\n            '&': 'ja',\n            '|': 'tai',\n            '<': 'pienempi kuin',\n            '>': 'suurempi kuin',\n            '∑': 'summa',\n            '¤': 'valuutta'\n        },\n\n        'fr': {\n            '∆': 'delta',\n            '∞': 'infiniment',\n            '♥': 'Amour',\n            '&': 'et',\n            '|': 'ou',\n            '<': 'moins que',\n            '>': 'superieure a',\n            '∑': 'somme des',\n            '¤': 'monnaie'\n        },\n\n        'ge': {\n            '∆': 'delta',\n            '∞': 'usasruloba',\n            '♥': 'siqvaruli',\n            '&': 'da',\n            '|': 'an',\n            '<': 'naklebi',\n            '>': 'meti',\n            '∑': 'jami',\n            '¤': 'valuta'\n        },\n\n        'gr': {},\n\n        'hu': {\n            '∆': 'delta',\n            '∞': 'vegtelen',\n            '♥': 'szerelem',\n            '&': 'es',\n            '|': 'vagy',\n            '<': 'kisebb mint',\n            '>': 'nagyobb mint',\n            '∑': 'szumma',\n            '¤': 'penznem'\n        },\n\n        'it': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amore',\n            '&': 'e',\n            '|': 'o',\n            '<': 'minore di',\n            '>': 'maggiore di',\n            '∑': 'somma',\n            '¤': 'moneta'\n        },\n\n        'lt': {\n            '∆': 'delta',\n            '∞': 'begalybe',\n            '♥': 'meile',\n            '&': 'ir',\n            '|': 'ar',\n            '<': 'maziau nei',\n            '>': 'daugiau nei',\n            '∑': 'suma',\n            '¤': 'valiuta'\n        },\n\n        'lv': {\n            '∆': 'delta',\n            '∞': 'bezgaliba',\n            '♥': 'milestiba',\n            '&': 'un',\n            '|': 'vai',\n            '<': 'mazak neka',\n            '>': 'lielaks neka',\n            '∑': 'summa',\n            '¤': 'valuta'\n        },\n\n        'my': {\n            '∆': 'kwahkhyaet',\n            '∞': 'asaonasme',\n            '♥': 'akhyait',\n            '&': 'nhin',\n            '|': 'tho',\n            '<': 'ngethaw',\n            '>': 'kyithaw',\n            '∑': 'paungld',\n            '¤': 'ngwekye'\n        },\n\n        'mk': {},\n\n        'nl': {\n            '∆': 'delta',\n            '∞': 'oneindig',\n            '♥': 'liefde',\n            '&': 'en',\n            '|': 'of',\n            '<': 'kleiner dan',\n            '>': 'groter dan',\n            '∑': 'som',\n            '¤': 'valuta'\n        },\n\n        'pl': {\n            '∆': 'delta',\n            '∞': 'nieskonczonosc',\n            '♥': 'milosc',\n            '&': 'i',\n            '|': 'lub',\n            '<': 'mniejsze niz',\n            '>': 'wieksze niz',\n            '∑': 'suma',\n            '¤': 'waluta'\n        },\n\n        'pt': {\n            '∆': 'delta',\n            '∞': 'infinito',\n            '♥': 'amor',\n            '&': 'e',\n            '|': 'ou',\n            '<': 'menor que',\n            '>': 'maior que',\n            '∑': 'soma',\n            '¤': 'moeda'\n        },\n\n        'ro': {\n            '∆': 'delta',\n            '∞': 'infinit',\n            '♥': 'dragoste',\n            '&': 'si',\n            '|': 'sau',\n            '<': 'mai mic ca',\n            '>': 'mai mare ca',\n            '∑': 'suma',\n            '¤': 'valuta'\n        },\n\n        'ru': {\n            '∆': 'delta',\n            '∞': 'beskonechno',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'ili',\n            '<': 'menshe',\n            '>': 'bolshe',\n            '∑': 'summa',\n            '¤': 'valjuta'\n        },\n\n        'sk': {\n            '∆': 'delta',\n            '∞': 'nekonecno',\n            '♥': 'laska',\n            '&': 'a',\n            '|': 'alebo',\n            '<': 'menej ako',\n            '>': 'viac ako',\n            '∑': 'sucet',\n            '¤': 'mena'\n        },\n\n        'sr': {},\n\n        'tr': {\n            '∆': 'delta',\n            '∞': 'sonsuzluk',\n            '♥': 'ask',\n            '&': 've',\n            '|': 'veya',\n            '<': 'kucuktur',\n            '>': 'buyuktur',\n            '∑': 'toplam',\n            '¤': 'para birimi'\n        },\n\n        'uk': {\n            '∆': 'delta',\n            '∞': 'bezkinechnist',\n            '♥': 'lubov',\n            '&': 'i',\n            '|': 'abo',\n            '<': 'menshe',\n            '>': 'bilshe',\n            '∑': 'suma',\n            '¤': 'valjuta'\n        },\n\n        'vn': {\n            '∆': 'delta',\n            '∞': 'vo cuc',\n            '♥': 'yeu',\n            '&': 'va',\n            '|': 'hoac',\n            '<': 'nho hon',\n            '>': 'lon hon',\n            '∑': 'tong',\n            '¤': 'tien te'\n        }\n    };\n\n    var uricChars = [';', '?', ':', '@', '&', '=', '+', '$', ',', '/'].join('');\n\n    var uricNoSlashChars = [';', '?', ':', '@', '&', '=', '+', '$', ','].join('');\n\n    var markChars = ['.', '!', '~', '*', \"'\", '(', ')'].join('');\n\n    /**\n     * getSlug\n     * @param  {string} input input string\n     * @param  {object|string} opts config object or separator string/char\n     * @api    public\n     * @return {string}  sluggified string\n     */\n    var getSlug = function getSlug(input, opts) {\n        var separator = '-';\n        var result = '';\n        var diatricString = '';\n        var convertSymbols = true;\n        var customReplacements = {};\n        var maintainCase;\n        var titleCase;\n        var truncate;\n        var uricFlag;\n        var uricNoSlashFlag;\n        var markFlag;\n        var symbol;\n        var langChar;\n        var lucky;\n        var i;\n        var ch;\n        var l;\n        var lastCharWasSymbol;\n        var lastCharWasDiatric;\n        var allowedChars = '';\n\n        if (typeof input !== 'string') {\n            return '';\n        }\n\n        if (typeof opts === 'string') {\n            separator = opts;\n        }\n\n        symbol = symbolMap.en;\n        langChar = langCharMap.en;\n\n        if (typeof opts === 'object') {\n            maintainCase = opts.maintainCase || false;\n            customReplacements = (opts.custom && typeof opts.custom === 'object') ? opts.custom : customReplacements;\n            truncate = (+opts.truncate > 1 && opts.truncate) || false;\n            uricFlag = opts.uric || false;\n            uricNoSlashFlag = opts.uricNoSlash || false;\n            markFlag = opts.mark || false;\n            convertSymbols = (opts.symbols === false || opts.lang === false) ? false : true;\n            separator = opts.separator || separator;\n\n            if (uricFlag) {\n                allowedChars += uricChars;\n            }\n\n            if (uricNoSlashFlag) {\n                allowedChars += uricNoSlashChars;\n            }\n\n            if (markFlag) {\n                allowedChars += markChars;\n            }\n\n            symbol = (opts.lang && symbolMap[opts.lang] && convertSymbols) ?\n                symbolMap[opts.lang] : (convertSymbols ? symbolMap.en : {});\n\n            langChar = (opts.lang && langCharMap[opts.lang]) ?\n                langCharMap[opts.lang] :\n                opts.lang === false || opts.lang === true ? {} : langCharMap.en;\n\n            // if titleCase config is an Array, rewrite to object format\n            if (opts.titleCase && typeof opts.titleCase.length === 'number' && Array.prototype.toString.call(opts.titleCase)) {\n                opts.titleCase.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n\n                titleCase = true;\n            } else {\n                titleCase = !!opts.titleCase;\n            }\n\n            // if custom config is an Array, rewrite to object format\n            if (opts.custom && typeof opts.custom.length === 'number' && Array.prototype.toString.call(opts.custom)) {\n                opts.custom.forEach(function (v) {\n                    customReplacements[v + ''] = v + '';\n                });\n            }\n\n            // custom replacements\n            Object.keys(customReplacements).forEach(function (v) {\n                var r;\n\n                if (v.length > 1) {\n                    r = new RegExp('\\\\b' + escapeChars(v) + '\\\\b', 'gi');\n                } else {\n                    r = new RegExp(escapeChars(v), 'gi');\n                }\n\n                input = input.replace(r, customReplacements[v]);\n            });\n\n            // add all custom replacement to allowed charlist\n            for (ch in customReplacements) {\n                allowedChars += ch;\n            }\n        }\n\n        allowedChars += separator;\n\n        // escape all necessary chars\n        allowedChars = escapeChars(allowedChars);\n\n        // trim whitespaces\n        input = input.replace(/(^\\s+|\\s+$)/g, '');\n\n        lastCharWasSymbol = false;\n        lastCharWasDiatric = false;\n\n        for (i = 0, l = input.length; i < l; i++) {\n            ch = input[i];\n\n            if (isReplacedCustomChar(ch, customReplacements)) {\n                // don't convert a already converted char\n                lastCharWasSymbol = false;\n            } else if (langChar[ch]) {\n                // process language specific diactrics chars conversion\n                ch = lastCharWasSymbol && langChar[ch].match(/[A-Za-z0-9]/) ? ' ' + langChar[ch] : langChar[ch];\n\n                lastCharWasSymbol = false;\n            } else if (ch in charMap) {\n                // the transliteration changes entirely when some special characters are added\n                if (i + 1 < l && lookAheadCharArray.indexOf(input[i + 1]) >= 0) {\n                    diatricString += ch;\n                    ch = '';\n                } else if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + charMap[ch];\n                    diatricString = '';\n                } else {\n                    // process diactrics chars\n                    ch = lastCharWasSymbol && charMap[ch].match(/[A-Za-z0-9]/) ? ' ' + charMap[ch] : charMap[ch];\n                }\n\n                lastCharWasSymbol = false;\n                lastCharWasDiatric = false;\n            } else if (ch in diatricMap) {\n                diatricString += ch;\n                ch = '';\n                // end of string, put the whole meaningful word\n                if (i === l - 1) {\n                    ch = diatricMap[diatricString];\n                }\n                lastCharWasDiatric = true;\n            } else if (\n                // process symbol chars\n                symbol[ch] && !(uricFlag && uricChars\n                    .indexOf(ch) !== -1) && !(uricNoSlashFlag && uricNoSlashChars\n                    // .indexOf(ch) !== -1) && !(markFlag && markChars\n                    .indexOf(ch) !== -1)) {\n                ch = lastCharWasSymbol || result.substr(-1).match(/[A-Za-z0-9]/) ? separator + symbol[ch] : symbol[ch];\n                ch += input[i + 1] !== void 0 && input[i + 1].match(/[A-Za-z0-9]/) ? separator : '';\n\n                lastCharWasSymbol = true;\n            } else {\n                if (lastCharWasDiatric === true) {\n                    ch = diatricMap[diatricString] + ch;\n                    diatricString = '';\n                    lastCharWasDiatric = false;\n                } else if (lastCharWasSymbol && (/[A-Za-z0-9]/.test(ch) || result.substr(-1).match(/A-Za-z0-9]/))) {\n                    // process latin chars\n                    ch = ' ' + ch;\n                }\n                lastCharWasSymbol = false;\n            }\n\n            // add allowed chars\n            result += ch.replace(new RegExp('[^\\\\w\\\\s' + allowedChars + '_-]', 'g'), separator);\n        }\n\n        if (titleCase) {\n            result = result.replace(/(\\w)(\\S*)/g, function (_, i, r) {\n                var j = i.toUpperCase() + (r !== null ? r : '');\n                return (Object.keys(customReplacements).indexOf(j.toLowerCase()) < 0) ? j : j.toLowerCase();\n            });\n        }\n\n        // eliminate duplicate separators\n        // add separator\n        // trim separators from start and end\n        result = result.replace(/\\s+/g, separator)\n            .replace(new RegExp('\\\\' + separator + '+', 'g'), separator)\n            .replace(new RegExp('(^\\\\' + separator + '+|\\\\' + separator + '+$)', 'g'), '');\n\n        if (truncate && result.length > truncate) {\n            lucky = result.charAt(truncate) === separator;\n            result = result.slice(0, truncate);\n\n            if (!lucky) {\n                result = result.slice(0, result.lastIndexOf(separator));\n            }\n        }\n\n        if (!maintainCase && !titleCase) {\n            result = result.toLowerCase();\n        }\n\n        return result;\n    };\n\n    /**\n     * createSlug curried(opts)(input)\n     * @param   {object|string} opts config object or input string\n     * @return  {Function} function getSlugWithConfig()\n     **/\n    var createSlug = function createSlug(opts) {\n\n        /**\n         * getSlugWithConfig\n         * @param   {string} input string\n         * @return  {string} slug string\n         */\n        return function getSlugWithConfig(input) {\n            return getSlug(input, opts);\n        };\n    };\n\n    /**\n     * escape Chars\n     * @param   {string} input string\n     */\n    var escapeChars = function escapeChars(input) {\n        return input.replace(/[-\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n    };\n\n    /**\n     * check if the char is an already converted char from custom list\n     * @param   {char} ch character to check\n     * @param   {object} customReplacements custom translation map\n     */\n    var isReplacedCustomChar = function (ch, customReplacements) {\n        for (var c in customReplacements) {\n            if (customReplacements[c] === ch) {\n                return true;\n            }\n        }\n    };\n\n    if (typeof module !== 'undefined' && module.exports) {\n\n        // export functions for use in Node\n        module.exports = getSlug;\n        module.exports.createSlug = createSlug;\n    } else if (typeof define !== 'undefined' && define.amd) {\n\n        // export function for use in AMD\n        define([], function () {\n            return getSlug;\n        });\n    } else {\n\n        // don't overwrite global if exists\n        try {\n            if (root.getSlug || root.createSlug) {\n                throw 'speakingurl: globals exists /(getSlug|createSlug)/';\n            } else {\n                root.getSlug = getSlug;\n                root.createSlug = createSlug;\n            }\n        } catch (e) {}\n    }\n})(this);"],"mappings":"AAAA,CAAC,UAAUA,IAAV,EAAgB;EACb;EAEA;AACJ;AACA;AACA;;EACI,IAAIC,OAAO,GAAG;IAEV;IACA,KAAK,GAHK;IAIV,KAAK,GAJK;IAKV,KAAK,GALK;IAMV,KAAK,GANK;IAOV,KAAK,IAPK;IAQV,KAAK,GARK;IASV,KAAK,IATK;IAUV,KAAK,GAVK;IAWV,KAAK,GAXK;IAYV,KAAK,GAZK;IAaV,KAAK,GAbK;IAcV,KAAK,GAdK;IAeV,KAAK,GAfK;IAgBV,KAAK,GAhBK;IAiBV,KAAK,GAjBK;IAkBV,KAAK,GAlBK;IAmBV,KAAK,GAnBK;IAoBV,KAAK,GApBK;IAqBV,KAAK,GArBK;IAsBV,KAAK,GAtBK;IAuBV,KAAK,GAvBK;IAwBV,KAAK,GAxBK;IAyBV,KAAK,IAzBK;IA0BV,KAAK,GA1BK;IA2BV,KAAK,GA3BK;IA4BV,KAAK,GA5BK;IA6BV,KAAK,GA7BK;IA8BV,KAAK,GA9BK;IA+BV,KAAK,IA/BK;IAgCV,KAAK,GAhCK;IAiCV,KAAK,GAjCK;IAkCV,KAAK,IAlCK;IAmCV,KAAK,IAnCK;IAoCV,KAAK,GApCK;IAqCV,KAAK,GArCK;IAsCV,KAAK,GAtCK;IAuCV,KAAK,GAvCK;IAwCV,KAAK,IAxCK;IAyCV,KAAK,GAzCK;IA0CV,KAAK,IA1CK;IA2CV,KAAK,GA3CK;IA4CV,KAAK,GA5CK;IA6CV,KAAK,GA7CK;IA8CV,KAAK,GA9CK;IA+CV,KAAK,GA/CK;IAgDV,KAAK,GAhDK;IAiDV,KAAK,GAjDK;IAkDV,KAAK,GAlDK;IAmDV,KAAK,GAnDK;IAoDV,KAAK,GApDK;IAqDV,KAAK,GArDK;IAsDV,KAAK,GAtDK;IAuDV,KAAK,GAvDK;IAwDV,KAAK,GAxDK;IAyDV,KAAK,GAzDK;IA0DV,KAAK,IA1DK;IA2DV,KAAK,GA3DK;IA4DV,KAAK,GA5DK;IA6DV,KAAK,GA7DK;IA8DV,KAAK,GA9DK;IA+DV,KAAK,GA/DK;IAgEV,KAAK,IAhEK;IAiEV,KAAK,GAjEK;IAkEV,KAAK,GAlEK;IAmEV,KAAK,IAnEK;IAoEV,KAAK,GApEK;IAqEV,KAAK,IArEK;IAuEV;IAEA;IACA,KAAK,GA1EK;IA2EV,KAAK,GA3EK;IA4EV,KAAK,GA5EK;IA6EV,KAAK,IA7EK;IA8EV,KAAK,GA9EK;IA+EV,KAAK,GA/EK;IAgFV,KAAK,GAhFK;IAiFV,KAAK,GAjFK;IAkFV,KAAK,GAlFK;IAmFV,KAAK,IAnFK;IAoFV,KAAK,GApFK;IAqFV,KAAK,GArFK;IAsFV,KAAK,IAtFK;IAuFV,KAAK,GAvFK;IAwFV,KAAK,IAxFK;IAyFV,KAAK,GAzFK;IA0FV,KAAK,GA1FK;IA2FV,KAAK,GA3FK;IA4FV,KAAK,IA5FK;IA6FV,KAAK,GA7FK;IA8FV,KAAK,IA9FK;IA+FV,KAAK,GA/FK;IAgGV,KAAK,GAhGK;IAiGV,KAAK,GAjGK;IAkGV,KAAK,IAlGK;IAmGV,KAAK,GAnGK;IAoGV,KAAK,GApGK;IAqGV,KAAK,GArGK;IAsGV,KAAK,GAtGK;IAuGV,KAAK,GAvGK;IAwGV,KAAK,GAxGK;IAyGV,KAAK,GAzGK;IA0GV,KAAK,GA1GK;IA2GV,KAAK,GA3GK;IA4GV,KAAK,GA5GK;IA6GV,KAAK,GA7GK;IA8GV,KAAK,IA9GK;IA+GV,KAAK,KA/GK;IAgHV,KAAK,KAhHK;IAiHV,KAAK,KAjHK;IAmHV;IACA,KAAK,GApHK;IAqHV,KAAK,IArHK;IAsHV,KAAK,GAtHK;IAuHV,KAAK,IAvHK;IAwHV,KAAK,GAxHK;IAyHV,KAAK,GAzHK;IA2HV;IACA,KAAK,GA5HK;IA6HV,KAAK,IA7HK;IA8HV,KAAK,GA9HK;IA+HV,KAAK,IA/HK;IAgIV,KAAK,GAhIK;IAiIV,KAAK,IAjIK;IAkIV,KAAK,EAlIK;IAoIV;IACA,KAAK,GArIK;IAsIV,KAAK,GAtIK;IAuIV,KAAK,GAvIK;IAwIV,KAAK,GAxIK;IAyIV,KAAK,GAzIK;IA0IV,KAAK,GA1IK;IA2IV,KAAK,GA3IK;IA4IV,KAAK,GA5IK;IA6IV,KAAK,GA7IK;IA8IV,KAAK,GA9IK;IAgJV;IACA,KAAK,GAjJK;IAkJV,KAAK,GAlJK;IAmJV,KAAK,GAnJK;IAoJV,KAAK,GApJK;IAqJV,KAAK,GArJK;IAsJV,KAAK,GAtJK;IAuJV,KAAK,GAvJK;IAwJV,KAAK,GAxJK;IAyJV,KAAK,GAzJK;IA0JV,KAAK,GA1JK;IA4JV;IACA,KAAK,GA7JK;IA8JV,KAAK,IA9JK;IA+JV,KAAK,GA/JK;IAgKV,KAAK,IAhKK;IAiKV,KAAK,IAjKK;IAkKV,KAAK,GAlKK;IAmKV,KAAK,IAnKK;IAoKV,KAAK,GApKK;IAqKV,MAAM,IArKI;IAsKV,KAAK,IAtKK;IAuKV,KAAK,GAvKK;IAwKV,KAAK,IAxKK;IAyKV,KAAK,GAzKK;IA0KV,KAAK,IA1KK;IA2KV,KAAK,IA3KK;IA4KV,KAAK,GA5KK;IA6KV,KAAK,IA7KK;IA8KV,KAAK,GA9KK;IA+KV,KAAK,IA/KK;IAgLV,KAAK,GAhLK;IAiLV,KAAK,GAjLK;IAkLV,KAAK,IAlLK;IAmLV,KAAK,GAnLK;IAoLV,KAAK,IApLK;IAqLV,KAAK,GArLK;IAsLV,KAAK,GAtLK;IAuLV,KAAK,IAvLK;IAwLV,KAAK,GAxLK;IAyLV,KAAK,GAzLK;IA0LV,KAAK,IA1LK;IA2LV,KAAK,GA3LK;IA4LV,KAAK,IA5LK;IA6LV,KAAK,GA7LK;IA8LV;IACA,KAAK,GA/LK;IAgMV,KAAK,IAhMK;IAiMV,KAAK,GAjMK;IAkMV,MAAM,IAlMI;IAmMV,MAAM,KAnMI;IAoMV,KAAK,GApMK;IAqMV;IACA,KAAK,GAtMK;IAuMV,KAAK,IAvMK;IAwMV,KAAK,GAxMK;IAyMV,KAAK,IAzMK;IA0MV,KAAK,GA1MK;IA2MV,KAAK,IA3MK;IA4MV,KAAK,IA5MK;IA6MV,QAAQ,IA7ME;IA8MV,KAAK,IA9MK;IA+MV;IACA,KAAK,GAhNK;IAiNV,KAAK,GAjNK;IAkNV,KAAK,GAlNK;IAmNV,KAAK,GAnNK;IAoNV,KAAK,GApNK;IAqNV,KAAK,GArNK;IAsNV,KAAK,GAtNK;IAuNV,KAAK,GAvNK;IAwNV,KAAK,GAxNK;IAyNV,KAAK,GAzNK;IA0NV;IACA,KAAK,EA3NK;IA4NV,KAAK,EA5NK;IA6NV,KAAK,EA7NK;IA+NV;IACA,KAAK,GAhOK;IAiOV,KAAK,GAjOK;IAkOV,KAAK,GAlOK;IAmOV,KAAK,GAnOK;IAoOV,KAAK,GApOK;IAqOV,KAAK,GArOK;IAsOV,KAAK,GAtOK;IAuOV,KAAK,GAvOK;IAwOV,KAAK,GAxOK;IAyOV,KAAK,GAzOK;IA0OV,KAAK,GA1OK;IA2OV,KAAK,GA3OK;IA4OV,KAAK,GA5OK;IA6OV,KAAK,GA7OK;IA8OV,KAAK,GA9OK;IA+OV,KAAK,GA/OK;IAgPV,KAAK,GAhPK;IAiPV,KAAK,GAjPK;IAmPV;IACA,KAAK,GApPK;IAqPV,KAAK,IArPK;IAsPV,KAAK,GAtPK;IAuPV,KAAK,GAvPK;IAwPV,KAAK,GAxPK;IAyPV,KAAK,IAzPK;IA0PV,KAAK,GA1PK;IA2PV,KAAK,GA3PK;IA4PV,KAAK,GA5PK;IA6PV,KAAK,GA7PK;IA8PV,KAAK,GA9PK;IA+PV,KAAK,IA/PK;IAgQV,KAAK,IAhQK;IAiQV,KAAK,GAjQK;IAkQV,KAAK,GAlQK;IAmQV,KAAK,IAnQK;IAoQV,KAAK,GApQK;IAqQV,KAAK,GArQK;IAsQV,KAAK,GAtQK;IAuQV,KAAK,GAvQK;IAwQV,KAAK,GAxQK;IAyQV,KAAK,GAzQK;IA0QV,KAAK,GA1QK;IA2QV,KAAK,IA3QK;IA4QV,KAAK,IA5QK;IA6QV,KAAK,IA7QK;IA8QV,KAAK,IA9QK;IA+QV,KAAK,IA/QK;IAgRV,KAAK,GAhRK;IAiRV,KAAK,IAjRK;IAkRV,KAAK,GAlRK;IAmRV,KAAK,GAnRK;IAoRV,KAAK,GApRK;IAqRV,KAAK,GArRK;IAsRV,KAAK,GAtRK;IAuRV,KAAK,IAvRK;IAwRV,KAAK,GAxRK;IAyRV,KAAK,GAzRK;IA0RV,KAAK,GA1RK;IA2RV,KAAK,IA3RK;IA4RV,KAAK,GA5RK;IA6RV,KAAK,IA7RK;IA8RV,KAAK,GA9RK;IA+RV,KAAK,IA/RK;IAgSV,KAAK,GAhSK;IAiSV,KAAK,IAjSK;IAkSV,KAAK,GAlSK;IAmSV,KAAK,IAnSK;IAoSV,KAAK,EApSK;IAsSV;IACA;IACA,KAAK,GAxSK;IAySV,KAAK,GAzSK;IA0SV,KAAK,GA1SK;IA2SV,KAAK,GA3SK;IA4SV,KAAK,GA5SK;IA6SV,KAAK,GA7SK;IA8SV,KAAK,GA9SK;IA+SV,KAAK,GA/SK;IAgTV,KAAK,GAhTK;IAiTV,KAAK,GAjTK;IAkTV,KAAK,GAlTK;IAmTV,KAAK,GAnTK;IAoTV,KAAK,GApTK;IAqTV,KAAK,GArTK;IAsTV,KAAK,GAtTK;IAuTV,KAAK,IAvTK;IAwTV,KAAK,GAxTK;IAyTV,KAAK,GAzTK;IA0TV,KAAK,GA1TK;IA2TV,KAAK,GA3TK;IA4TV,KAAK,GA5TK;IA6TV,KAAK,GA7TK;IA8TV,KAAK,IA9TK;IA+TV,KAAK,GA/TK;IAgUV,KAAK,IAhUK;IAiUV,KAAK,IAjUK;IAkUV,KAAK,IAlUK;IAmUV,KAAK,IAnUK;IAoUV,KAAK,IApUK;IAqUV,KAAK,IArUK;IAsUV,KAAK,IAtUK;IAuUV,KAAK,GAvUK;IAwUV,KAAK,GAxUK;IA0UV;IACA,KAAK,GA3UK;IA4UV,KAAK,GA5UK;IA6UV,KAAK,GA7UK;IA8UV,KAAK,GA9UK;IA+UV,KAAK,GA/UK;IAgVV,KAAK,GAhVK;IAiVV,KAAK,GAjVK;IAkVV,KAAK,IAlVK;IAmVV,KAAK,GAnVK;IAoVV,KAAK,GApVK;IAqVV,KAAK,GArVK;IAsVV,KAAK,GAtVK;IAuVV,KAAK,GAvVK;IAwVV,KAAK,IAxVK;IAyVV,KAAK,GAzVK;IA0VV,KAAK,GA1VK;IA2VV,KAAK,GA3VK;IA4VV,KAAK,GA5VK;IA6VV,KAAK,GA7VK;IA8VV,KAAK,GA9VK;IA+VV,KAAK,GA/VK;IAgWV,KAAK,GAhWK;IAiWV,KAAK,IAjWK;IAkWV,KAAK,GAlWK;IAmWV,KAAK,GAnWK;IAoWV,KAAK,GApWK;IAqWV,KAAK,GArWK;IAsWV,KAAK,GAtWK;IAuWV,KAAK,GAvWK;IAwWV,KAAK,GAxWK;IAyWV,KAAK,GAzWK;IA0WV,KAAK,GA1WK;IA2WV,KAAK,GA3WK;IA4WV,KAAK,GA5WK;IA6WV,KAAK,GA7WK;IA8WV,KAAK,GA9WK;IA+WV,KAAK,GA/WK;IAgXV,KAAK,GAhXK;IAiXV,KAAK,GAjXK;IAkXV,KAAK,GAlXK;IAmXV,KAAK,GAnXK;IAoXV,KAAK,GApXK;IAqXV,KAAK,GArXK;IAsXV,KAAK,IAtXK;IAuXV,KAAK,GAvXK;IAwXV,KAAK,GAxXK;IAyXV,KAAK,GAzXK;IA0XV,KAAK,GA1XK;IA2XV,KAAK,GA3XK;IA4XV,KAAK,IA5XK;IA6XV,KAAK,GA7XK;IA8XV,KAAK,GA9XK;IA+XV,KAAK,GA/XK;IAgYV,KAAK,GAhYK;IAiYV,KAAK,GAjYK;IAkYV,KAAK,GAlYK;IAmYV,KAAK,GAnYK;IAoYV,KAAK,GApYK;IAqYV,KAAK,IArYK;IAsYV,KAAK,GAtYK;IAuYV,KAAK,GAvYK;IAwYV,KAAK,GAxYK;IAyYV,KAAK,GAzYK;IA0YV,KAAK,GA1YK;IA2YV,KAAK,GA3YK;IA4YV,KAAK,GA5YK;IA6YV,KAAK,GA7YK;IA8YV,KAAK,GA9YK;IA+YV,KAAK,GA/YK;IAiZV;IACA,KAAK,GAlZK;IAmZV;IACA,KAAK,GApZK;IAqZV,KAAK,GArZK;IAsZV,KAAK,GAtZK;IAuZV,KAAK,GAvZK;IAwZV,KAAK,GAxZK;IAyZV,KAAK,GAzZK;IA0ZV;IACA,KAAK,GA3ZK;IA4ZV;IACA,KAAK,GA7ZK;IA8ZV;IACA,KAAK,GA/ZK;IAgaV,KAAK,GAhaK;IAiaV,KAAK,GAjaK;IAkaV,KAAK,GAlaK;IAmaV,KAAK,GAnaK;IAoaV,KAAK,GApaK;IAqaV;IACA,KAAK,GAtaK;IAuaV;IAEA;IACA,KAAK,IA1aK;IA2aV,KAAK,IA3aK;IA4aV,KAAK,IA5aK;IA6aV,KAAK,IA7aK;IA8aV,KAAK,IA9aK;IA+aV,KAAK,IA/aK;IAgbV,MAAM,IAhbI;IAibV,MAAM,IAjbI;IAmbV;IACA,KAAK,GApbK;IAqbV,KAAK,GArbK;IAsbV,KAAK,GAtbK;IAubV,KAAK,GAvbK;IAwbV,KAAK,GAxbK;IAybV;IACA,KAAK,GA1bK;IA2bV,KAAK,GA3bK;IA4bV,KAAK,GA5bK;IA6bV,KAAK,GA7bK;IA8bV,KAAK,GA9bK;IA+bV,KAAK,GA/bK;IAgcV,KAAK,GAhcK;IAicV,KAAK,GAjcK;IAkcV,KAAK,GAlcK;IAmcV,KAAK,GAncK;IAocV,KAAK,GApcK;IAscV;IACA,KAAK,IAvcK;IAwcV,KAAK,GAxcK;IAycV,KAAK,IAzcK;IA0cV,KAAK,GA1cK;IA2cV,KAAK,IA3cK;IA4cV,KAAK,GA5cK;IA6cV,KAAK,IA7cK;IA8cV,KAAK,GA9cK;IAgdV;IACA,KAAK,GAjdK;IAkdV,KAAK,GAldK;IAmdV,KAAK,GAndK;IAodV,KAAK,GApdK;IAqdV;IACA;IACA,KAAK,GAvdK;IAwdV,KAAK,GAxdK;IAydV,KAAK,GAzdK;IA0dV,KAAK,GA1dK;IA4dV;IACA;IAEA,KAAK,GA/dK;IAgeV,KAAK,GAheK;IAieV,KAAK,GAjeK;IAkeV,KAAK,GAleK;IAmeV,KAAK,GAneK;IAoeV,KAAK,GApeK;IAqeV,KAAK,IAreK;IAseV,KAAK,IAteK;IAueV,KAAK,GAveK;IAweV,KAAK,GAxeK;IAyeV,KAAK,GAzeK;IA0eV,KAAK,GA1eK;IA2eV,KAAK,GA3eK;IA4eV,KAAK,GA5eK;IA6eV,KAAK,GA7eK;IA8eV,KAAK,GA9eK;IA+eV,KAAK,GA/eK;IAgfV,KAAK,GAhfK;IAifV,KAAK,GAjfK;IAkfV,KAAK,GAlfK;IAmfV,KAAK,GAnfK;IAofV,KAAK,GApfK;IAqfV,KAAK,IArfK;IAsfV,KAAK,GAtfK;IAufV,KAAK,IAvfK;IAwfV,KAAK,IAxfK;IAyfV,KAAK,IAzfK;IA0fV,KAAK,EA1fK;IA2fV,KAAK,GA3fK;IA4fV,KAAK,EA5fK;IA6fV,KAAK,GA7fK;IA8fV,KAAK,IA9fK;IA+fV,KAAK,IA/fK;IAggBV,KAAK,GAhgBK;IAigBV,KAAK,GAjgBK;IAkgBV,KAAK,GAlgBK;IAmgBV,KAAK,GAngBK;IAogBV,KAAK,GApgBK;IAqgBV,KAAK,GArgBK;IAsgBV,KAAK,IAtgBK;IAugBV,KAAK,IAvgBK;IAwgBV,KAAK,GAxgBK;IAygBV,KAAK,GAzgBK;IA0gBV,KAAK,GA1gBK;IA2gBV,KAAK,GA3gBK;IA4gBV,KAAK,GA5gBK;IA6gBV,KAAK,GA7gBK;IA8gBV,KAAK,GA9gBK;IA+gBV,KAAK,GA/gBK;IAghBV,KAAK,GAhhBK;IAihBV,KAAK,GAjhBK;IAkhBV,KAAK,GAlhBK;IAmhBV,KAAK,GAnhBK;IAohBV,KAAK,GAphBK;IAqhBV,KAAK,GArhBK;IAshBV,KAAK,IAthBK;IAuhBV,KAAK,GAvhBK;IAwhBV,KAAK,IAxhBK;IAyhBV,KAAK,IAzhBK;IA0hBV,KAAK,IA1hBK;IA2hBV,KAAK,EA3hBK;IA4hBV,KAAK,GA5hBK;IA6hBV,KAAK,EA7hBK;IA8hBV,KAAK,GA9hBK;IA+hBV,KAAK,IA/hBK;IAgiBV,KAAK,IAhiBK;IAkiBV;IACA,KAAK,IAniBK;IAoiBV,KAAK,GApiBK;IAqiBV;IACA;IACA,KAAK,GAviBK;IAwiBV,KAAK,IAxiBK;IAyiBV,KAAK,IAziBK;IA0iBV,KAAK,GA1iBK;IA2iBV;IACA;IACA,KAAK,GA7iBK;IA8iBV,KAAK,IA9iBK;IAgjBV;IACA,KAAK,GAjjBK;IAkjBV,KAAK,GAljBK;IAmjBV,KAAK,GAnjBK;IAojBV,KAAK,GApjBK;IAqjBV,KAAK,GArjBK;IAsjBV,KAAK,GAtjBK;IAwjBV;IACA,KAAK,GAzjBK;IA0jBV,KAAK,GA1jBK;IA2jBV,KAAK,GA3jBK;IA4jBV,KAAK,GA5jBK;IA6jBV;IACA;IACA;IACA;IACA;IACA;IACA,KAAK,GAnkBK;IAokBV,KAAK,GApkBK;IAskBV;IACA,KAAK,GAvkBK;IAwkBV,KAAK,GAxkBK;IAykBV,KAAK,GAzkBK;IA0kBV,KAAK,GA1kBK;IA2kBV,KAAK,GA3kBK;IA4kBV,KAAK,GA5kBK;IA6kBV,KAAK,GA7kBK;IA8kBV,KAAK,GA9kBK;IA+kBV,KAAK,GA/kBK;IAglBV,KAAK,GAhlBK;IAilBV,KAAK,GAjlBK;IAklBV,KAAK,GAllBK;IAmlBV,KAAK,GAnlBK;IAolBV,KAAK,GAplBK;IAqlBV,KAAK,GArlBK;IAslBV,KAAK,GAtlBK;IAulBV,KAAK,GAvlBK;IAwlBV,KAAK,GAxlBK;IAylBV,KAAK,GAzlBK;IA0lBV,KAAK,GA1lBK;IA2lBV,KAAK,GA3lBK;IA4lBV,KAAK,GA5lBK;IA6lBV,KAAK,GA7lBK;IA8lBV,KAAK,GA9lBK;IA+lBV,KAAK,GA/lBK;IAgmBV,KAAK,GAhmBK;IAimBV,KAAK,GAjmBK;IAkmBV,KAAK,GAlmBK;IAmmBV,KAAK,GAnmBK;IAomBV,KAAK,GApmBK;IAqmBV,KAAK,GArmBK;IAsmBV,KAAK,GAtmBK;IAumBV,KAAK,GAvmBK;IAwmBV,KAAK,GAxmBK;IAymBV,KAAK,GAzmBK;IA0mBV,KAAK,GA1mBK;IA2mBV,KAAK,GA3mBK;IA4mBV,KAAK,GA5mBK;IA6mBV,KAAK,GA7mBK;IA8mBV,KAAK,GA9mBK;IA+mBV,KAAK,GA/mBK;IAgnBV,KAAK,GAhnBK;IAinBV,KAAK,GAjnBK;IAknBV,KAAK,GAlnBK;IAmnBV,KAAK,GAnnBK;IAonBV,KAAK,GApnBK;IAqnBV,KAAK,GArnBK;IAsnBV,KAAK,GAtnBK;IAunBV,KAAK,GAvnBK;IAwnBV,KAAK,GAxnBK;IAynBV,KAAK,GAznBK;IA0nBV,KAAK,GA1nBK;IA2nBV,KAAK,GA3nBK;IA4nBV,KAAK,GA5nBK;IA6nBV,KAAK,GA7nBK;IA8nBV,KAAK,GA9nBK;IA+nBV,KAAK,GA/nBK;IAgoBV,KAAK,GAhoBK;IAioBV,KAAK,GAjoBK;IAkoBV,KAAK,GAloBK;IAmoBV,KAAK,GAnoBK;IAooBV,KAAK,GApoBK;IAqoBV,KAAK,GAroBK;IAsoBV,KAAK,GAtoBK;IAuoBV,KAAK,GAvoBK;IAwoBV,KAAK,GAxoBK;IAyoBV,KAAK,GAzoBK;IA0oBV,KAAK,GA1oBK;IA2oBV,KAAK,GA3oBK;IA4oBV,KAAK,GA5oBK;IA6oBV,KAAK,GA7oBK;IA8oBV,KAAK,GA9oBK;IA+oBV,KAAK,GA/oBK;IAgpBV,KAAK,GAhpBK;IAipBV,KAAK,GAjpBK;IAkpBV,KAAK,GAlpBK;IAmpBV,KAAK,GAnpBK;IAopBV,KAAK,GAppBK;IAqpBV,KAAK,GArpBK;IAspBV,KAAK,GAtpBK;IAupBV,KAAK,GAvpBK;IAwpBV,KAAK,GAxpBK;IAypBV,KAAK,GAzpBK;IA0pBV,KAAK,GA1pBK;IA2pBV,KAAK,GA3pBK;IA4pBV,KAAK,GA5pBK;IA6pBV,KAAK,GA7pBK;IA8pBV,KAAK,GA9pBK;IA+pBV,KAAK,GA/pBK;IAgqBV,KAAK,GAhqBK;IAiqBV,KAAK,GAjqBK;IAkqBV;IACA;IACA,KAAK,GApqBK;IAqqBV,KAAK,GArqBK;IAsqBV,KAAK,GAtqBK;IAuqBV,KAAK,GAvqBK;IAwqBV,KAAK,GAxqBK;IAyqBV,KAAK,GAzqBK;IA0qBV,KAAK,GA1qBK;IA2qBV,KAAK,GA3qBK;IA4qBV,KAAK,GA5qBK;IA6qBV,KAAK,GA7qBK;IA8qBV,KAAK,GA9qBK;IA+qBV,KAAK,GA/qBK;IAgrBV,KAAK,GAhrBK;IAirBV,KAAK,GAjrBK;IAkrBV,KAAK,GAlrBK;IAmrBV,KAAK,GAnrBK;IAorBV,KAAK,GAprBK;IAqrBV,KAAK,GArrBK;IAsrBV,KAAK,IAtrBK;IAurBV,KAAK,IAvrBK;IAwrBV,KAAK,IAxrBK;IAyrBV,KAAK,IAzrBK;IA0rBV,KAAK,IA1rBK;IA2rBV,KAAK,IA3rBK;IA4rBV,KAAK,IA5rBK;IA6rBV,KAAK,IA7rBK;IA8rBV,KAAK,IA9rBK;IA+rBV,KAAK,IA/rBK;IAgsBV,KAAK,IAhsBK;IAksBV,KAAK,GAlsBK;IAmsBV,KAAK,GAnsBK;IAosBV,KAAK,GApsBK;IAqsBV,KAAK,GArsBK;IAssBV,KAAK,GAtsBK;IAusBV,KAAK,GAvsBK;IAwsBV,KAAK,GAxsBK;IAysBV,KAAK,GAzsBK;IA0sBV,KAAK,GA1sBK;IA2sBV,KAAK,IA3sBK;IA6sBV,KAAK,GA7sBK;IA8sBV,KAAK,IA9sBK;IA+sBV,KAAK,IA/sBK;IAgtBV,KAAK,IAhtBK;IAitBV,KAAK,IAjtBK;IAktBV,KAAK,IAltBK;IAmtBV,KAAK,IAntBK;IAotBV,KAAK,IAptBK;IAqtBV,KAAK,IArtBK;IAstBV,KAAK,IAttBK;IAutBV,KAAK,IAvtBK;IAytBV,KAAK,GAztBK;IA0tBV,KAAK,GA1tBK;IA2tBV,KAAK,GA3tBK;IA4tBV,KAAK,GA5tBK;IA6tBV,KAAK,GA7tBK;IA8tBV,KAAK,GA9tBK;IA+tBV,KAAK,GA/tBK;IAguBV,KAAK,GAhuBK;IAiuBV,KAAK,GAjuBK;IAkuBV,KAAK,GAluBK;IAmuBV,KAAK,GAnuBK;IAouBV,KAAK,GApuBK;IAquBV,KAAK,GAruBK;IAsuBV,KAAK,GAtuBK;IAuuBV,KAAK,GAvuBK;IAwuBV,KAAK,GAxuBK;IAyuBV,KAAK,GAzuBK;IA0uBV,KAAK,GA1uBK;IA2uBV,KAAK,GA3uBK;IA4uBV,KAAK,GA5uBK;IA6uBV,KAAK,GA7uBK;IA8uBV,KAAK,GA9uBK;IA+uBV,KAAK,GA/uBK;IAgvBV,KAAK,GAhvBK;IAivBV,KAAK,GAjvBK;IAkvBV,KAAK,GAlvBK;IAovBV,KAAK,GApvBK;IAqvBV,KAAK,GArvBK;IAsvBV,KAAK,GAtvBK;IAuvBV,KAAK,GAvvBK;IAwvBV,KAAK,GAxvBK;IAyvBV,KAAK,GAzvBK;IA0vBV,KAAK,GA1vBK;IA2vBV,KAAK,GA3vBK;IA4vBV,KAAK,GA5vBK;IA6vBV,KAAK,GA7vBK;IA8vBV,KAAK,GA9vBK;IA+vBV,KAAK,GA/vBK;IAgwBV,KAAK,GAhwBK;IAiwBV,KAAK,GAjwBK;IAkwBV,KAAK,GAlwBK;IAmwBV,KAAK,GAnwBK;IAowBV,KAAK,GApwBK;IAqwBV,KAAK,GArwBK;IAswBV,KAAK,GAtwBK;IAuwBV,KAAK,GAvwBK;IAwwBV,KAAK,GAxwBK;IAywBV,KAAK,GAzwBK;IA0wBV,KAAK,GA1wBK;IA2wBV,KAAK,GA3wBK;IA4wBV,KAAK,GA5wBK;IA6wBV,KAAK,GA7wBK;IA+wBV;IACA,KAAK,GAhxBK;IAixBV,KAAK,GAjxBK;IAkxBV,KAAK,GAlxBK;IAmxBV,KAAK,GAnxBK;IAoxBV,KAAK,GApxBK;IAqxBV,KAAK,GArxBK;IAsxBV,KAAK,MAtxBK;IAuxBV,KAAK,KAvxBK;IAwxBV,KAAK,IAxxBK;IAyxBV,KAAK,IAzxBK;IA0xBV,KAAK,KA1xBK;IA2xBV,KAAK,GA3xBK;IA4xBV,KAAK,MA5xBK;IA6xBV,KAAK,KA7xBK;IA8xBV,KAAK,GA9xBK;IA+xBV,KAAK,GA/xBK;IAgyBV,KAAK,GAhyBK;IAiyBV,KAAK,GAjyBK;IAkyBV,KAAK,GAlyBK;IAmyBV,KAAK,GAnyBK;IAqyBV;IACA,KAAK,KAtyBK;IAuyBV,KAAK,KAvyBK;IAwyBV,KAAK,KAxyBK;IAyyBV,KAAK,KAzyBK;IA0yBV,KAAK,KA1yBK;IA2yBV,KAAK,KA3yBK;IA4yBV,KAAK,KA5yBK;IA6yBV,KAAK,KA7yBK;IA8yBV,KAAK,KA9yBK;IA+yBV,KAAK,KA/yBK;IAgzBV,KAAK,KAhzBK;IAizBV,KAAK,KAjzBK;IAkzBV,KAAK,KAlzBK;IAmzBV,KAAK,KAnzBK;IAozBV,KAAK,KApzBK;IAqzBV,KAAK,KArzBK;IAszBV,KAAK,KAtzBK;IAuzBV,KAAK,KAvzBK;IAwzBV,KAAK,KAxzBK;IAyzBV,KAAK,MAzzBK;IA0zBV,KAAK,KA1zBK;IA2zBV,KAAK,KA3zBK;IA4zBV,KAAK,KA5zBK;IA6zBV,KAAK,KA7zBK;IA8zBV,KAAK,KA9zBK;IA+zBV,KAAK,KA/zBK;IAg0BV,KAAK,KAh0BK;IAi0BV,KAAK,KAj0BK;IAk0BV,KAAK,IAl0BK;IAm0BV,KAAK,KAn0BK;IAo0BV,KAAK,KAp0BK;IAq0BV,KAAK,KAr0BK;IAs0BV,MAAM,KAt0BI;IAu0BV,KAAK,KAv0BK;IAw0BV,KAAK,KAx0BK;IAy0BV,KAAK,KAz0BK;IA00BV,OAAO,KA10BG;IA20BV,MAAM,KA30BI;IA40BV,KAAK,KA50BK;IA60BV,KAAK;EA70BK,CAAd;EAi1BA;AACJ;AACA;AACA;AACA;;EACI,IAAIC,kBAAkB,GAAG,CACrB;EACA,GAFqB,EAIrB;EACA,GALqB,CAAzB;EAQA;AACJ;AACA;AACA;;EACI,IAAIC,UAAU,GAAG;IACb;IACA;IACA,KAAK,GAHQ;IAIb,KAAK,GAJQ;IAKb,KAAK,GALQ;IAMb,KAAK,GANQ;IAOb,KAAK,GAPQ;IAQb,KAAK,GARQ;IASb,MAAM,GATO;IAUb,KAAK,GAVQ;IAWb,KAAK,GAXQ;IAYb,QAAQ,MAZK;IAab,MAAM,IAbO;IAcb,OAAO,IAdM;IAeb,MAAM,IAfO;IAgBb,OAAO,IAhBM;IAiBb,KAAK,GAjBQ;IAiBH;IACV,MAAM,IAlBO;IAmBb,QAAQ,KAnBK;IAoBb,QAAQ,KApBK;IAqBb,MAAM,IArBO;IAsBb,QAAQ,MAtBK;IAuBb,QAAQ,MAvBK;IAwBb,MAAM,IAxBO;IAyBb,MAAM,GAzBO;IA0Bb,MAAM,IA1BO;IA2Bb,OAAO,KA3BM;IA4Bb,OAAO,IA5BM;IA6Bb,OAAO,IA7BM;IA8Bb,OAAO,IA9BM;IA+Bb,MAAM,GA/BO;IAgCb,QAAQ,IAhCK;IAiCb,OAAO,KAjCM;IAkCb,MAAM,IAlCO;IAmCb,OAAO,IAnCM;IAoCb,OAAO,KApCM;IAqCb,OAAO,IArCM;IAsCb,OAAO,IAtCM;IAuCb,MAAM,IAvCO;IAwCb,OAAO,KAxCM;IAyCb,OAAO,IAzCM;IA0Cb,OAAO,IA1CM;IA2Cb,SAAS,KA3CI;IA4Cb,MAAM,IA5CO;IA6Cb,OAAO,KA7CM;IA8Cb,OAAO,IA9CM;IA+Cb,OAAO,IA/CM;IAgDb,MAAM,GAhDO;IAiDb,QAAQ,IAjDK;IAkDb,MAAM,IAlDO;IAmDb,KAAK,IAnDQ;IAoDb,MAAM,KApDO;IAqDb,MAAM,IArDO;IAuDb;IACA,OAAO,IAxDM;IAyDb,OAAO;EAzDM,CAAjB;EA4DA;AACJ;AACA;AACA;;EACI,IAAIC,WAAW,GAAG;IACd,MAAM,EADQ;IACJ;IAEV,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,GANH;MAOF,KAAK,GAPH;MAQF,KAAK,GARH;MASF,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK,GAZH;MAaF,KAAK,GAbH;MAcF,KAAK;IAdH,CAHQ;IAoBd,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,GANH;MAOF,KAAK,GAPH;MAQF,KAAK,GARH;MASF,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK,GAZH;MAaF,KAAK,GAbH;MAcF,KAAK,GAdH;MAeF,KAAK,GAfH;MAgBF,KAAK,GAhBH;MAiBF,KAAK,GAjBH;MAkBF,KAAK;IAlBH,CApBQ;IAyCd,MAAM;MAAE;MACJ;MACA;MACA,KAAK,GAHH;MAGQ;MACV,KAAK,GAJH;MAIQ;MACV,KAAK,GALH;MAKQ;MACV,KAAK,GANH,CAMO;;IANP,CAzCQ;IAkDd,MAAM;MAAE;MACJ,KAAK,GADH;MACQ;MACV,KAAK,GAFH;MAEQ;MACV;MACA;MACA,KAAK,GALH;MAKQ;MACV,KAAK,GANH;MAMQ;MACV;MACA;MACA,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK;IAZH,CAlDQ;IAiEd,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,GANH;MAOF,KAAK,GAPH;MAQF,KAAK,GARH;MASF,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK,GAZH;MAaF,KAAK,GAbH;MAcF,KAAK,GAdH;MAeF,KAAK,GAfH;MAgBF,KAAK,GAhBH;MAiBF,KAAK;IAjBH,CAjEQ;IAqFd,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,GANH;MAOF,KAAK,GAPH;MAQF,KAAK,GARH;MASF,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK,GAZH;MAaF,KAAK,GAbH;MAcF,KAAK,GAdH;MAeF,KAAK,GAfH;MAgBF,KAAK,GAhBH;MAiBF,KAAK,GAjBH;MAkBF,KAAK,GAlBH;MAmBF,KAAK,GAnBH;MAoBF,KAAK,GApBH;MAqBF,KAAK,GArBH;MAsBF,KAAK;IAtBH,CArFQ;IA8Gd,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,GANH;MAOF,KAAK,GAPH;MAQF,KAAK,GARH;MASF,KAAK,GATH;MAUF,KAAK,GAVH;MAWF,KAAK,GAXH;MAYF,KAAK,GAZH;MAaF,KAAK,GAbH;MAcF,KAAK,GAdH;MAeF,KAAK,GAfH;MAgBF,KAAK,GAhBH;MAiBF,KAAK,GAjBH;MAkBF,KAAK;IAlBH,CA9GQ;IAmId,MAAM;MAAE;MACJ;MACA;MACA,KAAK,GAHH;MAGQ;MACV,KAAK,GAJH;MAIQ;MACV,KAAK,GALH;MAKQ;MACV,KAAK,GANH,CAMO;;IANP,CAnIQ;IA4Id,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK;IAFH,CA5IQ;IAiJd,MAAM;MAAE;MACJ,KAAK,IADH;MAEF,KAAK,IAFH;MAGF,KAAK,IAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK;IANH,CAjJQ;IA0Jd,MAAM;MAAE;MACJ,KAAK,GADH;MAEF,KAAK,GAFH;MAGF,KAAK,GAHH;MAIF,KAAK;IAJH;EA1JQ,CAAlB;EAkKA;AACJ;AACA;AACA;AACA;;EACI,IAAIC,SAAS,GAAG;IACZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,KAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,UANH;MAOF,KAAK,WAPH;MAQF,KAAK,QARH;MASF,KAAK;IATH,CADM;IAaZ,MAAM,EAbM;IAeZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,SAFH;MAGF,KAAK,MAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,WANH;MAOF,KAAK,SAPH;MAQF,KAAK,WARH;MASF,KAAK;IATH,CAfM;IA2BZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,OAHH;MAIF,KAAK,GAJH;MAKF,KAAK,MALH;MAMF,KAAK,WANH;MAOF,KAAK,WAPH;MAQF,KAAK,QARH;MASF,KAAK;IATH,CA3BM;IAuCZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,OAHH;MAIF,KAAK,KAJH;MAKF,KAAK,MALH;MAMF,KAAK,aANH;MAOF,KAAK,cAPH;MAQF,KAAK,WARH;MASF,KAAK;IATH,CAvCM;IAmDZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,OAHH;MAIF,KAAK,KAJH;MAKF,KAAK,QALH;MAMF,KAAK,cANH;MAOF,KAAK,cAPH;MAQF,KAAK,QARH;MASF,KAAK;IATH,CAnDM;IA+DZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,MAHH;MAIF,KAAK,KAJH;MAKF,KAAK,IALH;MAMF,KAAK,WANH;MAOF,KAAK,cAPH;MAQF,KAAK,KARH;MASF,KAAK;IATH,CA/DM;IA2EZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,MAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,WANH;MAOF,KAAK,SAPH;MAQF,KAAK,aARH;MASF,KAAK;IATH,CA3EM;IAuFZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,YAFH;MAGF,KAAK,OAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,WANH;MAOF,KAAK,YAPH;MAQF,KAAK,SARH;MASF,KAAK;IATH,CAvFM;IAmGZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,aAFH;MAGF,KAAK,SAHH;MAIF,KAAK,IAJH;MAKF,KAAK,KALH;MAMF,KAAK,eANH;MAOF,KAAK,eAPH;MAQF,KAAK,OARH;MASF,KAAK;IATH,CAnGM;IA+GZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,YAFH;MAGF,KAAK,OAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,WANH;MAOF,KAAK,cAPH;MAQF,KAAK,WARH;MASF,KAAK;IATH,CA/GM;IA2HZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,YAFH;MAGF,KAAK,WAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,SANH;MAOF,KAAK,MAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CA3HM;IAuIZ,MAAM,EAvIM;IAyIZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,UAHH;MAIF,KAAK,IAJH;MAKF,KAAK,MALH;MAMF,KAAK,aANH;MAOF,KAAK,cAPH;MAQF,KAAK,QARH;MASF,KAAK;IATH,CAzIM;IAqJZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,OAHH;MAIF,KAAK,GAJH;MAKF,KAAK,GALH;MAMF,KAAK,WANH;MAOF,KAAK,aAPH;MAQF,KAAK,OARH;MASF,KAAK;IATH,CArJM;IAiKZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,OAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,YANH;MAOF,KAAK,aAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CAjKM;IA6KZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,WAHH;MAIF,KAAK,IAJH;MAKF,KAAK,KALH;MAMF,KAAK,YANH;MAOF,KAAK,cAPH;MAQF,KAAK,OARH;MASF,KAAK;IATH,CA7KM;IAyLZ,MAAM;MACF,KAAK,YADH;MAEF,KAAK,WAFH;MAGF,KAAK,SAHH;MAIF,KAAK,MAJH;MAKF,KAAK,KALH;MAMF,KAAK,SANH;MAOF,KAAK,SAPH;MAQF,KAAK,SARH;MASF,KAAK;IATH,CAzLM;IAqMZ,MAAM,EArMM;IAuMZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,QAHH;MAIF,KAAK,IAJH;MAKF,KAAK,IALH;MAMF,KAAK,aANH;MAOF,KAAK,YAPH;MAQF,KAAK,KARH;MASF,KAAK;IATH,CAvMM;IAmNZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,gBAFH;MAGF,KAAK,QAHH;MAIF,KAAK,GAJH;MAKF,KAAK,KALH;MAMF,KAAK,cANH;MAOF,KAAK,aAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CAnNM;IA+NZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,UAFH;MAGF,KAAK,MAHH;MAIF,KAAK,GAJH;MAKF,KAAK,IALH;MAMF,KAAK,WANH;MAOF,KAAK,WAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CA/NM;IA2OZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,SAFH;MAGF,KAAK,UAHH;MAIF,KAAK,IAJH;MAKF,KAAK,KALH;MAMF,KAAK,YANH;MAOF,KAAK,aAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CA3OM;IAuPZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,aAFH;MAGF,KAAK,OAHH;MAIF,KAAK,GAJH;MAKF,KAAK,KALH;MAMF,KAAK,QANH;MAOF,KAAK,QAPH;MAQF,KAAK,OARH;MASF,KAAK;IATH,CAvPM;IAmQZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,OAHH;MAIF,KAAK,GAJH;MAKF,KAAK,OALH;MAMF,KAAK,WANH;MAOF,KAAK,UAPH;MAQF,KAAK,OARH;MASF,KAAK;IATH,CAnQM;IA+QZ,MAAM,EA/QM;IAiRZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,WAFH;MAGF,KAAK,KAHH;MAIF,KAAK,IAJH;MAKF,KAAK,MALH;MAMF,KAAK,UANH;MAOF,KAAK,UAPH;MAQF,KAAK,QARH;MASF,KAAK;IATH,CAjRM;IA6RZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,eAFH;MAGF,KAAK,OAHH;MAIF,KAAK,GAJH;MAKF,KAAK,KALH;MAMF,KAAK,QANH;MAOF,KAAK,QAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH,CA7RM;IAySZ,MAAM;MACF,KAAK,OADH;MAEF,KAAK,QAFH;MAGF,KAAK,KAHH;MAIF,KAAK,IAJH;MAKF,KAAK,MALH;MAMF,KAAK,SANH;MAOF,KAAK,SAPH;MAQF,KAAK,MARH;MASF,KAAK;IATH;EAzSM,CAAhB;EAsTA,IAAIC,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmDC,IAAnD,CAAwD,EAAxD,CAAhB;EAEA,IAAIC,gBAAgB,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8CD,IAA9C,CAAmD,EAAnD,CAAvB;EAEA,IAAIE,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoCF,IAApC,CAAyC,EAAzC,CAAhB;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;;EACI,IAAIG,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,IAAxB,EAA8B;IACxC,IAAIC,SAAS,GAAG,GAAhB;IACA,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIC,aAAa,GAAG,EAApB;IACA,IAAIC,cAAc,GAAG,IAArB;IACA,IAAIC,kBAAkB,GAAG,EAAzB;IACA,IAAIC,YAAJ;IACA,IAAIC,SAAJ;IACA,IAAIC,QAAJ;IACA,IAAIC,QAAJ;IACA,IAAIC,eAAJ;IACA,IAAIC,QAAJ;IACA,IAAIC,MAAJ;IACA,IAAIC,QAAJ;IACA,IAAIC,KAAJ;IACA,IAAIC,CAAJ;IACA,IAAIC,EAAJ;IACA,IAAIC,CAAJ;IACA,IAAIC,iBAAJ;IACA,IAAIC,kBAAJ;IACA,IAAIC,YAAY,GAAG,EAAnB;;IAEA,IAAI,OAAOrB,KAAP,KAAiB,QAArB,EAA+B;MAC3B,OAAO,EAAP;IACH;;IAED,IAAI,OAAOC,IAAP,KAAgB,QAApB,EAA8B;MAC1BC,SAAS,GAAGD,IAAZ;IACH;;IAEDY,MAAM,GAAGnB,SAAS,CAAC4B,EAAnB;IACAR,QAAQ,GAAGrB,WAAW,CAAC6B,EAAvB;;IAEA,IAAI,OAAOrB,IAAP,KAAgB,QAApB,EAA8B;MAC1BM,YAAY,GAAGN,IAAI,CAACM,YAAL,IAAqB,KAApC;MACAD,kBAAkB,GAAIL,IAAI,CAACsB,MAAL,IAAe,OAAOtB,IAAI,CAACsB,MAAZ,KAAuB,QAAvC,GAAmDtB,IAAI,CAACsB,MAAxD,GAAiEjB,kBAAtF;MACAG,QAAQ,GAAI,CAACR,IAAI,CAACQ,QAAN,GAAiB,CAAjB,IAAsBR,IAAI,CAACQ,QAA5B,IAAyC,KAApD;MACAC,QAAQ,GAAGT,IAAI,CAACuB,IAAL,IAAa,KAAxB;MACAb,eAAe,GAAGV,IAAI,CAACwB,WAAL,IAAoB,KAAtC;MACAb,QAAQ,GAAGX,IAAI,CAACyB,IAAL,IAAa,KAAxB;MACArB,cAAc,GAAIJ,IAAI,CAAC0B,OAAL,KAAiB,KAAjB,IAA0B1B,IAAI,CAAC2B,IAAL,KAAc,KAAzC,GAAkD,KAAlD,GAA0D,IAA3E;MACA1B,SAAS,GAAGD,IAAI,CAACC,SAAL,IAAkBA,SAA9B;;MAEA,IAAIQ,QAAJ,EAAc;QACVW,YAAY,IAAI1B,SAAhB;MACH;;MAED,IAAIgB,eAAJ,EAAqB;QACjBU,YAAY,IAAIxB,gBAAhB;MACH;;MAED,IAAIe,QAAJ,EAAc;QACVS,YAAY,IAAIvB,SAAhB;MACH;;MAEDe,MAAM,GAAIZ,IAAI,CAAC2B,IAAL,IAAalC,SAAS,CAACO,IAAI,CAAC2B,IAAN,CAAtB,IAAqCvB,cAAtC,GACLX,SAAS,CAACO,IAAI,CAAC2B,IAAN,CADJ,GACmBvB,cAAc,GAAGX,SAAS,CAAC4B,EAAb,GAAkB,EAD5D;MAGAR,QAAQ,GAAIb,IAAI,CAAC2B,IAAL,IAAanC,WAAW,CAACQ,IAAI,CAAC2B,IAAN,CAAzB,GACPnC,WAAW,CAACQ,IAAI,CAAC2B,IAAN,CADJ,GAEP3B,IAAI,CAAC2B,IAAL,KAAc,KAAd,IAAuB3B,IAAI,CAAC2B,IAAL,KAAc,IAArC,GAA4C,EAA5C,GAAiDnC,WAAW,CAAC6B,EAFjE,CAzB0B,CA6B1B;;MACA,IAAIrB,IAAI,CAACO,SAAL,IAAkB,OAAOP,IAAI,CAACO,SAAL,CAAeqB,MAAtB,KAAiC,QAAnD,IAA+DC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BhC,IAAI,CAACO,SAAnC,CAAnE,EAAkH;QAC9GP,IAAI,CAACO,SAAL,CAAe0B,OAAf,CAAuB,UAAUC,CAAV,EAAa;UAChC7B,kBAAkB,CAAC6B,CAAC,GAAG,EAAL,CAAlB,GAA6BA,CAAC,GAAG,EAAjC;QACH,CAFD;QAIA3B,SAAS,GAAG,IAAZ;MACH,CAND,MAMO;QACHA,SAAS,GAAG,CAAC,CAACP,IAAI,CAACO,SAAnB;MACH,CAtCyB,CAwC1B;;;MACA,IAAIP,IAAI,CAACsB,MAAL,IAAe,OAAOtB,IAAI,CAACsB,MAAL,CAAYM,MAAnB,KAA8B,QAA7C,IAAyDC,KAAK,CAACC,SAAN,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BhC,IAAI,CAACsB,MAAnC,CAA7D,EAAyG;QACrGtB,IAAI,CAACsB,MAAL,CAAYW,OAAZ,CAAoB,UAAUC,CAAV,EAAa;UAC7B7B,kBAAkB,CAAC6B,CAAC,GAAG,EAAL,CAAlB,GAA6BA,CAAC,GAAG,EAAjC;QACH,CAFD;MAGH,CA7CyB,CA+C1B;;;MACAC,MAAM,CAACC,IAAP,CAAY/B,kBAAZ,EAAgC4B,OAAhC,CAAwC,UAAUC,CAAV,EAAa;QACjD,IAAIG,CAAJ;;QAEA,IAAIH,CAAC,CAACN,MAAF,GAAW,CAAf,EAAkB;UACdS,CAAC,GAAG,IAAIC,MAAJ,CAAW,QAAQC,WAAW,CAACL,CAAD,CAAnB,GAAyB,KAApC,EAA2C,IAA3C,CAAJ;QACH,CAFD,MAEO;UACHG,CAAC,GAAG,IAAIC,MAAJ,CAAWC,WAAW,CAACL,CAAD,CAAtB,EAA2B,IAA3B,CAAJ;QACH;;QAEDnC,KAAK,GAAGA,KAAK,CAACyC,OAAN,CAAcH,CAAd,EAAiBhC,kBAAkB,CAAC6B,CAAD,CAAnC,CAAR;MACH,CAVD,EAhD0B,CA4D1B;;MACA,KAAKlB,EAAL,IAAWX,kBAAX,EAA+B;QAC3Be,YAAY,IAAIJ,EAAhB;MACH;IACJ;;IAEDI,YAAY,IAAInB,SAAhB,CAnGwC,CAqGxC;;IACAmB,YAAY,GAAGmB,WAAW,CAACnB,YAAD,CAA1B,CAtGwC,CAwGxC;;IACArB,KAAK,GAAGA,KAAK,CAACyC,OAAN,CAAc,cAAd,EAA8B,EAA9B,CAAR;IAEAtB,iBAAiB,GAAG,KAApB;IACAC,kBAAkB,GAAG,KAArB;;IAEA,KAAKJ,CAAC,GAAG,CAAJ,EAAOE,CAAC,GAAGlB,KAAK,CAAC6B,MAAtB,EAA8Bb,CAAC,GAAGE,CAAlC,EAAqCF,CAAC,EAAtC,EAA0C;MACtCC,EAAE,GAAGjB,KAAK,CAACgB,CAAD,CAAV;;MAEA,IAAI0B,oBAAoB,CAACzB,EAAD,EAAKX,kBAAL,CAAxB,EAAkD;QAC9C;QACAa,iBAAiB,GAAG,KAApB;MACH,CAHD,MAGO,IAAIL,QAAQ,CAACG,EAAD,CAAZ,EAAkB;QACrB;QACAA,EAAE,GAAGE,iBAAiB,IAAIL,QAAQ,CAACG,EAAD,CAAR,CAAa0B,KAAb,CAAmB,aAAnB,CAArB,GAAyD,MAAM7B,QAAQ,CAACG,EAAD,CAAvE,GAA8EH,QAAQ,CAACG,EAAD,CAA3F;QAEAE,iBAAiB,GAAG,KAApB;MACH,CALM,MAKA,IAAIF,EAAE,IAAI3B,OAAV,EAAmB;QACtB;QACA,IAAI0B,CAAC,GAAG,CAAJ,GAAQE,CAAR,IAAa3B,kBAAkB,CAACqD,OAAnB,CAA2B5C,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAhC,KAA4C,CAA7D,EAAgE;UAC5DZ,aAAa,IAAIa,EAAjB;UACAA,EAAE,GAAG,EAAL;QACH,CAHD,MAGO,IAAIG,kBAAkB,KAAK,IAA3B,EAAiC;UACpCH,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAV,GAA4Bd,OAAO,CAAC2B,EAAD,CAAxC;UACAb,aAAa,GAAG,EAAhB;QACH,CAHM,MAGA;UACH;UACAa,EAAE,GAAGE,iBAAiB,IAAI7B,OAAO,CAAC2B,EAAD,CAAP,CAAY0B,KAAZ,CAAkB,aAAlB,CAArB,GAAwD,MAAMrD,OAAO,CAAC2B,EAAD,CAArE,GAA4E3B,OAAO,CAAC2B,EAAD,CAAxF;QACH;;QAEDE,iBAAiB,GAAG,KAApB;QACAC,kBAAkB,GAAG,KAArB;MACH,CAfM,MAeA,IAAIH,EAAE,IAAIzB,UAAV,EAAsB;QACzBY,aAAa,IAAIa,EAAjB;QACAA,EAAE,GAAG,EAAL,CAFyB,CAGzB;;QACA,IAAID,CAAC,KAAKE,CAAC,GAAG,CAAd,EAAiB;UACbD,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAf;QACH;;QACDgB,kBAAkB,GAAG,IAArB;MACH,CARM,MAQA,KACH;MACAP,MAAM,CAACI,EAAD,CAAN,IAAc,EAAEP,QAAQ,IAAIf,SAAS,CAChCiD,OADuB,CACf3B,EADe,MACP,CAAC,CADR,CAAd,IAC4B,EAAEN,eAAe,IAAId,gBAAgB,CAC7D;MAD6D,CAE5D+C,OAF4C,CAEpC3B,EAFoC,MAE5B,CAAC,CAFM,CAHzB,EAKuB;QAC1BA,EAAE,GAAGE,iBAAiB,IAAIhB,MAAM,CAAC0C,MAAP,CAAc,CAAC,CAAf,EAAkBF,KAAlB,CAAwB,aAAxB,CAArB,GAA8DzC,SAAS,GAAGW,MAAM,CAACI,EAAD,CAAhF,GAAuFJ,MAAM,CAACI,EAAD,CAAlG;QACAA,EAAE,IAAIjB,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAL,KAAiB,KAAK,CAAtB,IAA2BhB,KAAK,CAACgB,CAAC,GAAG,CAAL,CAAL,CAAa2B,KAAb,CAAmB,aAAnB,CAA3B,GAA+DzC,SAA/D,GAA2E,EAAjF;QAEAiB,iBAAiB,GAAG,IAApB;MACH,CAVM,MAUA;QACH,IAAIC,kBAAkB,KAAK,IAA3B,EAAiC;UAC7BH,EAAE,GAAGzB,UAAU,CAACY,aAAD,CAAV,GAA4Ba,EAAjC;UACAb,aAAa,GAAG,EAAhB;UACAgB,kBAAkB,GAAG,KAArB;QACH,CAJD,MAIO,IAAID,iBAAiB,KAAK,cAAc2B,IAAd,CAAmB7B,EAAnB,KAA0Bd,MAAM,CAAC0C,MAAP,CAAc,CAAC,CAAf,EAAkBF,KAAlB,CAAwB,YAAxB,CAA/B,CAArB,EAA4F;UAC/F;UACA1B,EAAE,GAAG,MAAMA,EAAX;QACH;;QACDE,iBAAiB,GAAG,KAApB;MACH,CAtDqC,CAwDtC;;;MACAhB,MAAM,IAAIc,EAAE,CAACwB,OAAH,CAAW,IAAIF,MAAJ,CAAW,aAAalB,YAAb,GAA4B,KAAvC,EAA8C,GAA9C,CAAX,EAA+DnB,SAA/D,CAAV;IACH;;IAED,IAAIM,SAAJ,EAAe;MACXL,MAAM,GAAGA,MAAM,CAACsC,OAAP,CAAe,YAAf,EAA6B,UAAUM,CAAV,EAAa/B,CAAb,EAAgBsB,CAAhB,EAAmB;QACrD,IAAIU,CAAC,GAAGhC,CAAC,CAACiC,WAAF,MAAmBX,CAAC,KAAK,IAAN,GAAaA,CAAb,GAAiB,EAApC,CAAR;QACA,OAAQF,MAAM,CAACC,IAAP,CAAY/B,kBAAZ,EAAgCsC,OAAhC,CAAwCI,CAAC,CAACE,WAAF,EAAxC,IAA2D,CAA5D,GAAiEF,CAAjE,GAAqEA,CAAC,CAACE,WAAF,EAA5E;MACH,CAHQ,CAAT;IAIH,CA/KuC,CAiLxC;IACA;IACA;;;IACA/C,MAAM,GAAGA,MAAM,CAACsC,OAAP,CAAe,MAAf,EAAuBvC,SAAvB,EACJuC,OADI,CACI,IAAIF,MAAJ,CAAW,OAAOrC,SAAP,GAAmB,GAA9B,EAAmC,GAAnC,CADJ,EAC6CA,SAD7C,EAEJuC,OAFI,CAEI,IAAIF,MAAJ,CAAW,SAASrC,SAAT,GAAqB,MAArB,GAA8BA,SAA9B,GAA0C,KAArD,EAA4D,GAA5D,CAFJ,EAEsE,EAFtE,CAAT;;IAIA,IAAIO,QAAQ,IAAIN,MAAM,CAAC0B,MAAP,GAAgBpB,QAAhC,EAA0C;MACtCM,KAAK,GAAGZ,MAAM,CAACgD,MAAP,CAAc1C,QAAd,MAA4BP,SAApC;MACAC,MAAM,GAAGA,MAAM,CAACiD,KAAP,CAAa,CAAb,EAAgB3C,QAAhB,CAAT;;MAEA,IAAI,CAACM,KAAL,EAAY;QACRZ,MAAM,GAAGA,MAAM,CAACiD,KAAP,CAAa,CAAb,EAAgBjD,MAAM,CAACkD,WAAP,CAAmBnD,SAAnB,CAAhB,CAAT;MACH;IACJ;;IAED,IAAI,CAACK,YAAD,IAAiB,CAACC,SAAtB,EAAiC;MAC7BL,MAAM,GAAGA,MAAM,CAAC+C,WAAP,EAAT;IACH;;IAED,OAAO/C,MAAP;EACH,CAtMD;EAwMA;AACJ;AACA;AACA;AACA;;;EACI,IAAImD,UAAU,GAAG,SAASA,UAAT,CAAoBrD,IAApB,EAA0B;IAEvC;AACR;AACA;AACA;AACA;IACQ,OAAO,SAASsD,iBAAT,CAA2BvD,KAA3B,EAAkC;MACrC,OAAOD,OAAO,CAACC,KAAD,EAAQC,IAAR,CAAd;IACH,CAFD;EAGH,CAVD;EAYA;AACJ;AACA;AACA;;;EACI,IAAIuC,WAAW,GAAG,SAASA,WAAT,CAAqBxC,KAArB,EAA4B;IAC1C,OAAOA,KAAK,CAACyC,OAAN,CAAc,wBAAd,EAAwC,MAAxC,CAAP;EACH,CAFD;EAIA;AACJ;AACA;AACA;AACA;;;EACI,IAAIC,oBAAoB,GAAG,UAAUzB,EAAV,EAAcX,kBAAd,EAAkC;IACzD,KAAK,IAAIkD,CAAT,IAAclD,kBAAd,EAAkC;MAC9B,IAAIA,kBAAkB,CAACkD,CAAD,CAAlB,KAA0BvC,EAA9B,EAAkC;QAC9B,OAAO,IAAP;MACH;IACJ;EACJ,CAND;;EAQA,IAAI,OAAOwC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;IAEjD;IACAD,MAAM,CAACC,OAAP,GAAiB3D,OAAjB;IACA0D,MAAM,CAACC,OAAP,CAAeJ,UAAf,GAA4BA,UAA5B;EACH,CALD,MAKO,IAAI,OAAOK,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,GAA5C,EAAiD;IAEpD;IACAD,MAAM,CAAC,EAAD,EAAK,YAAY;MACnB,OAAO5D,OAAP;IACH,CAFK,CAAN;EAGH,CANM,MAMA;IAEH;IACA,IAAI;MACA,IAAIV,IAAI,CAACU,OAAL,IAAgBV,IAAI,CAACiE,UAAzB,EAAqC;QACjC,MAAM,oDAAN;MACH,CAFD,MAEO;QACHjE,IAAI,CAACU,OAAL,GAAeA,OAAf;QACAV,IAAI,CAACiE,UAAL,GAAkBA,UAAlB;MACH;IACJ,CAPD,CAOE,OAAOO,CAAP,EAAU,CAAE;EACjB;AACJ,CAxpDD,EAwpDG,IAxpDH"},"metadata":{},"sourceType":"script"}