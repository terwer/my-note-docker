{"ast":null,"code":"/*\n * argv.js: Simple memory-based store for command-line arguments.\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\nvar util = require('util'),\n    common = require('../common'),\n    Memory = require('./memory').Memory; //\n// ### function Argv (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Argv nconf store, a simple abstraction\n// around the Memory store that can read command-line arguments.\n//\n\n\nvar Argv = exports.Argv = function (options, usage) {\n  Memory.call(this, options);\n  options = options || {};\n  this.type = 'argv';\n  this.readOnly = true;\n  this.options = options;\n  this.usage = usage;\n\n  if (typeof options.parseValues === 'boolean') {\n    this.parseValues = options.parseValues;\n    delete options.parseValues;\n  } else {\n    this.parseValues = false;\n  }\n\n  if (typeof options.transform === 'function') {\n    this.transform = options.transform;\n    delete options.transform;\n  } else {\n    this.transform = false;\n  }\n\n  if (typeof options.separator === 'string' || options.separator instanceof RegExp) {\n    this.separator = options.separator;\n    delete options.separator;\n  } else {\n    this.separator = '';\n  }\n}; // Inherit from the Memory store\n\n\nutil.inherits(Argv, Memory); //\n// ### function loadSync ()\n// Loads the data passed in from `process.argv` into this instance.\n//\n\nArgv.prototype.loadSync = function () {\n  this.loadArgv();\n  return this.store;\n}; //\n// ### function loadArgv ()\n// Loads the data passed in from the command-line arguments\n// into this instance.\n//\n\n\nArgv.prototype.loadArgv = function () {\n  var self = this,\n      yargs,\n      argv;\n  yargs = isYargs(this.options) ? this.options : typeof this.options === 'object' ? require('yargs')(process.argv.slice(2)).options(this.options) : require('yargs')(process.argv.slice(2));\n\n  if (typeof this.usage === 'string') {\n    yargs.usage(this.usage);\n  }\n\n  argv = yargs.argv;\n\n  if (!argv) {\n    return;\n  }\n\n  if (this.transform) {\n    argv = common.transform(argv, this.transform);\n  }\n\n  this.readOnly = false;\n  Object.keys(argv).forEach(function (key) {\n    var val = argv[key];\n\n    if (typeof val !== 'undefined') {\n      if (self.parseValues) {\n        val = common.parseValues(val);\n      }\n\n      if (self.separator) {\n        self.set(common.key.apply(common, key.split(self.separator)), val);\n      } else {\n        self.set(key, val);\n      }\n    }\n  });\n  this.showHelp = yargs.showHelp;\n  this.help = yargs.help;\n  this.readOnly = true;\n  return this.store;\n};\n\nfunction isYargs(obj) {\n  return (typeof obj === 'function' || typeof obj === 'object') && 'argv' in obj;\n}","map":{"version":3,"names":["util","require","common","Memory","Argv","exports","options","usage","call","type","readOnly","parseValues","transform","separator","RegExp","inherits","prototype","loadSync","loadArgv","store","self","yargs","argv","isYargs","process","slice","Object","keys","forEach","key","val","set","apply","split","showHelp","help","obj"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/nconf/lib/nconf/stores/argv.js"],"sourcesContent":["/*\n * argv.js: Simple memory-based store for command-line arguments.\n *\n * (C) 2011, Charlie Robbins and the Contributors.\n *\n */\n\nvar util = require('util'),\n    common = require('../common'),\n    Memory = require('./memory').Memory;\n\n//\n// ### function Argv (options)\n// #### @options {Object} Options for this instance.\n// Constructor function for the Argv nconf store, a simple abstraction\n// around the Memory store that can read command-line arguments.\n//\nvar Argv = exports.Argv = function (options, usage) {\n  Memory.call(this, options);\n\n  options        = options || {};\n  this.type     = 'argv';\n  this.readOnly = true;\n  this.options  = options;\n  this.usage    = usage;\n  if(typeof options.parseValues === 'boolean') {\n      this.parseValues = options.parseValues;\n      delete options.parseValues;\n  } else {\n      this.parseValues = false;\n  }\n  if (typeof options.transform === 'function')Â {\n      this.transform = options.transform;\n      delete options.transform;\n  } else {\n      this.transform = false;\n  }\n  if (typeof options.separator === 'string' || options.separator instanceof RegExp) {\n    this.separator = options.separator;\n    delete options.separator;\n  } else {\n    this.separator = '';\n  }\n};\n\n// Inherit from the Memory store\nutil.inherits(Argv, Memory);\n\n//\n// ### function loadSync ()\n// Loads the data passed in from `process.argv` into this instance.\n//\nArgv.prototype.loadSync = function () {\n  this.loadArgv();\n  return this.store;\n};\n\n//\n// ### function loadArgv ()\n// Loads the data passed in from the command-line arguments\n// into this instance.\n//\nArgv.prototype.loadArgv = function () {\n  var self = this,\n      yargs, argv;\n\n  yargs = isYargs(this.options) ?\n    this.options :\n    typeof this.options === 'object' ?\n      require('yargs')(process.argv.slice(2)).options(this.options) :\n      require('yargs')(process.argv.slice(2));\n\n  if (typeof this.usage === 'string') { yargs.usage(this.usage) }\n\n  argv = yargs.argv\n\n  if (!argv) {\n    return;\n  }\n\n  if (this.transform) {\n    argv = common.transform(argv, this.transform);\n  }\n\n  this.readOnly = false;\n  Object.keys(argv).forEach(function (key) {\n    var val = argv[key];\n\n    if (typeof val !== 'undefined') {\n      if (self.parseValues) {\n        val = common.parseValues(val);\n      }\n\n      if (self.separator) {\n        self.set(common.key.apply(common, key.split(self.separator)), val);\n      }\n      else {\n        self.set(key, val);\n      }\n    }\n  });\n\n  this.showHelp = yargs.showHelp\n  this.help     = yargs.help\n\n  this.readOnly = true;\n  return this.store;\n};\n\nfunction isYargs(obj) {\n  return (typeof obj === 'function' || typeof obj === 'object') && ('argv' in obj);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}