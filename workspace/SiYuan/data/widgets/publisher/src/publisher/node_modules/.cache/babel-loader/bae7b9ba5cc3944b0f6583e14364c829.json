{"ast":null,"code":"/* 思源 API 调用\n   REF [cc-baselib/siYuanApi.js at main · leolee9086/cc-baselib](https://github.com/leolee9086/cc-baselib/blob/main/src/siYuanApi.js)\n */\nimport { config } from './siYuanConfig';\nexport { 向思源请求数据 as request, 以sql向思源请求块数据 as sql, 获取思源块链接锚文本 as getAnchor, 新建思源笔记本 as createNotebook, 删除思源笔记本 as removeNotebook, 保存思源笔记本配置 as setNotebookConf, 向思源请求笔记本列表 as lsNotebooks, 获取思源笔记本配置 as getNotebookConf, 打开思源笔记本 as openNotebook, 关闭思源笔记本 as closeNotebook, 重命名思源笔记本 as renameNotebook, 通过markdown创建文档 as createDocWithMd, 删除思源文档 as removeDoc, 重命名思源文档 as renameDoc, 移动思源文档 as moveDoc, 以id获取文档内容 as getDoc, 以id获取文档聚焦内容 as getFocusedDoc, 以id获取文档块markdown as exportMdContent, 以id获取思源块属性 as getBlockAttrs, 设置思源块属性 as setBlockAttrs, 根据思源路径获取人类可读路径 as getHPathByPath, 列出指定路径下文档 as listDocsByPath, 以id获取反向链接 as getBacklink, 以sql获取嵌入块内容 as searchEmbedBlock, 获取标签列表 as getTag, 渲染模板 as render, 以id获取局部图谱 as getLocalGraph, 获取全局图谱 as getGraph, 以关键词搜索文档 as searchDocs, 以关键词搜索块 as searchBlock, 以关键词搜索模板 as searchTemplate, 插入块 as insertBlock, 插入前置子块 as prependBlock, 插入后置子块 as appendBlock, 删除块 as deleteBlock, 更新块 as updateBlock, 以id获取思源块信息 as getBlockByID };\n\nasync function 向思源请求数据(url, data) {\n  let resData = null;\n  await fetch(url, {\n    body: JSON.stringify(data),\n    method: 'POST',\n    headers: {\n      Authorization: `Token ${config.token}`\n    }\n  }).then(function (response) {\n    resData = response.json();\n  });\n  return resData;\n}\n\nasync function 解析响应体(response) {\n  let r = await response; // console.log(r)\n\n  return r.code === 0 ? r.data : null;\n}\n\nasync function 以sql向思源请求块数据(sql) {\n  let sqldata = {\n    stmt: sql\n  };\n  let url = '/api/query/sql';\n  return 解析响应体(向思源请求数据(url, sqldata));\n}\n\nasync function 向思源请求笔记本列表() {\n  // eslint-disable-next-line no-undef\n  let sqldata = {\n    stmt: sql语句\n  };\n  let url = '/api/notebook/lsNotebooks';\n  return 解析响应体(向思源请求数据(url, sqldata));\n}\n\nasync function 获取思源块链接锚文本(链接源文本) {\n  链接源文本 = 链接源文本.replace(\"((\", \"\").replace(\"))\", \"\");\n  let sql = `select *\n               from blocks\n               where id = '${链接源文本}'`;\n  let 临时块属性 = await 以sql向思源请求块数据(sql); //  console.log (\"临时块属性\",临时块属性)\n\n  let anchor = \"\";\n\n  if (临时块属性) {\n    try {\n      if (临时块属性[0][name]) {\n        anchor = 临时块属性[0][name];\n      } else if (临时块属性[0][\"content\"]) {\n        anchor = 临时块属性[0][\"content\"];\n      } else {\n        anchor = 链接源文本;\n      }\n    } catch (e) {\n      anchor = \"解析错误\";\n    }\n  } //   console.log(\"锚文本\",anchor)\n\n\n  return anchor;\n}\n\nasync function 打开思源笔记本(笔记本id) {\n  let data = {\n    notebook: 笔记本id\n  };\n  let url = '/api/notebook/openNotebook';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 关闭思源笔记本(笔记本id) {\n  let data = {\n    notebook: 笔记本id\n  };\n  let url = '/api/notebook/closeNotebook';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 重命名思源笔记本(笔记本id, 笔记本的新名称) {\n  let data = {\n    notebook: 笔记本id,\n    name: 笔记本的新名称\n  };\n  let url = '/api/notebook/renameNotebook';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 新建思源笔记本(笔记本名称) {\n  let data = {\n    name: 笔记本名称\n  };\n  let url = '/api/notebook/createNotebook';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 删除思源笔记本(笔记本id) {\n  let data = {\n    notebook: 笔记本id\n  };\n  let url = '/api/notebook/removeNotebook';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 获取思源笔记本配置(笔记本id) {\n  let data = {\n    notebook: 笔记本id\n  };\n  let url = '/api/notebook/getNotebookConf';\n  return 解析响应体(向思源请求数据(url, data)); //返回笔记本配置\n}\n\nasync function 保存思源笔记本配置(笔记本id) {\n  let data = {\n    notebook: 笔记本id\n  };\n  let url = '/api/notebook/setNotebookConf';\n  return 解析响应体(向思源请求数据(url, data)); //返回笔记本配置\n}\n\nasync function 重命名思源文档(笔记本id, 文档路径, 文档新标题) {\n  let data = {\n    notebook: 笔记本id,\n    path: 文档路径,\n    title: 文档新标题\n  };\n  let url = '/api/filetree/renameDoc';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 删除思源文档(笔记本id, 文档路径) {\n  let data = {\n    notebook: 笔记本id,\n    path: 文档路径\n  };\n  let url = '/api/filetree/removeDoc';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 移动思源文档(源笔记本ID, 源路径, 目标笔记本ID, 目标路径) {\n  let data = {\n    fromNotebook: 源笔记本ID,\n    fromPath: 源路径,\n    toNotebook: 目标笔记本ID,\n    toPath: 目标路径\n  };\n  let url = '/api/filetree/moveDoc';\n  return 解析响应体(向思源请求数据(url, data)); //返回空数据\n}\n\nasync function 根据思源路径获取人类可读路径(笔记本ID, 路径) {\n  let data = {\n    Notebook: 笔记本ID,\n    Path: 路径\n  };\n  let url = '/api/filetree/getHPathByPath';\n  return 解析响应体(向思源请求数据(url, data)); //返回路径\n} //暂缺上传文件\n\n\nasync function 以id获取思源块属性(内容块id) {\n  let data = {\n    id: 内容块id\n  };\n  let url = '/api/attr/getBlockAttrs';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以id获取思源块信息(内容块id) {\n  let sql = `select *\n               from blocks\n               where id = '${内容块id}'`;\n  let data = await 以sql向思源请求块数据(sql);\n  return data[0];\n}\n\nasync function 设置思源块属性(内容块id, 属性对象) {\n  let url = '/api/attr/setBlockAttrs';\n  return 解析响应体(向思源请求数据(url, {\n    id: 内容块id,\n    attrs: 属性对象\n  }));\n}\n\nasync function 以id获取文档块markdown(文档id) {\n  let data = {\n    id: 文档id\n  };\n  let url = '/api/export/exportMdContent';\n  return 解析响应体(向思源请求数据(url, data)); //文档hepath与Markdown 内容\n}\n\nasync function 列出指定路径下文档(路径) {\n  let data = {\n    path: 路径\n  };\n  let url = '/api/filetree/listDocsByPath';\n  return 解析响应体(向思源请求数据(url, data)); //文档hepath与Markdown 内容\n} // eslint-disable-next-line no-unused-vars\n\n\nfunction html转义(原始字符串) {\n  var 临时元素 = document.createElement(\"div\");\n  临时元素.innerHTML = 原始字符串;\n  var output = 临时元素.innerText || 临时元素.textContent;\n  临时元素 = null; // console.log(output)\n\n  return output;\n}\n\nasync function 以id获取反向链接(id) {\n  let data = {\n    id: id,\n    beforeLen: 10,\n    k: \"\",\n    mk: \"\"\n  };\n  let url = '/api/ref/getBacklink';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以sql获取嵌入块内容(外部id数组, sql) {\n  let data = {\n    stmt: sql,\n    excludeIDs: 外部id数组\n  };\n  let url = '/api/search/searchEmbedBlock';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以id获取文档内容(id) {\n  let data = {\n    id: id,\n    k: \"\",\n    mode: 2,\n    size: 36\n  };\n  let url = '/api/filetree/getDoc';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以id获取文档聚焦内容(id) {\n  let data = {\n    id: id,\n    k: \"\",\n    mode: 0,\n    size: 36\n  };\n  let url = '/api/filetree/getDoc';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 获取标签列表() {\n  let data = {};\n  let url = '/api/tag/getTag';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以id获取局部图谱(k, id, conf, reqId) {\n  let data = {\n    id: id,\n    k: k,\n    conf: conf,\n    reqId: reqId\n  };\n  let url = '/api/graph/getLocalGraph';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 获取全局图谱(k, conf, reqId) {\n  let data = {\n    k: k,\n    conf: conf,\n    reqId: reqId\n  };\n  let url = '/api/graph/getGraph';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以关键词搜索文档(k) {\n  let data = {\n    k: k\n  };\n  let url = '/api/filetree/searchDocs';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以关键词搜索块(query) {\n  let data = {\n    \"query\": query\n  };\n  let url = '/api/search/searchBlock';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 以关键词搜索模板(k) {\n  let data = {\n    k: k\n  };\n  let url = '/api/search/searchTemplate';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 通过markdown创建文档(notebook, path, markdown) {\n  let data = {\n    notebook: notebook,\n    path: path,\n    markdown: markdown\n  };\n  let url = '/api/filetree/createDocWithMd';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 渲染模板(data) {\n  let url = '/api/template/render';\n  return 解析响应体(向思源请求数据(url, data));\n}\n\nasync function 插入块(previousID, dataType, data) {\n  let url = '/api/block/insertBlock';\n  return 解析响应体(向思源请求数据( // eslint-disable-next-line no-self-assign\n  url = url, data = {\n    previousID: previousID,\n    dataType: dataType,\n    data: data\n  }));\n}\n\nasync function 插入前置子块(parentID, dataType, data) {\n  let url = '/api/block/prependBlock';\n  return 解析响应体(向思源请求数据( // eslint-disable-next-line no-self-assign\n  url = url, data = {\n    parentID: parentID,\n    dataType: dataType,\n    data: data\n  }));\n}\n\nasync function 插入后置子块(parentID, dataType, data) {\n  let url = '/api/block/appendBlock';\n  return 解析响应体(向思源请求数据( // eslint-disable-next-line no-self-assign\n  url = url, data = {\n    parentID: parentID,\n    dataType: dataType,\n    data: data\n  }));\n}\n\nasync function 更新块(id, dataType, data) {\n  let url = '/api/block/updateBlock';\n  return 解析响应体(向思源请求数据( // eslint-disable-next-line no-self-assign\n  url = url, data = {\n    id: id,\n    dataType: dataType,\n    data: data\n  }));\n}\n\nasync function 删除块(id) {\n  let url = '/api/block/deleteBlock';\n  return 解析响应体(向思源请求数据( // eslint-disable-next-line no-self-assign\n  url = url, // eslint-disable-next-line no-undef\n  data = {\n    id: id\n  }));\n}","map":{"version":3,"names":["config","向思源请求数据","request","以sql向思源请求块数据","sql","获取思源块链接锚文本","getAnchor","新建思源笔记本","createNotebook","删除思源笔记本","removeNotebook","保存思源笔记本配置","setNotebookConf","向思源请求笔记本列表","lsNotebooks","获取思源笔记本配置","getNotebookConf","打开思源笔记本","openNotebook","关闭思源笔记本","closeNotebook","重命名思源笔记本","renameNotebook","通过markdown创建文档","createDocWithMd","删除思源文档","removeDoc","重命名思源文档","renameDoc","移动思源文档","moveDoc","以id获取文档内容","getDoc","以id获取文档聚焦内容","getFocusedDoc","以id获取文档块markdown","exportMdContent","以id获取思源块属性","getBlockAttrs","设置思源块属性","setBlockAttrs","根据思源路径获取人类可读路径","getHPathByPath","列出指定路径下文档","listDocsByPath","以id获取反向链接","getBacklink","以sql获取嵌入块内容","searchEmbedBlock","获取标签列表","getTag","渲染模板","render","以id获取局部图谱","getLocalGraph","获取全局图谱","getGraph","以关键词搜索文档","searchDocs","以关键词搜索块","searchBlock","以关键词搜索模板","searchTemplate","插入块","insertBlock","插入前置子块","prependBlock","插入后置子块","appendBlock","删除块","deleteBlock","更新块","updateBlock","以id获取思源块信息","getBlockByID","url","data","resData","fetch","body","JSON","stringify","method","headers","Authorization","token","then","response","json","解析响应体","r","code","sqldata","stmt","sql语句","链接源文本","replace","临时块属性","anchor","name","e","笔记本id","notebook","笔记本的新名称","笔记本名称","文档路径","文档新标题","path","title","源笔记本ID","源路径","目标笔记本ID","目标路径","fromNotebook","fromPath","toNotebook","toPath","笔记本ID","路径","Notebook","Path","内容块id","id","属性对象","attrs","文档id","html转义","原始字符串","临时元素","document","createElement","innerHTML","output","innerText","textContent","beforeLen","k","mk","外部id数组","excludeIDs","mode","size","conf","reqId","query","markdown","previousID","dataType","parentID"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/siYuanApi.js"],"sourcesContent":["/* 思源 API 调用\n   REF [cc-baselib/siYuanApi.js at main · leolee9086/cc-baselib](https://github.com/leolee9086/cc-baselib/blob/main/src/siYuanApi.js)\n */\n\nimport {config} from './siYuanConfig';\n\nexport {\n    向思源请求数据 as request,\n    以sql向思源请求块数据 as sql,\n    获取思源块链接锚文本 as getAnchor,\n\n    新建思源笔记本 as createNotebook,\n    删除思源笔记本 as removeNotebook,\n    保存思源笔记本配置 as setNotebookConf,\n    向思源请求笔记本列表 as lsNotebooks,\n    获取思源笔记本配置 as getNotebookConf,\n    打开思源笔记本 as openNotebook,\n    关闭思源笔记本 as closeNotebook,\n    重命名思源笔记本 as renameNotebook,\n\n    通过markdown创建文档 as createDocWithMd,\n    删除思源文档 as removeDoc,\n    重命名思源文档 as renameDoc,\n    移动思源文档 as moveDoc,\n    以id获取文档内容 as getDoc,\n    以id获取文档聚焦内容 as getFocusedDoc,\n    以id获取文档块markdown as exportMdContent,\n\n    以id获取思源块属性 as getBlockAttrs,\n    设置思源块属性 as setBlockAttrs,\n\n    根据思源路径获取人类可读路径 as getHPathByPath,\n    列出指定路径下文档 as listDocsByPath,\n    以id获取反向链接 as getBacklink,\n    以sql获取嵌入块内容 as searchEmbedBlock,\n    获取标签列表 as getTag,\n    渲染模板 as render,\n\n    以id获取局部图谱 as getLocalGraph,\n    获取全局图谱 as getGraph,\n\n    以关键词搜索文档 as searchDocs,\n    以关键词搜索块 as searchBlock,\n    以关键词搜索模板 as searchTemplate,\n\n    插入块 as insertBlock,\n    插入前置子块 as prependBlock,\n    插入后置子块 as appendBlock,\n    删除块 as deleteBlock,\n    更新块 as updateBlock,\n    以id获取思源块信息 as getBlockByID,\n};\n\nasync function 向思源请求数据(url, data) {\n    let resData = null\n    await fetch(url, {\n        body: JSON.stringify(data),\n        method: 'POST',\n        headers: {\n            Authorization: `Token ${config.token}`,\n        }\n    }).then(function (response) {\n        resData = response.json()\n    })\n    return resData\n}\n\nasync function 解析响应体(response) {\n    let r = await response\n    // console.log(r)\n    return r.code === 0 ? r.data : null\n}\n\nasync function 以sql向思源请求块数据(sql) {\n    let sqldata = {\n        stmt: sql,\n    }\n    let url = '/api/query/sql'\n    return 解析响应体(向思源请求数据(url, sqldata))\n}\n\nasync function 向思源请求笔记本列表() {\n    // eslint-disable-next-line no-undef\n    let sqldata = {stmt: sql语句}\n    let url = '/api/notebook/lsNotebooks'\n    return 解析响应体(向思源请求数据(url, sqldata))\n}\n\nasync function 获取思源块链接锚文本(链接源文本) {\n    链接源文本 = 链接源文本.replace(\"((\", \"\").replace(\"))\", \"\")\n    let sql = `select *\n               from blocks\n               where id = '${链接源文本}'`\n    let 临时块属性 = await 以sql向思源请求块数据(sql)\n    //  console.log (\"临时块属性\",临时块属性)\n    let anchor = \"\"\n    if (临时块属性) {\n        try {\n            if (临时块属性[0][\n                name]) {\n                anchor = 临时块属性[0][\n                    name]\n            } else if (临时块属性[0][\"content\"]) {\n                anchor = 临时块属性[0][\"content\"]\n            } else {\n                anchor = 链接源文本\n            }\n        } catch (e) {\n            anchor = \"解析错误\"\n        }\n    }\n    //   console.log(\"锚文本\",anchor)\n    return anchor\n}\n\nasync function 打开思源笔记本(笔记本id) {\n    let data = {\n        notebook: 笔记本id,\n    }\n    let url = '/api/notebook/openNotebook'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 关闭思源笔记本(笔记本id) {\n    let data = {\n        notebook: 笔记本id,\n    }\n    let url = '/api/notebook/closeNotebook'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 重命名思源笔记本(笔记本id, 笔记本的新名称) {\n    let data = {\n        notebook: 笔记本id,\n        name: 笔记本的新名称,\n    }\n    let url = '/api/notebook/renameNotebook'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 新建思源笔记本(笔记本名称) {\n    let data = {\n        name: 笔记本名称,\n    }\n    let url = '/api/notebook/createNotebook'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 删除思源笔记本(笔记本id) {\n    let data = {notebook: 笔记本id}\n    let url = '/api/notebook/removeNotebook'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 获取思源笔记本配置(笔记本id) {\n    let data = {notebook: 笔记本id}\n    let url = '/api/notebook/getNotebookConf'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回笔记本配置\n}\n\nasync function 保存思源笔记本配置(笔记本id) {\n    let data = {notebook: 笔记本id}\n    let url = '/api/notebook/setNotebookConf'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回笔记本配置\n}\n\nasync function 重命名思源文档(笔记本id, 文档路径, 文档新标题) {\n    let data = {\n        notebook: 笔记本id,\n        path: 文档路径,\n        title: 文档新标题,\n    }\n    let url = '/api/filetree/renameDoc'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 删除思源文档(笔记本id, 文档路径) {\n    let data = {\n        notebook: 笔记本id,\n        path: 文档路径,\n    }\n    let url = '/api/filetree/removeDoc'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 移动思源文档(源笔记本ID, 源路径, 目标笔记本ID, 目标路径) {\n    let data = {\n        fromNotebook: 源笔记本ID,\n        fromPath: 源路径,\n        toNotebook: 目标笔记本ID,\n        toPath: 目标路径,\n    }\n    let url = '/api/filetree/moveDoc'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回空数据\n}\n\nasync function 根据思源路径获取人类可读路径(笔记本ID, 路径) {\n    let data = {\n        Notebook: 笔记本ID,\n        Path: 路径,\n    }\n    let url = '/api/filetree/getHPathByPath'\n    return 解析响应体(向思源请求数据(url, data))\n    //返回路径\n}\n\n//暂缺上传文件\n\nasync function 以id获取思源块属性(内容块id) {\n    let data = {\n        id: 内容块id,\n    }\n    let url = '/api/attr/getBlockAttrs'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以id获取思源块信息(内容块id) {\n    let sql = `select *\n               from blocks\n               where id = '${内容块id}'`\n    let data = await 以sql向思源请求块数据(sql)\n    return data[0]\n}\n\nasync function 设置思源块属性(内容块id, 属性对象) {\n    let url = '/api/attr/setBlockAttrs'\n    return 解析响应体(向思源请求数据(url, {\n        id: 内容块id,\n        attrs: 属性对象,\n    }))\n}\n\nasync function 以id获取文档块markdown(文档id) {\n    let data = {\n        id: 文档id,\n    }\n    let url = '/api/export/exportMdContent'\n    return 解析响应体(向思源请求数据(url, data))\n    //文档hepath与Markdown 内容\n}\n\nasync function 列出指定路径下文档(路径) {\n    let data = {\n        path: 路径,\n    }\n    let url = '/api/filetree/listDocsByPath'\n    return 解析响应体(向思源请求数据(url, data))\n    //文档hepath与Markdown 内容\n}\n\n// eslint-disable-next-line no-unused-vars\nfunction html转义(原始字符串) {\n    var 临时元素 = document.createElement(\"div\");\n    临时元素.innerHTML = 原始字符串;\n    var output = 临时元素.innerText || 临时元素.textContent;\n    临时元素 = null;\n    // console.log(output)\n    return output;\n}\n\nasync function 以id获取反向链接(id) {\n    let data = {\n        id: id,\n        beforeLen: 10,\n        k: \"\",\n        mk: \"\"\n    }\n    let url = '/api/ref/getBacklink'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以sql获取嵌入块内容(外部id数组, sql) {\n    let data = {\n        stmt: sql,\n        excludeIDs: 外部id数组,\n    }\n    let url = '/api/search/searchEmbedBlock'\n    return 解析响应体(向思源请求数据(url, data))\n\n}\n\nasync function 以id获取文档内容(id) {\n    let data = {\n        id: id,\n        k: \"\",\n        mode: 2,\n        size: 36,\n    }\n    let url = '/api/filetree/getDoc'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以id获取文档聚焦内容(id) {\n    let data = {\n        id: id,\n        k: \"\",\n        mode: 0,\n        size: 36,\n    }\n    let url = '/api/filetree/getDoc'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 获取标签列表() {\n    let data = {}\n    let url = '/api/tag/getTag'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以id获取局部图谱(k, id, conf, reqId) {\n    let data = {\n        id: id,\n        k: k,\n        conf: conf,\n        reqId: reqId,\n    }\n    let url = '/api/graph/getLocalGraph'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 获取全局图谱(k, conf, reqId) {\n    let data = {\n        k: k,\n        conf: conf,\n        reqId: reqId,\n    }\n    let url = '/api/graph/getGraph'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以关键词搜索文档(k) {\n    let data = {\n        k: k,\n    }\n    let url = '/api/filetree/searchDocs'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以关键词搜索块(query) {\n    let data = {\n        \"query\": query,\n    }\n    let url = '/api/search/searchBlock'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 以关键词搜索模板(k) {\n    let data = {\n        k: k,\n    }\n    let url = '/api/search/searchTemplate'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 通过markdown创建文档(notebook, path, markdown) {\n    let data = {\n        notebook: notebook,\n        path: path,\n        markdown: markdown,\n    }\n    let url = '/api/filetree/createDocWithMd'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 渲染模板(data) {\n    let url = '/api/template/render'\n    return 解析响应体(向思源请求数据(url, data))\n}\n\nasync function 插入块(previousID, dataType, data) {\n    let url = '/api/block/insertBlock'\n    return 解析响应体(向思源请求数据(\n        // eslint-disable-next-line no-self-assign\n        url = url,\n        data = {\n            previousID: previousID,\n            dataType: dataType,\n            data: data,\n        },\n    ))\n}\n\nasync function 插入前置子块(parentID, dataType, data) {\n    let url = '/api/block/prependBlock'\n    return 解析响应体(向思源请求数据(\n        // eslint-disable-next-line no-self-assign\n        url = url,\n        data = {\n            parentID: parentID,\n            dataType: dataType,\n            data: data,\n        },\n    ))\n}\n\nasync function 插入后置子块(parentID, dataType, data) {\n    let url = '/api/block/appendBlock'\n    return 解析响应体(向思源请求数据(\n        // eslint-disable-next-line no-self-assign\n        url = url,\n        data = {\n            parentID: parentID,\n            dataType: dataType,\n            data: data,\n        },\n    ))\n}\n\nasync function 更新块(id, dataType, data) {\n    let url = '/api/block/updateBlock'\n    return 解析响应体(向思源请求数据(\n        // eslint-disable-next-line no-self-assign\n        url = url,\n        data = {\n            id: id,\n            dataType: dataType,\n            data: data,\n        },\n    ))\n}\n\nasync function 删除块(id) {\n    let url = '/api/block/deleteBlock'\n    return 解析响应体(向思源请求数据(\n        // eslint-disable-next-line no-self-assign\n        url = url,\n        // eslint-disable-next-line no-undef\n        data = {\n            id: id,\n        },\n    ))\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}