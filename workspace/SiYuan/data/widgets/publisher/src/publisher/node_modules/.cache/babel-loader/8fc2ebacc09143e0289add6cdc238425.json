{"ast":null,"code":"import { getConf, setConf } from \"@/lib/config\";\nimport PUBLISH_TYPE_CONSTANTS from \"@/lib/publish/publishUtil\";\nexport default {\n  name: \"JVueSetting\",\n\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    };\n  },\n\n  async created() {\n    await this.initConf();\n  },\n\n  methods: {\n    initConf() {\n      const confs = getConf(PUBLISH_TYPE_CONSTANTS.API_TYPE_JVUE);\n      console.log(\"confs=>\", confs);\n\n      if (confs && confs.length > 0) {\n        for (let i = 0; i < confs.length; i++) {\n          const conf = confs[i];\n\n          if (conf.key === \"jvuePublishUsername\") {\n            this.username = conf.value;\n          }\n\n          if (conf.key === \"jvuePublishPassword\") {\n            this.password = conf.value;\n          }\n        }\n      }\n    },\n\n    async saveConf() {\n      await setConf(PUBLISH_TYPE_CONSTANTS.API_TYPE_JVUE, [{\n        key: \"jvuePublishUsername\",\n        value: this.username\n      }, {\n        key: \"jvuePublishPassword\",\n        value: this.password\n      }]);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8BA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,cAA/B;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AAEA,eAAe;EACbC,IAAI,EAAE,aADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,QAAQ,EAAE;IAFL,CAAP;EAID,CAPY;;EAQb,MAAMC,OAAN,GAAgB;IACd,MAAM,KAAKC,QAAL,EAAN;EACD,CAVY;;EAWbC,OAAO,EAAE;IACPD,QAAQ,GAAG;MACT,MAAME,KAAI,GAAIV,OAAO,CAACE,sBAAsB,CAACS,aAAxB,CAArB;MACAC,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,KAAvB;;MACA,IAAIA,KAAI,IAAKA,KAAK,CAACI,MAAN,GAAe,CAA5B,EAA+B;QAC7B,KAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,KAAK,CAACI,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;UACrC,MAAMC,IAAG,GAAIN,KAAK,CAACK,CAAD,CAAlB;;UACA,IAAIC,IAAI,CAACC,GAAL,KAAa,qBAAjB,EAAwC;YACtC,KAAKZ,QAAL,GAAgBW,IAAI,CAACE,KAArB;UACF;;UACA,IAAIF,IAAI,CAACC,GAAL,KAAa,qBAAjB,EAAwC;YACtC,KAAKX,QAAL,GAAgBU,IAAI,CAACE,KAArB;UACF;QACF;MACF;IACD,CAfM;;IAgBP,MAAMC,QAAN,GAAiB;MACf,MAAMlB,OAAO,CAACC,sBAAsB,CAACS,aAAxB,EAAuC,CAClD;QACEM,GAAG,EAAE,qBADP;QAEEC,KAAK,EAAE,KAAKb;MAFd,CADkD,EAI/C;QACDY,GAAG,EAAE,qBADJ;QAEDC,KAAK,EAAE,KAAKZ;MAFX,CAJ+C,CAAvC,CAAb;IASF;;EA1BO;AAXI,CAAf","names":["getConf","setConf","PUBLISH_TYPE_CONSTANTS","name","data","username","password","created","initConf","methods","confs","API_TYPE_JVUE","console","log","length","i","conf","key","value","saveConf"],"sourceRoot":"","sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/components/setting/JVueSetting.vue"],"sourcesContent":["<template>\n  <el-form label-width=\"120px\">\n    <el-form-item :label=\"$t('setting.blog.url')\">\n      <el-input/>\n    </el-form-item>\n\n    <el-form-item :label=\"$t('setting.blog.username')\">\n      <el-input v-model=\"username\"/>\n    </el-form-item>\n\n    <el-form-item :label=\"$t('setting.blog.password')\">\n      <el-input v-model=\"password\"/>\n    </el-form-item>\n\n    <el-form-item :label=\"$t('setting.blog.apiurl')\">\n      <el-input/>\n    </el-form-item>\n\n    <el-form-item>\n      <el-button type=\"primary\">{{ $t('setting.blog.validate') }}</el-button>\n    </el-form-item>\n\n    <el-form-item>\n      <el-button type=\"primary\" @click=\"saveConf\">{{ $t('setting.blog.save') }}</el-button>\n      <el-button>{{ $t('setting.blog.cancel') }}</el-button>\n    </el-form-item>\n  </el-form>\n</template>\n\n<script>\nimport {getConf, setConf} from \"@/lib/config\";\nimport PUBLISH_TYPE_CONSTANTS from \"@/lib/publish/publishUtil\";\n\nexport default {\n  name: \"JVueSetting\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\"\n    }\n  },\n  async created() {\n    await this.initConf()\n  },\n  methods: {\n    initConf() {\n      const confs = getConf(PUBLISH_TYPE_CONSTANTS.API_TYPE_JVUE)\n      console.log(\"confs=>\", confs)\n      if (confs && confs.length > 0) {\n        for (let i = 0; i < confs.length; i++) {\n          const conf = confs[i];\n          if (conf.key === \"jvuePublishUsername\") {\n            this.username = conf.value\n          }\n          if (conf.key === \"jvuePublishPassword\") {\n            this.password = conf.value\n          }\n        }\n      }\n    },\n    async saveConf() {\n      await setConf(PUBLISH_TYPE_CONSTANTS.API_TYPE_JVUE, [\n        {\n          key: \"jvuePublishUsername\",\n          value: this.username\n        }, {\n          key: \"jvuePublishPassword\",\n          value: this.password\n        }\n      ])\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}