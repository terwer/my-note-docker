{"ast":null,"code":"const {\n  hasOwnProperty\n} = Object.prototype;\nconst eol = typeof process !== 'undefined' && process.platform === 'win32' ? '\\r\\n' : '\\n';\n\nconst encode = (obj, opt) => {\n  const children = [];\n  let out = '';\n\n  if (typeof opt === 'string') {\n    opt = {\n      section: opt,\n      whitespace: false\n    };\n  } else {\n    opt = opt || Object.create(null);\n    opt.whitespace = opt.whitespace === true;\n  }\n\n  const separator = opt.whitespace ? ' = ' : '=';\n\n  for (const k of Object.keys(obj)) {\n    const val = obj[k];\n\n    if (val && Array.isArray(val)) {\n      for (const item of val) out += safe(k + '[]') + separator + safe(item) + '\\n';\n    } else if (val && typeof val === 'object') children.push(k);else out += safe(k) + separator + safe(val) + eol;\n  }\n\n  if (opt.section && out.length) out = '[' + safe(opt.section) + ']' + eol + out;\n\n  for (const k of children) {\n    const nk = dotSplit(k).join('\\\\.');\n    const section = (opt.section ? opt.section + '.' : '') + nk;\n    const {\n      whitespace\n    } = opt;\n    const child = encode(obj[k], {\n      section,\n      whitespace\n    });\n    if (out.length && child.length) out += eol;\n    out += child;\n  }\n\n  return out;\n};\n\nconst dotSplit = str => str.replace(/\\1/g, '\\u0002LITERAL\\\\1LITERAL\\u0002').replace(/\\\\\\./g, '\\u0001').split(/\\./).map(part => part.replace(/\\1/g, '\\\\.').replace(/\\2LITERAL\\\\1LITERAL\\2/g, '\\u0001'));\n\nconst decode = str => {\n  const out = Object.create(null);\n  let p = out;\n  let section = null; //          section     |key      = value\n\n  const re = /^\\[([^\\]]*)\\]$|^([^=]+)(=(.*))?$/i;\n  const lines = str.split(/[\\r\\n]+/g);\n\n  for (const line of lines) {\n    if (!line || line.match(/^\\s*[;#]/)) continue;\n    const match = line.match(re);\n    if (!match) continue;\n\n    if (match[1] !== undefined) {\n      section = unsafe(match[1]);\n\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = Object.create(null);\n        continue;\n      }\n\n      p = out[section] = out[section] || Object.create(null);\n      continue;\n    }\n\n    const keyRaw = unsafe(match[2]);\n    const isArray = keyRaw.length > 2 && keyRaw.slice(-2) === '[]';\n    const key = isArray ? keyRaw.slice(0, -2) : keyRaw;\n    if (key === '__proto__') continue;\n    const valueRaw = match[3] ? unsafe(match[4]) : true;\n    const value = valueRaw === 'true' || valueRaw === 'false' || valueRaw === 'null' ? JSON.parse(valueRaw) : valueRaw; // Convert keys with '[]' suffix to an array\n\n    if (isArray) {\n      if (!hasOwnProperty.call(p, key)) p[key] = [];else if (!Array.isArray(p[key])) p[key] = [p[key]];\n    } // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n\n\n    if (Array.isArray(p[key])) p[key].push(value);else p[key] = value;\n  } // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n\n\n  const remove = [];\n\n  for (const k of Object.keys(out)) {\n    if (!hasOwnProperty.call(out, k) || typeof out[k] !== 'object' || Array.isArray(out[k])) continue; // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n\n    const parts = dotSplit(k);\n    let p = out;\n    const l = parts.pop();\n    const nl = l.replace(/\\\\\\./g, '.');\n\n    for (const part of parts) {\n      if (part === '__proto__') continue;\n      if (!hasOwnProperty.call(p, part) || typeof p[part] !== 'object') p[part] = Object.create(null);\n      p = p[part];\n    }\n\n    if (p === out && nl === l) continue;\n    p[nl] = out[k];\n    remove.push(k);\n  }\n\n  for (const del of remove) delete out[del];\n\n  return out;\n};\n\nconst isQuoted = val => val.charAt(0) === '\"' && val.slice(-1) === '\"' || val.charAt(0) === \"'\" && val.slice(-1) === \"'\";\n\nconst safe = val => typeof val !== 'string' || val.match(/[=\\r\\n]/) || val.match(/^\\[/) || val.length > 1 && isQuoted(val) || val !== val.trim() ? JSON.stringify(val) : val.replace(/;/g, '\\\\;').replace(/#/g, '\\\\#');\n\nconst unsafe = (val, doUnesc) => {\n  val = (val || '').trim();\n\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\") val = val.substr(1, val.length - 2);\n\n    try {\n      val = JSON.parse(val);\n    } catch (_) {}\n  } else {\n    // walk the val to find the first not-escaped ; character\n    let esc = false;\n    let unesc = '';\n\n    for (let i = 0, l = val.length; i < l; i++) {\n      const c = val.charAt(i);\n\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1) unesc += c;else unesc += '\\\\' + c;\n        esc = false;\n      } else if (';#'.indexOf(c) !== -1) break;else if (c === '\\\\') esc = true;else unesc += c;\n    }\n\n    if (esc) unesc += '\\\\';\n    return unesc.trim();\n  }\n\n  return val;\n};\n\nmodule.exports = {\n  parse: decode,\n  decode,\n  stringify: encode,\n  encode,\n  safe,\n  unsafe\n};","map":{"version":3,"names":["hasOwnProperty","Object","prototype","eol","process","platform","encode","obj","opt","children","out","section","whitespace","create","separator","k","keys","val","Array","isArray","item","safe","push","length","nk","dotSplit","join","child","str","replace","split","map","part","decode","p","re","lines","line","match","undefined","unsafe","keyRaw","slice","key","valueRaw","value","JSON","parse","call","remove","parts","l","pop","nl","del","isQuoted","charAt","trim","stringify","doUnesc","substr","_","esc","unesc","i","c","indexOf","module","exports"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/ini/ini.js"],"sourcesContent":["const { hasOwnProperty } = Object.prototype\n\nconst eol = typeof process !== 'undefined' &&\n  process.platform === 'win32' ? '\\r\\n' : '\\n'\n\nconst encode = (obj, opt) => {\n  const children = []\n  let out = ''\n\n  if (typeof opt === 'string') {\n    opt = {\n      section: opt,\n      whitespace: false,\n    }\n  } else {\n    opt = opt || Object.create(null)\n    opt.whitespace = opt.whitespace === true\n  }\n\n  const separator = opt.whitespace ? ' = ' : '='\n\n  for (const k of Object.keys(obj)) {\n    const val = obj[k]\n    if (val && Array.isArray(val)) {\n      for (const item of val)\n        out += safe(k + '[]') + separator + safe(item) + '\\n'\n    } else if (val && typeof val === 'object')\n      children.push(k)\n    else\n      out += safe(k) + separator + safe(val) + eol\n  }\n\n  if (opt.section && out.length)\n    out = '[' + safe(opt.section) + ']' + eol + out\n\n  for (const k of children) {\n    const nk = dotSplit(k).join('\\\\.')\n    const section = (opt.section ? opt.section + '.' : '') + nk\n    const { whitespace } = opt\n    const child = encode(obj[k], {\n      section,\n      whitespace,\n    })\n    if (out.length && child.length)\n      out += eol\n\n    out += child\n  }\n\n  return out\n}\n\nconst dotSplit = str =>\n  str.replace(/\\1/g, '\\u0002LITERAL\\\\1LITERAL\\u0002')\n    .replace(/\\\\\\./g, '\\u0001')\n    .split(/\\./)\n    .map(part =>\n      part.replace(/\\1/g, '\\\\.')\n        .replace(/\\2LITERAL\\\\1LITERAL\\2/g, '\\u0001'))\n\nconst decode = str => {\n  const out = Object.create(null)\n  let p = out\n  let section = null\n  //          section     |key      = value\n  const re = /^\\[([^\\]]*)\\]$|^([^=]+)(=(.*))?$/i\n  const lines = str.split(/[\\r\\n]+/g)\n\n  for (const line of lines) {\n    if (!line || line.match(/^\\s*[;#]/))\n      continue\n    const match = line.match(re)\n    if (!match)\n      continue\n    if (match[1] !== undefined) {\n      section = unsafe(match[1])\n      if (section === '__proto__') {\n        // not allowed\n        // keep parsing the section, but don't attach it.\n        p = Object.create(null)\n        continue\n      }\n      p = out[section] = out[section] || Object.create(null)\n      continue\n    }\n    const keyRaw = unsafe(match[2])\n    const isArray = keyRaw.length > 2 && keyRaw.slice(-2) === '[]'\n    const key = isArray ? keyRaw.slice(0, -2) : keyRaw\n    if (key === '__proto__')\n      continue\n    const valueRaw = match[3] ? unsafe(match[4]) : true\n    const value = valueRaw === 'true' ||\n      valueRaw === 'false' ||\n      valueRaw === 'null' ? JSON.parse(valueRaw)\n      : valueRaw\n\n    // Convert keys with '[]' suffix to an array\n    if (isArray) {\n      if (!hasOwnProperty.call(p, key))\n        p[key] = []\n      else if (!Array.isArray(p[key]))\n        p[key] = [p[key]]\n    }\n\n    // safeguard against resetting a previously defined\n    // array by accidentally forgetting the brackets\n    if (Array.isArray(p[key]))\n      p[key].push(value)\n    else\n      p[key] = value\n  }\n\n  // {a:{y:1},\"a.b\":{x:2}} --> {a:{y:1,b:{x:2}}}\n  // use a filter to return the keys that have to be deleted.\n  const remove = []\n  for (const k of Object.keys(out)) {\n    if (!hasOwnProperty.call(out, k) ||\n        typeof out[k] !== 'object' ||\n        Array.isArray(out[k]))\n      continue\n\n    // see if the parent section is also an object.\n    // if so, add it to that, and mark this one for deletion\n    const parts = dotSplit(k)\n    let p = out\n    const l = parts.pop()\n    const nl = l.replace(/\\\\\\./g, '.')\n    for (const part of parts) {\n      if (part === '__proto__')\n        continue\n      if (!hasOwnProperty.call(p, part) || typeof p[part] !== 'object')\n        p[part] = Object.create(null)\n      p = p[part]\n    }\n    if (p === out && nl === l)\n      continue\n\n    p[nl] = out[k]\n    remove.push(k)\n  }\n  for (const del of remove)\n    delete out[del]\n\n  return out\n}\n\nconst isQuoted = val =>\n  (val.charAt(0) === '\"' && val.slice(-1) === '\"') ||\n    (val.charAt(0) === \"'\" && val.slice(-1) === \"'\")\n\nconst safe = val =>\n  (typeof val !== 'string' ||\n    val.match(/[=\\r\\n]/) ||\n    val.match(/^\\[/) ||\n    (val.length > 1 &&\n     isQuoted(val)) ||\n    val !== val.trim())\n    ? JSON.stringify(val)\n    : val.replace(/;/g, '\\\\;').replace(/#/g, '\\\\#')\n\nconst unsafe = (val, doUnesc) => {\n  val = (val || '').trim()\n  if (isQuoted(val)) {\n    // remove the single quotes before calling JSON.parse\n    if (val.charAt(0) === \"'\")\n      val = val.substr(1, val.length - 2)\n\n    try {\n      val = JSON.parse(val)\n    } catch (_) {}\n  } else {\n    // walk the val to find the first not-escaped ; character\n    let esc = false\n    let unesc = ''\n    for (let i = 0, l = val.length; i < l; i++) {\n      const c = val.charAt(i)\n      if (esc) {\n        if ('\\\\;#'.indexOf(c) !== -1)\n          unesc += c\n        else\n          unesc += '\\\\' + c\n\n        esc = false\n      } else if (';#'.indexOf(c) !== -1)\n        break\n      else if (c === '\\\\')\n        esc = true\n      else\n        unesc += c\n    }\n    if (esc)\n      unesc += '\\\\'\n\n    return unesc.trim()\n  }\n  return val\n}\n\nmodule.exports = {\n  parse: decode,\n  decode,\n  stringify: encode,\n  encode,\n  safe,\n  unsafe,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}