{"ast":null,"code":"import { getPage, getWidgetId } from \"@/lib/siyuanUtil\";\n/**\n * 获取本地缓存的思源笔记页面ID\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<*|string>}\n */\n\nexport async function getSiyuanPageId(force) {\n  const page = await getSiyuanPage(force);\n  const pageId = page.root_id || \"\";\n  console.log(\"获取思源笔记页面ID=>\", pageId);\n  return pageId;\n}\n/**\n * 获取本地缓存的思源笔记页面信息（不是实时的，获取有变化的属性不要使用此方法，实时页面请将force传递为true）\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<any>}\n */\n\nexport async function getSiyuanPage(force) {\n  const widgetId = await getWidgetId(); // 默认读取缓存\n\n  if (!force && localStorage.getItem(widgetId)) {\n    const pageObj = JSON.parse(localStorage.getItem(widgetId));\n    console.log(\"获取本地缓存的思源笔记页面信息（不是实时的）=>\", pageObj);\n    return pageObj;\n  } // 如果本地不存在，或者需要强制读取，调用api查询\n\n\n  const page = await getPage(widgetId);\n\n  if (page) {\n    localStorage.setItem(widgetId, JSON.stringify(page));\n    console.warn(\"调用API设置查询思源页面信息并更新本地缓存\", page);\n  }\n\n  return page;\n}","map":{"version":3,"names":["getPage","getWidgetId","getSiyuanPageId","force","page","getSiyuanPage","pageId","root_id","console","log","widgetId","localStorage","getItem","pageObj","JSON","parse","setItem","stringify","warn"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/util.js"],"sourcesContent":["import {getPage, getWidgetId} from \"@/lib/siyuanUtil\";\n\n/**\n * 获取本地缓存的思源笔记页面ID\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<*|string>}\n */\nexport async function getSiyuanPageId(force) {\n    const page = await getSiyuanPage(force);\n\n    const pageId = page.root_id || \"\"\n    console.log(\"获取思源笔记页面ID=>\", pageId)\n    return pageId\n}\n\n/**\n * 获取本地缓存的思源笔记页面信息（不是实时的，获取有变化的属性不要使用此方法，实时页面请将force传递为true）\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<any>}\n */\nexport async function getSiyuanPage(force) {\n    const widgetId = await getWidgetId()\n    // 默认读取缓存\n    if (!force && localStorage.getItem(widgetId)) {\n        const pageObj = JSON.parse(localStorage.getItem(widgetId));\n        console.log(\"获取本地缓存的思源笔记页面信息（不是实时的）=>\", pageObj)\n        return pageObj;\n    }\n\n    // 如果本地不存在，或者需要强制读取，调用api查询\n    const page = await getPage(widgetId);\n    if (page) {\n        localStorage.setItem(widgetId, JSON.stringify(page))\n        console.warn(\"调用API设置查询思源页面信息并更新本地缓存\", page)\n    }\n    return page;\n}"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,QAAmC,kBAAnC;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeC,eAAf,CAA+BC,KAA/B,EAAsC;EACzC,MAAMC,IAAI,GAAG,MAAMC,aAAa,CAACF,KAAD,CAAhC;EAEA,MAAMG,MAAM,GAAGF,IAAI,CAACG,OAAL,IAAgB,EAA/B;EACAC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,MAA5B;EACA,OAAOA,MAAP;AACH;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAeD,aAAf,CAA6BF,KAA7B,EAAoC;EACvC,MAAMO,QAAQ,GAAG,MAAMT,WAAW,EAAlC,CADuC,CAEvC;;EACA,IAAI,CAACE,KAAD,IAAUQ,YAAY,CAACC,OAAb,CAAqBF,QAArB,CAAd,EAA8C;IAC1C,MAAMG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqBF,QAArB,CAAX,CAAhB;IACAF,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCI,OAAxC;IACA,OAAOA,OAAP;EACH,CAPsC,CASvC;;;EACA,MAAMT,IAAI,GAAG,MAAMJ,OAAO,CAACU,QAAD,CAA1B;;EACA,IAAIN,IAAJ,EAAU;IACNO,YAAY,CAACK,OAAb,CAAqBN,QAArB,EAA+BI,IAAI,CAACG,SAAL,CAAeb,IAAf,CAA/B;IACAI,OAAO,CAACU,IAAR,CAAa,wBAAb,EAAuCd,IAAvC;EACH;;EACD,OAAOA,IAAP;AACH"},"metadata":{},"sourceType":"module"}