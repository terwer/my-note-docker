{"ast":null,"code":"const showdown = require(\"showdown\");\n\nconst converter = new showdown.Converter();\n/**\n * 将Markdown转换为HTML\n * @param md Markdown\n * @returns {*} HTML\n */\n\nexport function mdToHtml(md) {\n  return converter.makeHtml(md);\n}\n/**\n * 截取指定长度html\n * @param html html\n * @param length 长度\n * @returns {string} 结果\n */\n\nexport function parseHtml(html, length) {\n  let allText = filterHtml(html);\n\n  if (allText.length < length) {\n    return allText;\n  }\n\n  return allText.substring(0, length) + \"...\";\n}\n/**\n * 去除html标签，残缺不全也可以\n * @param html html\n * @returns {string} 转换后的结果\n */\n\nfunction filterHtml(html) {\n  /*\n   * <.*?>为正则表达式，其中的.表示任意字符，*?表示出现0次或0次以上，此方法可以去掉双头标签(双头针对于残缺的标签)\n   * \"<.*?\"表示<尖括号后的所有字符，此方法可以去掉残缺的标签，及后面的内容\n   * \" \"，若有多种此种字符，可用同一方法去除\n   */\n  html = html.replaceAll(/<.*?>/g, \"\");\n  html = html.replaceAll(/<.*?/g, \"\");\n  html = html.replaceAll(/\\\\n/g, \"\");\n  html = html.replaceAll(/\\\\t/g, \"\");\n  html = html.replace(\"&quot;\", \"\");\n  html = html.replace(\" \", \"\");\n  html = html.replace(\":\", \"\");\n  html = html.replace(\";\", \"\");\n  html = html.replace(\",\", \"\");\n  html = html.replace(\".\", \"\");\n  html = html.replace(\".\", \"\");\n  html = html.replace(\"(\", \"\");\n  html = html.replace(\")\", \"\");\n  html = html.replace(\"'\", \"\");\n  html = html.replace(\"\\\"\", \"\");\n  html = html.replace(\"+\", \"\");\n  html = html.replace(\"=\", \"\");\n  html = html.replace(\"-\", \"\");\n  html = html.toLowerCase();\n  return html;\n}","map":{"version":3,"names":["showdown","require","converter","Converter","mdToHtml","md","makeHtml","parseHtml","html","length","allText","filterHtml","substring","replaceAll","replace","toLowerCase"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/htmlUtil.js"],"sourcesContent":["const showdown = require(\"showdown\")\nconst converter = new showdown.Converter();\n\n/**\n * 将Markdown转换为HTML\n * @param md Markdown\n * @returns {*} HTML\n */\nexport function mdToHtml(md) {\n    return converter.makeHtml(md);\n}\n\n/**\n * 截取指定长度html\n * @param html html\n * @param length 长度\n * @returns {string} 结果\n */\nexport function parseHtml(html, length) {\n    let allText = filterHtml(html);\n    if (allText.length < length) {\n        return allText;\n    }\n    return allText.substring(0, length) + \"...\";\n}\n\n/**\n * 去除html标签，残缺不全也可以\n * @param html html\n * @returns {string} 转换后的结果\n */\nfunction filterHtml(html) {\n    /*\n     * <.*?>为正则表达式，其中的.表示任意字符，*?表示出现0次或0次以上，此方法可以去掉双头标签(双头针对于残缺的标签)\n     * \"<.*?\"表示<尖括号后的所有字符，此方法可以去掉残缺的标签，及后面的内容\n     * \" \"，若有多种此种字符，可用同一方法去除\n     */\n    html = html.replaceAll(/<.*?>/g, \"\");\n    html = html.replaceAll(/<.*?/g, \"\");\n    html = html.replaceAll(/\\\\n/g, \"\");\n    html = html.replaceAll(/\\\\t/g, \"\");\n    html = html.replace(\"&quot;\", \"\");\n    html = html.replace(\" \", \"\");\n    html = html.replace(\":\", \"\");\n    html = html.replace(\";\", \"\");\n    html = html.replace(\",\", \"\");\n    html = html.replace(\".\", \"\");\n    html = html.replace(\".\", \"\");\n    html = html.replace(\"(\", \"\");\n    html = html.replace(\")\", \"\");\n    html = html.replace(\"'\", \"\");\n    html = html.replace(\"\\\"\", \"\");\n    html = html.replace(\"+\", \"\");\n    html = html.replace(\"=\", \"\");\n    html = html.replace(\"-\", \"\");\n    html = html.toLowerCase();\n    return html;\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,SAAS,GAAG,IAAIF,QAAQ,CAACG,SAAb,EAAlB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;EACzB,OAAOH,SAAS,CAACI,QAAV,CAAmBD,EAAnB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASE,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EACpC,IAAIC,OAAO,GAAGC,UAAU,CAACH,IAAD,CAAxB;;EACA,IAAIE,OAAO,CAACD,MAAR,GAAiBA,MAArB,EAA6B;IACzB,OAAOC,OAAP;EACH;;EACD,OAAOA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqBH,MAArB,IAA+B,KAAtC;AACH;AAED;AACA;AACA;AACA;AACA;;AACA,SAASE,UAAT,CAAoBH,IAApB,EAA0B;EACtB;AACJ;AACA;AACA;AACA;EACIA,IAAI,GAAGA,IAAI,CAACK,UAAL,CAAgB,QAAhB,EAA0B,EAA1B,CAAP;EACAL,IAAI,GAAGA,IAAI,CAACK,UAAL,CAAgB,OAAhB,EAAyB,EAAzB,CAAP;EACAL,IAAI,GAAGA,IAAI,CAACK,UAAL,CAAgB,MAAhB,EAAwB,EAAxB,CAAP;EACAL,IAAI,GAAGA,IAAI,CAACK,UAAL,CAAgB,MAAhB,EAAwB,EAAxB,CAAP;EACAL,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACM,OAAL,CAAa,GAAb,EAAkB,EAAlB,CAAP;EACAN,IAAI,GAAGA,IAAI,CAACO,WAAL,EAAP;EACA,OAAOP,IAAP;AACH"},"metadata":{},"sourceType":"module"}