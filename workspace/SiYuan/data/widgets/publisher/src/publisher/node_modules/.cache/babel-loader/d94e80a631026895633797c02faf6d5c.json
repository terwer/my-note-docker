{"ast":null,"code":"import { exportMdContent } from \"@/lib/siYuanApi\";\nimport { getApiParams, PUBLISH_TYPE_CONSTANTS } from \"@/lib/publish/publishUtil\";\nimport metaweblogApiClient from \"@/lib/metaweblog/metaweblog-api-client\";\nimport wordpressApiClient from \"@/lib/wordpress/wordpress-api-client\";\n\nasync function doPublish(id, type, meta, content) {\n  console.log(\"doPublish params=>\", {\n    id,\n    type,\n    meta,\n    content\n  });\n  const apiParams = getApiParams(type);\n  console.log(\"doPublish apiParams=>\", {\n    \"API_URL\": apiParams.API_URL,\n    \"appKey\": apiParams.appKey,\n    \"username\": apiParams.username,\n    \"apiParams.postidKey\": apiParams.postidKey\n  }); // 设置自定义属性\n\n  const postidKey = apiParams.postidKey;\n  const customAttr = {\n    \"custom-slug\": meta[\"custom-slug\"],\n    [postidKey]: meta[postidKey]\n  };\n  console.log(\"设置自定义属性customAttr=>\", customAttr);\n  return new Promise((resolve, reject) => {\n    if (PUBLISH_TYPE_CONSTANTS.API_TYPE_VUEPRESS === type) {\n      // VUEPRESS保存为新文件\n      console.log(\"VUEPRESS保存为新文件\");\n\n      const fs = require('fs');\n\n      let lyrics = 'But still I\\'m having memories of high speeds when the cops crashed\\n' + 'As I laugh, pushin the gas while my Glocks blast\\n' + 'We was young and we was dumb but we had heart'; // write to a new file named 2pac.txt\n\n      fs.writeFile('./test.txt', lyrics, err => {\n        // throws an error, you could also catch it here\n        if (err) throw err; // success case, the file was saved\n\n        console.log('Lyric saved!');\n      });\n    } else if (PUBLISH_TYPE_CONSTANTS.API_TYPE_WORDPRESS === type) {\n      // Wordpress调用Wordpress的API\n      console.log(\"Wordpress调用Wordpress的API\");\n      const wordpressApi = wordpressApiClient(type);\n      const result = wordpressApi.getPosts(10);\n      result.then(function (res, rej) {\n        if (res) {\n          console.log(\"wordpress getPosts reject=>\", res);\n          resolve(res);\n        } else {\n          console.log(\"wordpress getPosts=>\", rej);\n          reject(rej);\n        }\n      });\n    } else {\n      // 其他平台调用metaweblogApi的适配器\n      console.log(\"其他平台调用metaweblogApi的适配器\");\n      const metaWeblogApi = metaweblogApiClient(type);\n      const result = metaWeblogApi.getRecentPosts(10);\n      result.then(function (posts) {\n        console.log(\"metaweblog get recent posts=>\", posts);\n        resolve(posts);\n      }).catch(function (e) {\n        console.error(e);\n        reject(e);\n      });\n    } // fetchPost(\"/api/attr/setBlockAttrs\", {\n    //     \"id\": id,\n    //     \"attrs\": customAttr\n    // }, (response) => {\n    //     const newmeta = response;\n    //     console.log(\"doPublish customAttr=>\", customAttr);\n    //     // console.log(\"doPublish content=>\", content);\n    // });\n\n  });\n}\n/**\n * 发布Markdown格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\n\n\nexport async function publishMdContent(id, type, meta) {\n  const data = await exportMdContent(id);\n  const content = data.content;\n  console.log(\"发布Markdown格式的文档\");\n  return await doPublish(id, type, meta, content);\n}\n/**\n * 发布HTML格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\n\nexport async function publishHTMLContent(id, type, meta) {\n  const data = await exportMdContent(id);\n  const content = data.content;\n  const html = content;\n  console.log(\"发布HTML格式的文档\");\n  return await doPublish(id, type, meta, html);\n}","map":{"version":3,"names":["exportMdContent","getApiParams","PUBLISH_TYPE_CONSTANTS","metaweblogApiClient","wordpressApiClient","doPublish","id","type","meta","content","console","log","apiParams","API_URL","appKey","username","postidKey","customAttr","Promise","resolve","reject","API_TYPE_VUEPRESS","fs","require","lyrics","writeFile","err","API_TYPE_WORDPRESS","wordpressApi","result","getPosts","then","res","rej","metaWeblogApi","getRecentPosts","posts","catch","e","error","publishMdContent","data","publishHTMLContent","html"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/publish/publish.js"],"sourcesContent":["import {exportMdContent} from \"@/lib/siYuanApi\";\nimport {getApiParams, PUBLISH_TYPE_CONSTANTS} from \"@/lib/publish/publishUtil\";\nimport metaweblogApiClient from \"@/lib/metaweblog/metaweblog-api-client\";\nimport wordpressApiClient from \"@/lib/wordpress/wordpress-api-client\";\n\nasync function doPublish(id, type, meta, content) {\n    console.log(\"doPublish params=>\", {id, type, meta, content});\n    const apiParams = getApiParams(type);\n    console.log(\"doPublish apiParams=>\", {\n        \"API_URL\": apiParams.API_URL,\n        \"appKey\": apiParams.appKey,\n        \"username\": apiParams.username,\n        \"apiParams.postidKey\": apiParams.postidKey\n    });\n\n    // 设置自定义属性\n    const postidKey = apiParams.postidKey;\n    const customAttr = {\n        \"custom-slug\": meta[\"custom-slug\"],\n        [postidKey]: meta[postidKey],\n    };\n\n    console.log(\"设置自定义属性customAttr=>\", customAttr);\n\n    return new Promise((resolve, reject) => {\n        if (PUBLISH_TYPE_CONSTANTS.API_TYPE_VUEPRESS === type) {\n            // VUEPRESS保存为新文件\n            console.log(\"VUEPRESS保存为新文件\");\n\n\n            const fs = require('fs');\n\n            let lyrics = 'But still I\\'m having memories of high speeds when the cops crashed\\n' +\n                'As I laugh, pushin the gas while my Glocks blast\\n' +\n                'We was young and we was dumb but we had heart';\n\n            // write to a new file named 2pac.txt\n            fs.writeFile('./test.txt', lyrics, (err) => {\n                // throws an error, you could also catch it here\n                if (err) throw err;\n\n                // success case, the file was saved\n                console.log('Lyric saved!');\n            });\n        } else if (PUBLISH_TYPE_CONSTANTS.API_TYPE_WORDPRESS === type) {\n            // Wordpress调用Wordpress的API\n            console.log(\"Wordpress调用Wordpress的API\");\n            const wordpressApi = wordpressApiClient(type);\n            const result = wordpressApi.getPosts(10);\n            result.then(function (res, rej) {\n                if (res) {\n                    console.log(\"wordpress getPosts reject=>\", res);\n                    resolve(res)\n                } else {\n                    console.log(\"wordpress getPosts=>\", rej);\n                    reject(rej)\n                }\n            });\n        } else {\n            // 其他平台调用metaweblogApi的适配器\n            console.log(\"其他平台调用metaweblogApi的适配器\");\n            const metaWeblogApi = metaweblogApiClient(type);\n            const result = metaWeblogApi.getRecentPosts(10);\n            result.then(function (posts) {\n                console.log(\"metaweblog get recent posts=>\", posts);\n                resolve(posts)\n            }).catch(function (e) {\n                console.error(e);\n                reject(e)\n            });\n        }\n\n        // fetchPost(\"/api/attr/setBlockAttrs\", {\n        //     \"id\": id,\n        //     \"attrs\": customAttr\n        // }, (response) => {\n        //     const newmeta = response;\n        //     console.log(\"doPublish customAttr=>\", customAttr);\n        //     // console.log(\"doPublish content=>\", content);\n        // });\n    });\n}\n\n/**\n * 发布Markdown格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\nexport async function publishMdContent(id, type, meta) {\n    const data = await exportMdContent(id);\n\n    const content = data.content;\n\n    console.log(\"发布Markdown格式的文档\")\n    return await doPublish(id, type, meta, content);\n}\n\n/**\n * 发布HTML格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\nexport async function publishHTMLContent(id, type, meta) {\n    const data = await exportMdContent(id);\n\n    const content = data.content;\n    const html = content;\n\n    console.log(\"发布HTML格式的文档\")\n    return await doPublish(id, type, meta, html);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}