{"ast":null,"code":"const showdown = require(\"showdown\");\n\nconst converter = new showdown.Converter();\n/**\n * 将Markdown转换为HTML\n * @param md Markdown\n * @returns {*} HTML\n */\n\nexport function mdToHtml(md) {\n  let html = converter.makeHtml(md);\n  return removeWidgetTag(html);\n}\n/**\n * 删除挂件的HTML\n * @param str 原字符\n * @returns {*|string} 删除后的字符\n */\n\nfunction removeWidgetTag(str) {\n  var regex = /<iframe.*src=\"\\/widgets\\/publisher.*<\\/iframe>/g;\n  return str.replaceAll(regex, \"\");\n}\n/**\n * 截取指定长度html\n * @param html html\n * @param length 长度\n * @param ignore 不要结尾省略号\n * @returns {string} 结果\n */\n\n\nexport function parseHtml(html, length, ignore) {\n  let allText = filterHtml(html);\n\n  if (allText.length < length) {\n    return allText;\n  }\n\n  if (ignore) {\n    return allText.substring(0, length);\n  }\n\n  return allText.substring(0, length) + \"...\";\n}\n/**\n * 去除html标签，残缺不全也可以\n * @param str\n * @returns {string} 转换后的结果\n */\n\nfunction filterHtml(str) {\n  /*\n   * <.*?>为正则表达式，其中的.表示任意字符，*?表示出现0次或0次以上，此方法可以去掉双头标签(双头针对于残缺的标签)\n   * \"<.*?\"表示<尖括号后的所有字符，此方法可以去掉残缺的标签，及后面的内容\n   * \" \"，若有多种此种字符，可用同一方法去除\n   */\n  str = str.replace(/<style((.|\\n|\\r)*?)<\\/style>/g, '');\n  str = str.replace(/<script((.|\\n|\\r)*?)<\\/script>/g, '');\n  str = str.replace(/<[^>]*>/g, '');\n  str = str.replace(/&.*;/g, '');\n  str = str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  str = str.replace(/</g, \"\").replace(/>/g, \"\");\n  str = str.replace(/\"/g, \"\").replace(/'/g, \"\");\n  str = str.replace(/\\$/g, \"\"); // 下面是行内空格，不建议去除\n\n  str = str.replace(/\\s+/g, '');\n  str = str.toLowerCase();\n  return str;\n}","map":{"version":3,"names":["showdown","require","converter","Converter","mdToHtml","md","html","makeHtml","removeWidgetTag","str","regex","replaceAll","parseHtml","length","ignore","allText","filterHtml","substring","replace","toLowerCase"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/htmlUtil.js"],"sourcesContent":["const showdown = require(\"showdown\")\nconst converter = new showdown.Converter();\n\n/**\n * 将Markdown转换为HTML\n * @param md Markdown\n * @returns {*} HTML\n */\nexport function mdToHtml(md) {\n    let html = converter.makeHtml(md);\n    return removeWidgetTag(html);\n}\n\n/**\n * 删除挂件的HTML\n * @param str 原字符\n * @returns {*|string} 删除后的字符\n */\nfunction removeWidgetTag(str) {\n    var regex = /<iframe.*src=\"\\/widgets\\/publisher.*<\\/iframe>/g;\n    return str.replaceAll(regex, \"\")\n}\n\n/**\n * 截取指定长度html\n * @param html html\n * @param length 长度\n * @param ignore 不要结尾省略号\n * @returns {string} 结果\n */\nexport function parseHtml(html, length, ignore) {\n    let allText = filterHtml(html);\n    if (allText.length < length) {\n        return allText;\n    }\n    if (ignore) {\n        return allText.substring(0, length);\n    }\n    return allText.substring(0, length) + \"...\";\n}\n\n/**\n * 去除html标签，残缺不全也可以\n * @param str\n * @returns {string} 转换后的结果\n */\nfunction filterHtml(str) {\n    /*\n     * <.*?>为正则表达式，其中的.表示任意字符，*?表示出现0次或0次以上，此方法可以去掉双头标签(双头针对于残缺的标签)\n     * \"<.*?\"表示<尖括号后的所有字符，此方法可以去掉残缺的标签，及后面的内容\n     * \" \"，若有多种此种字符，可用同一方法去除\n     */\n    str = str.replace(/<style((.|\\n|\\r)*?)<\\/style>/g, '')\n    str = str.replace(/<script((.|\\n|\\r)*?)<\\/script>/g, '')\n    str = str.replace(/<[^>]*>/g, '');\n    str = str.replace(/&.*;/g, '');\n    str = str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    str = str.replace(/</g, \"\").replace(/>/g, \"\")\n    str = str.replace(/\"/g, \"\").replace(/'/g, \"\")\n    str = str.replace(/\\$/g, \"\")\n    // 下面是行内空格，不建议去除\n    str = str.replace(/\\s+/g, '');\n    str = str.toLowerCase();\n    return str;\n}"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,SAAS,GAAG,IAAIF,QAAQ,CAACG,SAAb,EAAlB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;EACzB,IAAIC,IAAI,GAAGJ,SAAS,CAACK,QAAV,CAAmBF,EAAnB,CAAX;EACA,OAAOG,eAAe,CAACF,IAAD,CAAtB;AACH;AAED;AACA;AACA;AACA;AACA;;AACA,SAASE,eAAT,CAAyBC,GAAzB,EAA8B;EAC1B,IAAIC,KAAK,GAAG,iDAAZ;EACA,OAAOD,GAAG,CAACE,UAAJ,CAAeD,KAAf,EAAsB,EAAtB,CAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASE,SAAT,CAAmBN,IAAnB,EAAyBO,MAAzB,EAAiCC,MAAjC,EAAyC;EAC5C,IAAIC,OAAO,GAAGC,UAAU,CAACV,IAAD,CAAxB;;EACA,IAAIS,OAAO,CAACF,MAAR,GAAiBA,MAArB,EAA6B;IACzB,OAAOE,OAAP;EACH;;EACD,IAAID,MAAJ,EAAY;IACR,OAAOC,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqBJ,MAArB,CAAP;EACH;;EACD,OAAOE,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqBJ,MAArB,IAA+B,KAAtC;AACH;AAED;AACA;AACA;AACA;AACA;;AACA,SAASG,UAAT,CAAoBP,GAApB,EAAyB;EACrB;AACJ;AACA;AACA;AACA;EACIA,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,+BAAZ,EAA6C,EAA7C,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,iCAAZ,EAA+C,EAA/C,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,OAAZ,EAAqB,EAArB,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,gBAAZ,EAA8B,EAA9B,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,EAAsBA,OAAtB,CAA8B,IAA9B,EAAoC,EAApC,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,EAAsBA,OAAtB,CAA8B,IAA9B,EAAoC,EAApC,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,CAAN,CAbqB,CAcrB;;EACAT,GAAG,GAAGA,GAAG,CAACS,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN;EACAT,GAAG,GAAGA,GAAG,CAACU,WAAJ,EAAN;EACA,OAAOV,GAAP;AACH"},"metadata":{},"sourceType":"module"}