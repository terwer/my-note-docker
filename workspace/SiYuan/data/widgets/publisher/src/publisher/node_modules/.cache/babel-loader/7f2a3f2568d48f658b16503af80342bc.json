{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n// Generated by CoffeeScript 1.10.0\n(function () {\n  var XMLCData,\n      XMLComment,\n      XMLDTDAttList,\n      XMLDTDElement,\n      XMLDTDEntity,\n      XMLDTDNotation,\n      XMLDeclaration,\n      XMLDocType,\n      XMLElement,\n      XMLProcessingInstruction,\n      XMLRaw,\n      XMLStreamWriter,\n      XMLText,\n      XMLWriterBase,\n      extend = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = function (superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.document = function (doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n\n          default:\n            results.push(this.element(child));\n        }\n      }\n\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function (att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function (node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function (node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function (node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n\n      this.stream.write('?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function (node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n\n        this.stream.write(']');\n      }\n\n      this.stream.write('>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function (node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n\n      if (node.children.length === 0 || node.children.every(function (e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write('/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n\n        this.stream.write(space + '</' + node.name + '>');\n      }\n\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function (node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n\n      return this.stream.write('?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function (node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function (node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function (node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function (node, level) {\n      return this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function (node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n\n      this.stream.write(' ' + node.name);\n\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function (node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function (node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n  }(XMLWriterBase);\n}).call(this);","map":{"version":3,"names":["XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStreamWriter","XMLText","XMLWriterBase","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","stream","options","document","doc","i","j","len","len1","ref","ref1","results","children","length","isLastRootNode","push","declaration","docType","comment","processingInstruction","element","attribute","att","write","name","value","cdata","node","level","space","text","endline","version","encoding","standalone","root","pubID","sysID","dtdAttList","dtdElement","dtdEntity","dtdNotation","Error","attributes","every","e","allowEmpty","pretty","newline","raw","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/xmlbuilder/lib/XMLStreamWriter.js"],"sourcesContent":["// Generated by CoffeeScript 1.10.0\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write('?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write('>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write('/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write('?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      return this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write('>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}