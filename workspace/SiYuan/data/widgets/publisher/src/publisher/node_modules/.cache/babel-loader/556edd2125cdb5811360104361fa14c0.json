{"ast":null,"code":"var Client = require('./client'),\n    Server = require('./server'),\n    CustomType = require('./customtype'),\n    dateFormatter = require('./date_formatter');\n\nvar xmlrpc = exports;\n/**\n * Creates an XML-RPC client.\n *\n * @param {Object} options - server options to make the HTTP request to\n *   - {String} host\n *   - {Number} port\n *   - {String} url\n *   - {Boolean} cookies\n * @return {Client}\n * @see Client\n */\n\nxmlrpc.createClient = function (options) {\n  return new Client(options, false);\n};\n/**\n * Creates an XML-RPC client that makes calls using HTTPS.\n *\n * @param {Object} options - server options to make the HTTP request to\n *   - {String} host\n *   - {Number} port\n *   - {String} url\n *   - {Boolean} cookies\n * @return {Client}\n * @see Client\n */\n\n\nxmlrpc.createSecureClient = function (options) {\n  return new Client(options, true);\n};\n/**\n * Creates an XML-RPC server.\n *\n * @param {Object}options - the HTTP server options\n *   - {String} host\n *   - {Number} port\n * @return {Server}\n * @see Server\n */\n\n\nxmlrpc.createServer = function (options, callback) {\n  return new Server(options, false, callback);\n};\n/**\n * Creates an XML-RPC server that uses HTTPS.\n *\n * @param {Object}options - the HTTP server options\n *   - {String} host\n *   - {Number} port\n * @return {Server}\n * @see Server\n */\n\n\nxmlrpc.createSecureServer = function (options, callback) {\n  return new Server(options, true, callback);\n};\n\nxmlrpc.CustomType = CustomType;\nxmlrpc.dateFormatter = dateFormatter;","map":{"version":3,"names":["Client","require","Server","CustomType","dateFormatter","xmlrpc","exports","createClient","options","createSecureClient","createServer","callback","createSecureServer"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/xmlrpc/lib/xmlrpc.js"],"sourcesContent":["var Client = require('./client')\n  , Server = require('./server')\n  , CustomType = require('./customtype')\n  , dateFormatter = require('./date_formatter')\n\nvar xmlrpc = exports\n\n/**\n * Creates an XML-RPC client.\n *\n * @param {Object} options - server options to make the HTTP request to\n *   - {String} host\n *   - {Number} port\n *   - {String} url\n *   - {Boolean} cookies\n * @return {Client}\n * @see Client\n */\nxmlrpc.createClient = function(options) {\n  return new Client(options, false)\n}\n\n/**\n * Creates an XML-RPC client that makes calls using HTTPS.\n *\n * @param {Object} options - server options to make the HTTP request to\n *   - {String} host\n *   - {Number} port\n *   - {String} url\n *   - {Boolean} cookies\n * @return {Client}\n * @see Client\n */\nxmlrpc.createSecureClient = function(options) {\n  return new Client(options, true)\n}\n\n/**\n * Creates an XML-RPC server.\n *\n * @param {Object}options - the HTTP server options\n *   - {String} host\n *   - {Number} port\n * @return {Server}\n * @see Server\n */\nxmlrpc.createServer = function(options, callback) {\n  return new Server(options, false, callback)\n}\n\n/**\n * Creates an XML-RPC server that uses HTTPS.\n *\n * @param {Object}options - the HTTP server options\n *   - {String} host\n *   - {Number} port\n * @return {Server}\n * @see Server\n */\nxmlrpc.createSecureServer = function(options, callback) {\n  return new Server(options, true, callback)\n}\n\nxmlrpc.CustomType = CustomType\nxmlrpc.dateFormatter = dateFormatter\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAApB;AAAA,IACIC,MAAM,GAAGD,OAAO,CAAC,UAAD,CADpB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,cAAD,CAFxB;AAAA,IAGIG,aAAa,GAAGH,OAAO,CAAC,kBAAD,CAH3B;;AAKA,IAAII,MAAM,GAAGC,OAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,MAAM,CAACE,YAAP,GAAsB,UAASC,OAAT,EAAkB;EACtC,OAAO,IAAIR,MAAJ,CAAWQ,OAAX,EAAoB,KAApB,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,MAAM,CAACI,kBAAP,GAA4B,UAASD,OAAT,EAAkB;EAC5C,OAAO,IAAIR,MAAJ,CAAWQ,OAAX,EAAoB,IAApB,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAH,MAAM,CAACK,YAAP,GAAsB,UAASF,OAAT,EAAkBG,QAAlB,EAA4B;EAChD,OAAO,IAAIT,MAAJ,CAAWM,OAAX,EAAoB,KAApB,EAA2BG,QAA3B,CAAP;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAN,MAAM,CAACO,kBAAP,GAA4B,UAASJ,OAAT,EAAkBG,QAAlB,EAA4B;EACtD,OAAO,IAAIT,MAAJ,CAAWM,OAAX,EAAoB,IAApB,EAA0BG,QAA1B,CAAP;AACD,CAFD;;AAIAN,MAAM,CAACF,UAAP,GAAoBA,UAApB;AACAE,MAAM,CAACD,aAAP,GAAuBA,aAAvB"},"metadata":{},"sourceType":"script"}