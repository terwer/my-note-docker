{"ast":null,"code":"// const nconf = require('nconf');\n// const path = require('path')\n// const resolve = (dir) => path.join(__dirname, dir)\nexport function getConf(key) {\n  // const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n  // const dir = parent.window.siyuan.config.system.dataDir + \"/widgets/publisher\"\n  // console.log(\"dir=>\", dir)\n  // nconf.use('file', {file: confPath, dir: dir});\n  // nconf.file({file: confPath, dir: \"./\"});\n  return localStorage.get(key);\n} //\n// export async function setConf(key, value) {\n//     const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath, dir: \"./\"});\n//\n//     return new Promise((resolve, reject) => {\n//         nconf.set(key, value)\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }\n// export async function setConfList(confList) {\n//     if (!confList || confList.length === 0) {\n//         console.error(\"conf cannot be empty\")\n//         return\n//     }\n//\n//     const confPath = resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath});\n//\n//     return new Promise((resolve, reject) => {\n//         for (let i = 0; i < confList.length; i++) {\n//             const conf = confList[i];\n//             nconf.set(conf.key, conf.value)\n//         }\n//\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }","map":{"version":3,"names":["getConf","key","localStorage","get"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/config.js"],"sourcesContent":["// const nconf = require('nconf');\n// const path = require('path')\n// const resolve = (dir) => path.join(__dirname, dir)\n\nexport function getConf(key) {\n    // const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n    // const dir = parent.window.siyuan.config.system.dataDir + \"/widgets/publisher\"\n    // console.log(\"dir=>\", dir)\n    // nconf.use('file', {file: confPath, dir: dir});\n\n    // nconf.file({file: confPath, dir: \"./\"});\n\n    return localStorage.get(key)\n}\n\n//\n// export async function setConf(key, value) {\n//     const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath, dir: \"./\"});\n//\n//     return new Promise((resolve, reject) => {\n//         nconf.set(key, value)\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }\n\n// export async function setConfList(confList) {\n//     if (!confList || confList.length === 0) {\n//         console.error(\"conf cannot be empty\")\n//         return\n//     }\n//\n//     const confPath = resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath});\n//\n//     return new Promise((resolve, reject) => {\n//         for (let i = 0; i < confList.length; i++) {\n//             const conf = confList[i];\n//             nconf.set(conf.key, conf.value)\n//         }\n//\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }"],"mappings":"AAAA;AACA;AACA;AAEA,OAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EACzB;EACA;EACA;EACA;EAEA;EAEA,OAAOC,YAAY,CAACC,GAAb,CAAiBF,GAAjB,CAAP;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}