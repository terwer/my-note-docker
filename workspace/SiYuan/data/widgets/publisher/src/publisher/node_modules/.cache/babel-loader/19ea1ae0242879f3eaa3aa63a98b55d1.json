{"ast":null,"code":"/*jslint node: true */\n'use strict';\n\nvar bulkReplace = require(\"bulk-replace\");\n\nvar hiraganaMonographs = {\n  \"あ\": \"A\",\n  \"い\": \"I\",\n  \"う\": \"U\",\n  \"え\": \"E\",\n  \"お\": \"O\",\n  \"か\": \"KA\",\n  \"き\": \"KI\",\n  \"く\": \"KU\",\n  \"け\": \"KE\",\n  \"こ\": \"KO\",\n  \"さ\": \"SA\",\n  \"し\": \"SHI\",\n  \"す\": \"SU\",\n  \"せ\": \"SE\",\n  \"そ\": \"SO\",\n  \"た\": \"TA\",\n  \"ち\": \"CHI\",\n  \"つ\": \"TSU\",\n  \"て\": \"TE\",\n  \"と\": \"TO\",\n  \"な\": \"NA\",\n  \"に\": \"NI\",\n  \"ぬ\": \"NU\",\n  \"ね\": \"NE\",\n  \"の\": \"NO\",\n  \"は\": \"HA\",\n  \"ひ\": \"HI\",\n  \"ふ\": \"FU\",\n  \"へ\": \"HE\",\n  \"ほ\": \"HO\",\n  \"ま\": \"MA\",\n  \"み\": \"MI\",\n  \"む\": \"MU\",\n  \"め\": \"ME\",\n  \"も\": \"MO\",\n  \"や\": \"YA\",\n  \"ゆ\": \"YU\",\n  \"よ\": \"YO\",\n  \"ら\": \"RA\",\n  \"り\": \"RI\",\n  \"る\": \"RU\",\n  \"れ\": \"RE\",\n  \"ろ\": \"RO\",\n  \"わ\": \"WA\",\n  \"ゐ\": \"WI\",\n  \"ゑ\": \"WE\",\n  \"を\": \"WO\",\n  \"ん\": \"N'\",\n  \"が\": \"GA\",\n  \"ぎ\": \"GI\",\n  \"ぐ\": \"GU\",\n  \"げ\": \"GE\",\n  \"ご\": \"GO\",\n  \"ざ\": \"ZA\",\n  \"じ\": \"JI\",\n  \"ず\": \"ZU\",\n  \"ぜ\": \"ZE\",\n  \"ぞ\": \"ZO\",\n  \"だ\": \"DA\",\n  \"ぢ\": \"DJI\",\n  \"づ\": \"DZU\",\n  \"で\": \"DE\",\n  \"ど\": \"DO\",\n  \"ば\": \"BA\",\n  \"び\": \"BI\",\n  \"ぶ\": \"BU\",\n  \"べ\": \"BE\",\n  \"ぼ\": \"BO\",\n  \"ぱ\": \"PA\",\n  \"ぴ\": \"PI\",\n  \"ぷ\": \"PU\",\n  \"ぺ\": \"PE\",\n  \"ぽ\": \"PO\"\n};\nvar hiraganaDigraphs = {\n  \"きゃ\": \"KYA\",\n  \"きゅ\": \"KYU\",\n  \"きょ\": \"KYO\",\n  \"しゃ\": \"SHA\",\n  \"しゅ\": \"SHU\",\n  \"しょ\": \"SHO\",\n  \"ちゃ\": \"CHA\",\n  \"ちゅ\": \"CHU\",\n  \"ちょ\": \"CHO\",\n  \"にゃ\": \"NYA\",\n  \"にゅ\": \"NYU\",\n  \"にょ\": \"NYO\",\n  \"ひゃ\": \"HYA\",\n  \"ひゅ\": \"HYU\",\n  \"ひょ\": \"HYO\",\n  \"みゃ\": \"MYA\",\n  \"みゅ\": \"MYU\",\n  \"みょ\": \"MYO\",\n  \"りゃ\": \"RYA\",\n  \"りゅ\": \"RYU\",\n  \"りょ\": \"RYO\",\n  \"ぎゃ\": \"GYA\",\n  \"ぎゅ\": \"GYU\",\n  \"ぎょ\": \"GYO\",\n  \"じゃ\": \"JA\",\n  \"じゅ\": \"JU\",\n  \"じょ\": \"JO\",\n  \"びゃ\": \"BYA\",\n  \"びゅ\": \"BYU\",\n  \"びょ\": \"BYO\",\n  \"ぴゃ\": \"PYA\",\n  \"ぴゅ\": \"PYU\",\n  \"ぴょ\": \"PYO\"\n};\nvar katakanaMonographs = {\n  \"ア\": \"A\",\n  \"イ\": \"I\",\n  \"ウ\": \"U\",\n  \"エ\": \"E\",\n  \"オ\": \"O\",\n  \"カ\": \"KA\",\n  \"キ\": \"KI\",\n  \"ク\": \"KU\",\n  \"ケ\": \"KE\",\n  \"コ\": \"KO\",\n  \"サ\": \"SA\",\n  \"シ\": \"SHI\",\n  \"ス\": \"SU\",\n  \"セ\": \"SE\",\n  \"ソ\": \"SO\",\n  \"タ\": \"TA\",\n  \"チ\": \"CHI\",\n  \"ツ\": \"TSU\",\n  \"テ\": \"TE\",\n  \"ト\": \"TO\",\n  \"ナ\": \"NA\",\n  \"ニ\": \"NI\",\n  \"ヌ\": \"NU\",\n  \"ネ\": \"NE\",\n  \"ノ\": \"NO\",\n  \"ハ\": \"HA\",\n  \"ヒ\": \"HI\",\n  \"フ\": \"FU\",\n  \"ヘ\": \"HE\",\n  \"ホ\": \"HO\",\n  \"マ\": \"MA\",\n  \"ミ\": \"MI\",\n  \"ム\": \"MU\",\n  \"メ\": \"ME\",\n  \"モ\": \"MO\",\n  \"ヤ\": \"YA\",\n  \"ユ\": \"YU\",\n  \"ヨ\": \"YO\",\n  \"ラ\": \"RA\",\n  \"リ\": \"RI\",\n  \"ル\": \"RU\",\n  \"レ\": \"RE\",\n  \"ロ\": \"RO\",\n  \"ワ\": \"WA\",\n  \"ヰ\": \"WI\",\n  \"ヱ\": \"WE\",\n  \"ヲ\": \"WO\",\n  \"ン\": \"N\",\n  \"ガ\": \"GA\",\n  \"ギ\": \"GI\",\n  \"グ\": \"GU\",\n  \"ゲ\": \"GE\",\n  \"ゴ\": \"GO\",\n  \"ザ\": \"ZA\",\n  \"ジ\": \"JI\",\n  \"ズ\": \"ZU\",\n  \"ゼ\": \"ZE\",\n  \"ゾ\": \"ZO\",\n  \"ダ\": \"DA\",\n  \"ヂ\": \"DJI\",\n  \"ヅ\": \"DZU\",\n  \"デ\": \"DE\",\n  \"ド\": \"DO\",\n  \"バ\": \"BA\",\n  \"ビ\": \"BI\",\n  \"ブ\": \"BU\",\n  \"ベ\": \"BE\",\n  \"ボ\": \"BO\",\n  \"パ\": \"PA\",\n  \"ピ\": \"PI\",\n  \"プ\": \"PU\",\n  \"ペ\": \"PE\",\n  \"ポ\": \"PO\"\n};\nvar katakanaDigraphs = {\n  \"アー\": \"Ā\",\n  \"イー\": \"Ī\",\n  \"ウー\": \"Ū\",\n  \"エー\": \"Ē\",\n  \"オー\": \"Ō\",\n  \"カー\": \"KĀ\",\n  \"キー\": \"KĪ\",\n  \"クー\": \"KŪ\",\n  \"ケー\": \"KĒ\",\n  \"コー\": \"KŌ\",\n  \"サー\": \"SĀ\",\n  \"シー\": \"SHĪ\",\n  \"スー\": \"SŪ\",\n  \"セー\": \"SĒ\",\n  \"ソー\": \"SŌ\",\n  \"ター\": \"TĀ\",\n  \"チー\": \"CHĪ\",\n  \"ツー\": \"TSŪ\",\n  \"テー\": \"TĒ\",\n  \"トー\": \"TŌ\",\n  \"ナー\": \"NĀ\",\n  \"ニー\": \"NĪ\",\n  \"ヌー\": \"NŪ\",\n  \"ネー\": \"NĒ\",\n  \"ノー\": \"NŌ\",\n  \"ハー\": \"HĀ\",\n  \"ヒー\": \"HĪ\",\n  \"フー\": \"FŪ\",\n  \"ヘー\": \"HĒ\",\n  \"ホー\": \"HŌ\",\n  \"マー\": \"MĀ\",\n  \"ミー\": \"MĪ\",\n  \"ムー\": \"MŪ\",\n  \"メー\": \"MĒ\",\n  \"モー\": \"MŌ\",\n  \"ヤー\": \"YĀ\",\n  \"ユー\": \"YŪ\",\n  \"ヨー\": \"YŌ\",\n  \"ラー\": \"RĀ\",\n  \"リー\": \"RĪ\",\n  \"ルー\": \"RŪ\",\n  \"レー\": \"RĒ\",\n  \"ロー\": \"RŌ\",\n  \"ワー\": \"WĀ\",\n  \"ヰー\": \"WĪ\",\n  \"ヱー\": \"WĒ\",\n  \"ヲー\": \"WŌ\",\n  \"ンー\": \"N\",\n  \"ガー\": \"GĀ\",\n  \"ギー\": \"GĪ\",\n  \"グー\": \"GŪ\",\n  \"ゲー\": \"GĒ\",\n  \"ゴー\": \"GŌ\",\n  \"ザー\": \"ZĀ\",\n  \"ジー\": \"JĪ\",\n  \"ズー\": \"ZŪ\",\n  \"ゼー\": \"ZĒ\",\n  \"ゾー\": \"ZŌ\",\n  \"ダー\": \"DĀ\",\n  \"ヂー\": \"DJĪ\",\n  \"ヅー\": \"DZŪ\",\n  \"デー\": \"DĒ\",\n  \"ドー\": \"DŌ\",\n  \"バー\": \"BĀ\",\n  \"ビー\": \"BĪ\",\n  \"ブー\": \"BŪ\",\n  \"ベー\": \"BĒ\",\n  \"ボー\": \"BŌ\",\n  \"パー\": \"PĀ\",\n  \"ピー\": \"PĪ\",\n  \"プー\": \"PŪ\",\n  \"ペー\": \"PĒ\",\n  \"ポー\": \"PŌ\",\n  \"キャ\": \"KYA\",\n  \"キュ\": \"KYU\",\n  \"キョ\": \"KYO\",\n  \"シャ\": \"SHA\",\n  \"シュ\": \"SHU\",\n  \"ショ\": \"SHO\",\n  \"チャ\": \"CHA\",\n  \"チュ\": \"CHU\",\n  \"チョ\": \"CHO\",\n  \"ニャ\": \"NYA\",\n  \"ニュ\": \"NYU\",\n  \"ニョ\": \"NYO\",\n  \"ヒャ\": \"HYA\",\n  \"ヒュ\": \"HYU\",\n  \"ヒョ\": \"HYO\",\n  \"ミャ\": \"MYA\",\n  \"ミュ\": \"MYU\",\n  \"ミョ\": \"MYO\",\n  \"リャ\": \"RYA\",\n  \"リュ\": \"RYU\",\n  \"リョ\": \"RYO\",\n  \"ギャ\": \"GYA\",\n  \"ギュ\": \"GYU\",\n  \"ギョ\": \"GYO\",\n  \"ジャ\": \"JA\",\n  \"ジュ\": \"JU\",\n  \"ジョ\": \"JO\",\n  \"ビャ\": \"BYA\",\n  \"ビュ\": \"BYU\",\n  \"ビョ\": \"BYO\",\n  \"ピャ\": \"PYA\",\n  \"ピュ\": \"PYU\",\n  \"ピョ\": \"PYO\",\n  \"クヮ\": \"KWA\",\n  \"クィ\": \"KWI\",\n  \"クェ\": \"KWE\",\n  \"クォ\": \"KWO\",\n  \"グヮ\": \"GWA\",\n  \"スィ\": \"SI\",\n  \"シェ\": \"SHE\",\n  \"ズィ\": \"ZI\",\n  \"ジェ\": \"JE\",\n  \"ティ\": \"TI\",\n  \"トゥ\": \"TU\",\n  \"テュ\": \"TYU\",\n  \"チェ\": \"CHE\",\n  \"ツァ\": \"TSA\",\n  \"ツィ\": \"TSI\",\n  \"ツェ\": \"TSE\",\n  \"ツォ\": \"TSO\",\n  \"ディ\": \"DI\",\n  \"ドゥ\": \"DU\",\n  \"デュ\": \"DYU\",\n  \"ホゥ\": \"HU\",\n  \"ファ\": \"FA\",\n  \"フィ\": \"FI\",\n  \"フェ\": \"FE\",\n  \"フォ\": \"FO\",\n  \"フュ\": \"FYU\",\n  \"イィ\": \"YI\",\n  \"イェ\": \"YE\",\n  \"ウィ\": \"WI\",\n  \"ウゥ\": \"WU\",\n  \"ウェ\": \"WE\",\n  \"ウォ\": \"WO\",\n  \"ヴァ\": \"VA\",\n  \"ヴィ\": \"VI\",\n  \"ヴ\": \"VU\",\n  \"ヴェ\": \"VE\",\n  \"ヴォ\": \"VO\",\n  \"ヴュ\": \"VYU\"\n};\nvar katakanaTrigraphs = {\n  \"キャー\": \"KYĀ\",\n  \"キュー\": \"KYŪ\",\n  \"キョー\": \"KYŌ\",\n  \"シャー\": \"SHĀ\",\n  \"シュー\": \"SHŪ\",\n  \"ショー\": \"SHŌ\",\n  \"チャー\": \"CHĀ\",\n  \"チュー\": \"CHŪ\",\n  \"チョー\": \"CHŌ\",\n  \"ニャー\": \"NYĀ\",\n  \"ニュー\": \"NYŪ\",\n  \"ニョー\": \"NYŌ\",\n  \"ヒャー\": \"HYĀ\",\n  \"ヒュー\": \"HYŪ\",\n  \"ヒョー\": \"HYŌ\",\n  \"ミャー\": \"MYĀ\",\n  \"ミュー\": \"MYŪ\",\n  \"ミョー\": \"MYŌ\",\n  \"リャー\": \"RYĀ\",\n  \"リュー\": \"RYŪ\",\n  \"リョー\": \"RYŌ\",\n  \"ギャー\": \"GYĀ\",\n  \"ギュー\": \"GYŪ\",\n  \"ギョー\": \"GYŌ\",\n  \"ジャー\": \"JĀ\",\n  \"ジュー\": \"JŪ\",\n  \"ジョー\": \"JŌ\",\n  \"ビャー\": \"BYĀ\",\n  \"ビュー\": \"BYŪ\",\n  \"ビョー\": \"BYŌ\",\n  \"ピャー\": \"PYĀ\",\n  \"ピュー\": \"PYŪ\",\n  \"ピョー\": \"PYŌ\"\n};\nvar katakanaHalfwidths = {\n  \"ｱ\": \"ア\",\n  \"ｲ\": \"イ\",\n  \"ｳ\": \"ウ\",\n  \"ｴ\": \"エ\",\n  \"ｵ\": \"オ\",\n  \"ｶ\": \"カ\",\n  \"ｷ\": \"キ\",\n  \"ｸ\": \"ク\",\n  \"ｹ\": \"ケ\",\n  \"ｺ\": \"コ\",\n  \"ｻ\": \"サ\",\n  \"ｼ\": \"シ\",\n  \"ｽ\": \"ス\",\n  \"ｾ\": \"セ\",\n  \"ｿ\": \"ソ\",\n  \"ﾀ\": \"タ\",\n  \"ﾁ\": \"チ\",\n  \"ﾂ\": \"ツ\",\n  \"ﾃ\": \"テ\",\n  \"ﾄ\": \"ト\",\n  \"ﾅ\": \"ナ\",\n  \"ﾆ\": \"ニ\",\n  \"ﾇ\": \"ヌ\",\n  \"ﾈ\": \"ネ\",\n  \"ﾉ\": \"ノ\",\n  \"ﾊ\": \"ハ\",\n  \"ﾋ\": \"ヒ\",\n  \"ﾌ\": \"フ\",\n  \"ﾍ\": \"ヘ\",\n  \"ﾎ\": \"ホ\",\n  \"ﾏ\": \"マ\",\n  \"ﾐ\": \"ミ\",\n  \"ﾑ\": \"ム\",\n  \"ﾒ\": \"メ\",\n  \"ﾓ\": \"モ\",\n  \"ﾔ\": \"ヤ\",\n  \"ﾕ\": \"ユ\",\n  \"ﾖ\": \"ヨ\",\n  \"ﾗ\": \"ラ\",\n  \"ﾘ\": \"リ\",\n  \"ﾙ\": \"ル\",\n  \"ﾚ\": \"レ\",\n  \"ﾛ\": \"ロ\",\n  \"ﾜ\": \"ワ\",\n  \"ｦ\": \"ヲ\",\n  \"ﾝ\": \"ン\",\n  \"ｶﾞ\": \"ガ\",\n  \"ｷﾞ\": \"ギ\",\n  \"ｸﾞ\": \"グ\",\n  \"ｹﾞ\": \"ゲ\",\n  \"ｺﾞ\": \"ゴ\",\n  \"ｻﾞ\": \"ザ\",\n  \"ｼﾞ\": \"ジ\",\n  \"ｽﾞ\": \"ズ\",\n  \"ｾﾞ\": \"ゼ\",\n  \"ｿﾞ\": \"ゾ\",\n  \"ﾀﾞ\": \"ダ\",\n  \"ﾁﾞ\": \"ヂ\",\n  \"ﾂﾞ\": \"ヅ\",\n  \"ﾃﾞ\": \"デ\",\n  \"ﾄﾞ\": \"ド\",\n  \"ﾊﾞ\": \"バ\",\n  \"ﾋﾞ\": \"ビ\",\n  \"ﾌﾞ\": \"ブ\",\n  \"ﾍﾞ\": \"ベ\",\n  \"ﾎﾞ\": \"ボ\",\n  \"ﾊﾟ\": \"パ\",\n  \"ﾋﾟ\": \"ピ\",\n  \"ﾌﾟ\": \"プ\",\n  \"ﾍﾟ\": \"ペ\",\n  \"ﾎﾟ\": \"ポ\",\n  \"ｧ\": \"ァ\",\n  \"ｨ\": \"ィ\",\n  \"ｩ\": \"ゥ\",\n  \"ｪ\": \"ェ\",\n  \"ｫ\": \"ォ\",\n  \"ｬ\": \"ャ\",\n  \"ｭ\": \"ュ\",\n  \"ｮ\": \"ョ\",\n  \"ｯ\": \"ッ\",\n  \"ｰ\": \"ー\"\n};\nvar katakanaHalfwidthsCombined = {\n  \"ｶﾞ\": \"ガ\",\n  \"ｷﾞ\": \"ギ\",\n  \"ｸﾞ\": \"グ\",\n  \"ｹﾞ\": \"ゲ\",\n  \"ｺﾞ\": \"ゴ\",\n  \"ｻﾞ\": \"ザ\",\n  \"ｼﾞ\": \"ジ\",\n  \"ｽﾞ\": \"ズ\",\n  \"ｾﾞ\": \"ゼ\",\n  \"ｿﾞ\": \"ゾ\",\n  \"ﾀﾞ\": \"ダ\",\n  \"ﾁﾞ\": \"ヂ\",\n  \"ﾂﾞ\": \"ヅ\",\n  \"ﾃﾞ\": \"デ\",\n  \"ﾄﾞ\": \"ド\",\n  \"ﾊﾞ\": \"バ\",\n  \"ﾋﾞ\": \"ビ\",\n  \"ﾌﾞ\": \"ブ\",\n  \"ﾍﾞ\": \"ベ\",\n  \"ﾎﾞ\": \"ボ\",\n  \"ﾊﾟ\": \"パ\",\n  \"ﾋﾟ\": \"ピ\",\n  \"ﾌﾟ\": \"プ\",\n  \"ﾍﾟ\": \"ペ\",\n  \"ﾎﾟ\": \"ポ\"\n};\nvar choonpu = \"ー\";\nvar yoonHiragana = \"ぁぃぅぇぉゃゅょゎゕ\";\nvar yoonKatakana = \"ァィゥェォャュョヮヵ\";\nvar sokuonHiragana = \"っ\";\nvar sokuonKatakana = \"ッ\";\nvar sokuons = sokuonKatakana + sokuonHiragana;\nvar katakanaSplitCombinators = choonpu + yoonKatakana + sokuonKatakana;\nvar hiraganaSplitCombinators = choonpu + yoonHiragana + sokuonHiragana;\nvar kanaSplitCombinators = katakanaSplitCombinators + hiraganaSplitCombinators; // Used to convert old Nihon-Shiki style romaji into the modern Hepburn form.\n// Source: http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\n\nvar nihonShiki = {\n  \"SI\": \"SHI\",\n  \"ZI\": \"JI\",\n  \"TI\": \"CHI\",\n  \"DI\": \"JI\",\n  \"TU\": \"TSU\",\n  \"DU\": \"ZU\",\n  \"SHU\": \"SHU\",\n  // Prevent HU from accidentally converting\n  \"CHU\": \"CHU\",\n  \"HU\": \"FU\",\n  \"CYA\": \"CHA\",\n  \"CYO\": \"CHO\",\n  \"CYU\": \"CHU\",\n  \"CHY\": \"CH\",\n  \"SYA\": \"SHA\",\n  \"SYU\": \"SHU\",\n  \"SYO\": \"SHO\",\n  \"SHY\": \"SH\",\n  \"ZYA\": \"JA\",\n  \"ZYU\": \"JU\",\n  \"ZYO\": \"JO\",\n  \"TYA\": \"CHA\",\n  \"TYU\": \"CHU\",\n  \"TYO\": \"CHO\",\n  \"DYA\": \"JA\",\n  \"DYU\": \"JU\",\n  \"DYO\": \"JO\"\n}; // For use with toHiragana\n\nvar hiraganaMap = {};\nObject.keys(hiraganaMonographs).forEach(function (key) {\n  var value = hiraganaMonographs[key];\n\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\nObject.keys(hiraganaDigraphs).forEach(function (key) {\n  var value = hiraganaDigraphs[key];\n\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\nvar hiraganaRegex = new RegExp(Object.keys(hiraganaMap).sort(function (a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\"); // For use with toKatakana\n\nvar katakanaMap = {};\nObject.keys(katakanaMonographs).forEach(function (key) {\n  var value = katakanaMonographs[key];\n\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\nObject.keys(katakanaDigraphs).forEach(function (key) {\n  var value = katakanaDigraphs[key];\n\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\nObject.keys(katakanaTrigraphs).forEach(function (key) {\n  var value = katakanaTrigraphs[key];\n\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\nvar katakanaRegex = new RegExp(Object.keys(katakanaMap).sort(function (a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\"); // API\n\nexports.fromKana = function (str) {\n  // Initial transliteration\n  str = bulkReplace(str, katakanaHalfwidthsCombined);\n  str = bulkReplace(str, katakanaHalfwidths);\n  str = bulkReplace(str, hiraganaDigraphs);\n  str = bulkReplace(str, katakanaDigraphs);\n  str = bulkReplace(str, hiraganaMonographs);\n  str = bulkReplace(str, katakanaMonographs); // Correct use of sokuon\n\n  str = str.replace(/[っッ]C/g, \"TC\").replace(/[っッ](.)/g, \"$1$1\"); // Correct usage of N' (M' is a common mistake)\n\n  str = str.replace(/[NM]'([^YAEIOU]|$)/g, \"N$1\"); // Correct use of choonpu\n\n  str = str.replace(/Aー/g, \"Ā\");\n  str = str.replace(/Iー/g, \"Ī\");\n  str = str.replace(/Uー/g, \"Ū\");\n  str = str.replace(/Eー/g, \"Ē\");\n  str = str.replace(/Oー/g, \"Ō\");\n  return str;\n};\n\nexports.toHiragana = function (str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase(); // Correct use of sokuon\n\n  str = str.replace(/TC/g, \"っC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"っ$1\"); // Transliteration\n\n  str = bulkReplace(str, hiraganaRegex, hiraganaMap); // Fix any remaining N/M usage (that isn't a N' usage)\n\n  str = str.replace(/N|M/g, \"ん\");\n  return str;\n};\n\nexports.toKatakana = function (str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase(); // Correct use of sokuon\n\n  str = str.replace(/TC/g, \"ッC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"ッ$1\"); // Transliteration\n\n  str = bulkReplace(str, katakanaRegex, katakanaMap); // Fix any remaining N/M usage (that isn't a N' usage)\n\n  str = str.replace(/N|M/g, \"ン\");\n  return str;\n};\n\nexports.cleanRomaji = function (str) {\n  // Follows many of the suggestions from:\n  // http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\n  // All conversion is done in upper-case\n  str = str.toUpperCase(); // Should be using N instead of M\n\n  str = str.replace(/(\\w)M([^AEIOUY]|$)/g, \"$1N$2\"); // Convert the NN form into the more common N'\n\n  str = str.replace(/NN/g, \"N'\"); // Convert usage of OU into the more common OO\n  // Handle cases like Toukyou\n\n  str = str.replace(/OU/g, \"OO\"); // Fix antiquated usage of OH to mean OO\n  // (handle ambiguous cases like 'Kohusai' vs. 'Tohkyoh')\n\n  str = str.replace(/OH([^AIEO]|$)/g, \"OO$1\"); // Replace old Nihon-shiki usage with modern Hepburn form\n\n  str = bulkReplace(str, nihonShiki);\n  return str;\n};\n\nexports.splitKana = function (str) {\n  return str.split(\"\").reduce(function (r, h) {\n    // if current kana is a combinator\n    // or previous syllable and current character both aren't kanas\n    // then merge with previous syllable if any\n    if (r[r.length - 1] && h.trim() && (kanaSplitCombinators.includes(h) || !exports.containsHiragana(r[r.length - 1]) && !exports.containsKatakana(r[r.length - 1]) && !exports.containsHiragana(h) && !exports.containsKatakana(h))) {\n      r[r.length - 1] += h;\n    } else {\n      r.push(h);\n    }\n\n    return r;\n  }, []);\n}; // known issue: unclean romaji might get too chopped up\n// e.g. \"CHYA\" becomes [\"C\", \"HYA\"]\n\n\nexports.splitRomaji = function (str) {\n  return exports.splitKana(exports.toKatakana(str)).map((k, i, ks) => {\n    // if syllable's last character is a sokuon\n    // add the first letter of the following syllable if any\n    // to the end of current syllable\n    if (i < ks.length - 1 && sokuons.includes(k.slice(-1)[0])) {\n      const next = ks[i + 1];\n      const nextRomaji = exports.containsHiragana(next) || exports.containsKatakana(next) ? exports.fromKana(next) : next;\n      var nextLetter = nextRomaji[0]; // correct CC/TC use of sokuon\n\n      if (nextLetter === 'C') {\n        nextLetter = 'T';\n      }\n\n      const r = exports.fromKana(k.slice(0, -1)) + nextLetter;\n      return r;\n    }\n\n    return exports.fromKana(k);\n  });\n};\n\nexports.containsHiragana = function (str) {\n  return new RegExp(Object.keys(hiraganaMonographs).join('|')).test(str);\n};\n\nexports.containsKatakana = function (str) {\n  return new RegExp(Object.keys(katakanaMonographs).join('|')).test(str) || new RegExp(Object.keys(katakanaHalfwidths).join('|')).test(str);\n};\n\nexports.containsKana = function (str) {\n  return exports.containsHiragana(str) || exports.containsKatakana(str);\n};\n\nexports.containsKanji = function (str) {\n  return new RegExp(/[\\u4e00-\\u9fcf\\uf900-\\ufaff\\u3400-\\u4dbf]/).test(str);\n};","map":{"version":3,"names":["bulkReplace","require","hiraganaMonographs","hiraganaDigraphs","katakanaMonographs","katakanaDigraphs","katakanaTrigraphs","katakanaHalfwidths","katakanaHalfwidthsCombined","choonpu","yoonHiragana","yoonKatakana","sokuonHiragana","sokuonKatakana","sokuons","katakanaSplitCombinators","hiraganaSplitCombinators","kanaSplitCombinators","nihonShiki","hiraganaMap","Object","keys","forEach","key","value","hiraganaRegex","RegExp","sort","a","b","length","join","katakanaMap","katakanaRegex","exports","fromKana","str","replace","toHiragana","toUpperCase","toKatakana","cleanRomaji","splitKana","split","reduce","r","h","trim","includes","containsHiragana","containsKatakana","push","splitRomaji","map","k","i","ks","slice","next","nextRomaji","nextLetter","test","containsKana","containsKanji"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/hepburn/lib/hepburn.js"],"sourcesContent":["/*jslint node: true */\n'use strict';\n\nvar bulkReplace = require(\"bulk-replace\");\n\nvar hiraganaMonographs = {\n  \"あ\": \"A\", \"い\": \"I\", \"う\": \"U\", \"え\": \"E\", \"お\": \"O\",\n  \"か\": \"KA\", \"き\": \"KI\", \"く\": \"KU\", \"け\": \"KE\", \"こ\": \"KO\",\n  \"さ\": \"SA\", \"し\": \"SHI\", \"す\": \"SU\", \"せ\": \"SE\", \"そ\": \"SO\",\n  \"た\": \"TA\", \"ち\": \"CHI\", \"つ\": \"TSU\", \"て\": \"TE\", \"と\": \"TO\",\n  \"な\": \"NA\", \"に\": \"NI\", \"ぬ\": \"NU\", \"ね\": \"NE\", \"の\": \"NO\",\n  \"は\": \"HA\", \"ひ\": \"HI\", \"ふ\": \"FU\", \"へ\": \"HE\", \"ほ\": \"HO\",\n  \"ま\": \"MA\", \"み\": \"MI\", \"む\": \"MU\", \"め\": \"ME\", \"も\": \"MO\",\n  \"や\": \"YA\", \"ゆ\": \"YU\", \"よ\": \"YO\",\n  \"ら\": \"RA\", \"り\": \"RI\", \"る\": \"RU\", \"れ\": \"RE\", \"ろ\": \"RO\",\n  \"わ\": \"WA\", \"ゐ\": \"WI\", \"ゑ\": \"WE\", \"を\": \"WO\", \"ん\": \"N'\",\n  \"が\": \"GA\", \"ぎ\": \"GI\", \"ぐ\": \"GU\", \"げ\": \"GE\", \"ご\": \"GO\",\n  \"ざ\": \"ZA\", \"じ\": \"JI\", \"ず\": \"ZU\", \"ぜ\": \"ZE\", \"ぞ\": \"ZO\",\n  \"だ\": \"DA\", \"ぢ\": \"DJI\", \"づ\": \"DZU\", \"で\": \"DE\", \"ど\": \"DO\",\n  \"ば\": \"BA\", \"び\": \"BI\", \"ぶ\": \"BU\", \"べ\": \"BE\", \"ぼ\": \"BO\",\n  \"ぱ\": \"PA\", \"ぴ\": \"PI\", \"ぷ\": \"PU\", \"ぺ\": \"PE\", \"ぽ\": \"PO\"\n};\n\nvar hiraganaDigraphs = {\n  \"きゃ\": \"KYA\", \"きゅ\": \"KYU\", \"きょ\": \"KYO\",\n  \"しゃ\": \"SHA\", \"しゅ\": \"SHU\", \"しょ\": \"SHO\",\n  \"ちゃ\": \"CHA\", \"ちゅ\": \"CHU\", \"ちょ\": \"CHO\",\n  \"にゃ\": \"NYA\", \"にゅ\": \"NYU\", \"にょ\": \"NYO\",\n  \"ひゃ\": \"HYA\", \"ひゅ\": \"HYU\", \"ひょ\": \"HYO\",\n  \"みゃ\": \"MYA\", \"みゅ\": \"MYU\", \"みょ\": \"MYO\",\n  \"りゃ\": \"RYA\", \"りゅ\": \"RYU\", \"りょ\": \"RYO\",\n  \"ぎゃ\": \"GYA\", \"ぎゅ\": \"GYU\", \"ぎょ\": \"GYO\",\n  \"じゃ\": \"JA\", \"じゅ\": \"JU\", \"じょ\": \"JO\",\n  \"びゃ\": \"BYA\", \"びゅ\": \"BYU\", \"びょ\": \"BYO\",\n  \"ぴゃ\": \"PYA\", \"ぴゅ\": \"PYU\", \"ぴょ\": \"PYO\"\n};\n\nvar katakanaMonographs = {\n  \"ア\": \"A\", \"イ\": \"I\", \"ウ\": \"U\", \"エ\": \"E\", \"オ\": \"O\",\n  \"カ\": \"KA\", \"キ\": \"KI\", \"ク\": \"KU\", \"ケ\": \"KE\", \"コ\": \"KO\",\n  \"サ\": \"SA\", \"シ\": \"SHI\", \"ス\": \"SU\", \"セ\": \"SE\", \"ソ\": \"SO\",\n  \"タ\": \"TA\", \"チ\": \"CHI\", \"ツ\": \"TSU\", \"テ\": \"TE\", \"ト\": \"TO\",\n  \"ナ\": \"NA\", \"ニ\": \"NI\", \"ヌ\": \"NU\", \"ネ\": \"NE\", \"ノ\": \"NO\",\n  \"ハ\": \"HA\", \"ヒ\": \"HI\", \"フ\": \"FU\", \"ヘ\": \"HE\", \"ホ\": \"HO\",\n  \"マ\": \"MA\", \"ミ\": \"MI\", \"ム\": \"MU\", \"メ\": \"ME\", \"モ\": \"MO\",\n  \"ヤ\": \"YA\", \"ユ\": \"YU\", \"ヨ\": \"YO\",\n  \"ラ\": \"RA\", \"リ\": \"RI\", \"ル\": \"RU\", \"レ\": \"RE\", \"ロ\": \"RO\",\n  \"ワ\": \"WA\", \"ヰ\": \"WI\", \"ヱ\": \"WE\",  \"ヲ\": \"WO\", \"ン\": \"N\",\n  \"ガ\": \"GA\", \"ギ\": \"GI\", \"グ\": \"GU\", \"ゲ\": \"GE\", \"ゴ\": \"GO\",\n  \"ザ\": \"ZA\", \"ジ\": \"JI\", \"ズ\": \"ZU\", \"ゼ\": \"ZE\", \"ゾ\": \"ZO\",\n  \"ダ\": \"DA\", \"ヂ\": \"DJI\", \"ヅ\": \"DZU\", \"デ\": \"DE\", \"ド\": \"DO\",\n  \"バ\": \"BA\", \"ビ\": \"BI\", \"ブ\": \"BU\", \"ベ\": \"BE\", \"ボ\": \"BO\",\n  \"パ\": \"PA\", \"ピ\": \"PI\", \"プ\": \"PU\", \"ペ\": \"PE\", \"ポ\": \"PO\"\n};\n\nvar katakanaDigraphs = {\n  \"アー\": \"Ā\", \"イー\": \"Ī\", \"ウー\": \"Ū\", \"エー\": \"Ē\", \"オー\": \"Ō\",\n  \"カー\": \"KĀ\", \"キー\": \"KĪ\", \"クー\": \"KŪ\", \"ケー\": \"KĒ\", \"コー\": \"KŌ\",\n  \"サー\": \"SĀ\", \"シー\": \"SHĪ\", \"スー\": \"SŪ\", \"セー\": \"SĒ\", \"ソー\": \"SŌ\",\n  \"ター\": \"TĀ\", \"チー\": \"CHĪ\", \"ツー\": \"TSŪ\", \"テー\": \"TĒ\", \"トー\": \"TŌ\",\n  \"ナー\": \"NĀ\", \"ニー\": \"NĪ\", \"ヌー\": \"NŪ\", \"ネー\": \"NĒ\", \"ノー\": \"NŌ\",\n  \"ハー\": \"HĀ\", \"ヒー\": \"HĪ\", \"フー\": \"FŪ\", \"ヘー\": \"HĒ\", \"ホー\": \"HŌ\",\n  \"マー\": \"MĀ\", \"ミー\": \"MĪ\", \"ムー\": \"MŪ\", \"メー\": \"MĒ\", \"モー\": \"MŌ\",\n  \"ヤー\": \"YĀ\", \"ユー\": \"YŪ\", \"ヨー\": \"YŌ\",\n  \"ラー\": \"RĀ\", \"リー\": \"RĪ\", \"ルー\": \"RŪ\", \"レー\": \"RĒ\", \"ロー\": \"RŌ\",\n  \"ワー\": \"WĀ\", \"ヰー\": \"WĪ\", \"ヱー\": \"WĒ\",  \"ヲー\": \"WŌ\", \"ンー\": \"N\",\n  \"ガー\": \"GĀ\", \"ギー\": \"GĪ\", \"グー\": \"GŪ\", \"ゲー\": \"GĒ\", \"ゴー\": \"GŌ\",\n  \"ザー\": \"ZĀ\", \"ジー\": \"JĪ\", \"ズー\": \"ZŪ\", \"ゼー\": \"ZĒ\", \"ゾー\": \"ZŌ\",\n  \"ダー\": \"DĀ\", \"ヂー\": \"DJĪ\", \"ヅー\": \"DZŪ\", \"デー\": \"DĒ\", \"ドー\": \"DŌ\",\n  \"バー\": \"BĀ\", \"ビー\": \"BĪ\", \"ブー\": \"BŪ\", \"ベー\": \"BĒ\", \"ボー\": \"BŌ\",\n  \"パー\": \"PĀ\", \"ピー\": \"PĪ\", \"プー\": \"PŪ\", \"ペー\": \"PĒ\", \"ポー\": \"PŌ\",\n  \"キャ\": \"KYA\", \"キュ\": \"KYU\", \"キョ\": \"KYO\",\n  \"シャ\": \"SHA\", \"シュ\": \"SHU\", \"ショ\": \"SHO\",\n  \"チャ\": \"CHA\", \"チュ\": \"CHU\", \"チョ\": \"CHO\",\n  \"ニャ\": \"NYA\", \"ニュ\": \"NYU\", \"ニョ\": \"NYO\",\n  \"ヒャ\": \"HYA\", \"ヒュ\": \"HYU\", \"ヒョ\": \"HYO\",\n  \"ミャ\": \"MYA\", \"ミュ\": \"MYU\", \"ミョ\": \"MYO\",\n  \"リャ\": \"RYA\", \"リュ\": \"RYU\", \"リョ\": \"RYO\",\n  \"ギャ\": \"GYA\", \"ギュ\": \"GYU\", \"ギョ\": \"GYO\",\n  \"ジャ\": \"JA\", \"ジュ\": \"JU\", \"ジョ\": \"JO\",\n  \"ビャ\": \"BYA\", \"ビュ\": \"BYU\", \"ビョ\": \"BYO\",\n  \"ピャ\": \"PYA\", \"ピュ\": \"PYU\", \"ピョ\": \"PYO\",\n  \"クヮ\": \"KWA\", \"クィ\": \"KWI\", \"クェ\": \"KWE\", \"クォ\": \"KWO\",\n  \"グヮ\": \"GWA\", \"スィ\": \"SI\",  \"シェ\": \"SHE\", \"ズィ\": \"ZI\", \"ジェ\": \"JE\",\n  \"ティ\": \"TI\",  \"トゥ\": \"TU\",  \"テュ\": \"TYU\", \"チェ\": \"CHE\",\n  \"ツァ\": \"TSA\", \"ツィ\": \"TSI\", \"ツェ\": \"TSE\", \"ツォ\": \"TSO\",\n  \"ディ\": \"DI\" , \"ドゥ\": \"DU\",  \"デュ\": \"DYU\", \"ホゥ\": \"HU\",\n  \"ファ\": \"FA\",  \"フィ\": \"FI\",  \"フェ\": \"FE\",  \"フォ\": \"FO\", \"フュ\": \"FYU\",\n  \"イィ\": \"YI\",  \"イェ\": \"YE\",\n  \"ウィ\": \"WI\",  \"ウゥ\": \"WU\", \t\"ウェ\": \"WE\",  \"ウォ\": \"WO\",\n  \"ヴァ\": \"VA\",  \"ヴィ\": \"VI\",    \"ヴ\": \"VU\",  \"ヴェ\": \"VE\", \"ヴォ\": \"VO\", \"ヴュ\": \"VYU\"\n};\n\nvar katakanaTrigraphs = {\n  \"キャー\": \"KYĀ\", \"キュー\": \"KYŪ\", \"キョー\": \"KYŌ\",\n  \"シャー\": \"SHĀ\", \"シュー\": \"SHŪ\", \"ショー\": \"SHŌ\",\n  \"チャー\": \"CHĀ\", \"チュー\": \"CHŪ\", \"チョー\": \"CHŌ\",\n  \"ニャー\": \"NYĀ\", \"ニュー\": \"NYŪ\", \"ニョー\": \"NYŌ\",\n  \"ヒャー\": \"HYĀ\", \"ヒュー\": \"HYŪ\", \"ヒョー\": \"HYŌ\",\n  \"ミャー\": \"MYĀ\", \"ミュー\": \"MYŪ\", \"ミョー\": \"MYŌ\",\n  \"リャー\": \"RYĀ\", \"リュー\": \"RYŪ\", \"リョー\": \"RYŌ\",\n  \"ギャー\": \"GYĀ\", \"ギュー\": \"GYŪ\", \"ギョー\": \"GYŌ\",\n  \"ジャー\": \"JĀ\", \"ジュー\": \"JŪ\", \"ジョー\": \"JŌ\",\n  \"ビャー\": \"BYĀ\", \"ビュー\": \"BYŪ\", \"ビョー\": \"BYŌ\",\n  \"ピャー\": \"PYĀ\", \"ピュー\": \"PYŪ\", \"ピョー\": \"PYŌ\"\n};\n\nvar katakanaHalfwidths = {\n  \"ｱ\": \"ア\", \"ｲ\": \"イ\", \"ｳ\": \"ウ\", \"ｴ\": \"エ\", \"ｵ\": \"オ\",\n  \"ｶ\": \"カ\", \"ｷ\": \"キ\", \"ｸ\": \"ク\", \"ｹ\": \"ケ\", \"ｺ\": \"コ\",\n  \"ｻ\": \"サ\", \"ｼ\": \"シ\", \"ｽ\": \"ス\", \"ｾ\": \"セ\", \"ｿ\": \"ソ\",\n  \"ﾀ\": \"タ\", \"ﾁ\": \"チ\", \"ﾂ\": \"ツ\", \"ﾃ\": \"テ\", \"ﾄ\": \"ト\",\n  \"ﾅ\": \"ナ\", \"ﾆ\": \"ニ\", \"ﾇ\": \"ヌ\", \"ﾈ\": \"ネ\", \"ﾉ\": \"ノ\",\n  \"ﾊ\": \"ハ\", \"ﾋ\": \"ヒ\", \"ﾌ\": \"フ\", \"ﾍ\": \"ヘ\", \"ﾎ\": \"ホ\",\n  \"ﾏ\": \"マ\", \"ﾐ\": \"ミ\", \"ﾑ\": \"ム\", \"ﾒ\": \"メ\", \"ﾓ\": \"モ\",\n  \"ﾔ\": \"ヤ\", \"ﾕ\": \"ユ\", \"ﾖ\": \"ヨ\",\n  \"ﾗ\": \"ラ\", \"ﾘ\": \"リ\", \"ﾙ\": \"ル\", \"ﾚ\": \"レ\", \"ﾛ\": \"ロ\",\n  \"ﾜ\": \"ワ\", \"ｦ\": \"ヲ\", \"ﾝ\": \"ン\",\n  \"ｶﾞ\": \"ガ\", \"ｷﾞ\": \"ギ\", \"ｸﾞ\": \"グ\", \"ｹﾞ\": \"ゲ\", \"ｺﾞ\": \"ゴ\",\n  \"ｻﾞ\": \"ザ\", \"ｼﾞ\": \"ジ\", \"ｽﾞ\": \"ズ\", \"ｾﾞ\": \"ゼ\", \"ｿﾞ\": \"ゾ\",\n  \"ﾀﾞ\": \"ダ\", \"ﾁﾞ\": \"ヂ\", \"ﾂﾞ\": \"ヅ\", \"ﾃﾞ\": \"デ\", \"ﾄﾞ\": \"ド\",\n  \"ﾊﾞ\": \"バ\", \"ﾋﾞ\": \"ビ\", \"ﾌﾞ\": \"ブ\", \"ﾍﾞ\": \"ベ\", \"ﾎﾞ\": \"ボ\",\n  \"ﾊﾟ\": \"パ\", \"ﾋﾟ\": \"ピ\", \"ﾌﾟ\": \"プ\", \"ﾍﾟ\": \"ペ\", \"ﾎﾟ\": \"ポ\",\n  \"ｧ\": \"ァ\", \"ｨ\": \"ィ\", \"ｩ\": \"ゥ\", \"ｪ\": \"ェ\", \"ｫ\": \"ォ\",\n  \"ｬ\": \"ャ\", \"ｭ\": \"ュ\", \"ｮ\": \"ョ\",\n  \"ｯ\": \"ッ\", \"ｰ\": \"ー\"\n}\n\nvar katakanaHalfwidthsCombined = {\n  \"ｶﾞ\": \"ガ\", \"ｷﾞ\": \"ギ\", \"ｸﾞ\": \"グ\", \"ｹﾞ\": \"ゲ\", \"ｺﾞ\": \"ゴ\",\n  \"ｻﾞ\": \"ザ\", \"ｼﾞ\": \"ジ\", \"ｽﾞ\": \"ズ\", \"ｾﾞ\": \"ゼ\", \"ｿﾞ\": \"ゾ\",\n  \"ﾀﾞ\": \"ダ\", \"ﾁﾞ\": \"ヂ\", \"ﾂﾞ\": \"ヅ\", \"ﾃﾞ\": \"デ\", \"ﾄﾞ\": \"ド\",\n  \"ﾊﾞ\": \"バ\", \"ﾋﾞ\": \"ビ\", \"ﾌﾞ\": \"ブ\", \"ﾍﾞ\": \"ベ\", \"ﾎﾞ\": \"ボ\",\n  \"ﾊﾟ\": \"パ\", \"ﾋﾟ\": \"ピ\", \"ﾌﾟ\": \"プ\", \"ﾍﾟ\": \"ペ\", \"ﾎﾟ\": \"ポ\"\n}\n\nvar choonpu = \"ー\";\n\nvar yoonHiragana = \"ぁぃぅぇぉゃゅょゎゕ\";\nvar yoonKatakana = \"ァィゥェォャュョヮヵ\";\n\nvar sokuonHiragana = \"っ\";\nvar sokuonKatakana = \"ッ\";\n\nvar sokuons = sokuonKatakana + sokuonHiragana;\n\nvar katakanaSplitCombinators = choonpu + yoonKatakana + sokuonKatakana;\nvar hiraganaSplitCombinators = choonpu + yoonHiragana + sokuonHiragana;\n\nvar kanaSplitCombinators = katakanaSplitCombinators + hiraganaSplitCombinators;\n\n// Used to convert old Nihon-Shiki style romaji into the modern Hepburn form.\n// Source: http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\nvar nihonShiki = {\n    \"SI\": \"SHI\",\n    \"ZI\": \"JI\",\n    \"TI\": \"CHI\",\n    \"DI\": \"JI\",\n    \"TU\": \"TSU\",\n    \"DU\": \"ZU\",\n    \"SHU\": \"SHU\", // Prevent HU from accidentally converting\n    \"CHU\": \"CHU\",\n    \"HU\": \"FU\",\n    \"CYA\": \"CHA\",\n    \"CYO\": \"CHO\",\n    \"CYU\": \"CHU\",\n    \"CHY\": \"CH\",\n    \"SYA\": \"SHA\",\n    \"SYU\": \"SHU\",\n    \"SYO\": \"SHO\",\n    \"SHY\": \"SH\",\n    \"ZYA\": \"JA\",\n    \"ZYU\": \"JU\",\n    \"ZYO\": \"JO\",\n    \"TYA\": \"CHA\",\n    \"TYU\": \"CHU\",\n    \"TYO\": \"CHO\",\n    \"DYA\": \"JA\",\n    \"DYU\": \"JU\",\n    \"DYO\": \"JO\"\n};\n\n// For use with toHiragana\nvar hiraganaMap = {};\n\nObject.keys(hiraganaMonographs).forEach(function(key) {\n  var value = hiraganaMonographs[key];\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\n\nObject.keys(hiraganaDigraphs).forEach(function(key) {\n  var value = hiraganaDigraphs[key];\n  if (!(value in hiraganaMap)) {\n    hiraganaMap[value] = key;\n  }\n});\n\nvar hiraganaRegex = new RegExp(Object.keys(hiraganaMap).sort(function(a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\");\n\n// For use with toKatakana\nvar katakanaMap = {};\n\nObject.keys(katakanaMonographs).forEach(function(key) {\n  var value = katakanaMonographs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nObject.keys(katakanaDigraphs).forEach(function(key) {\n  var value = katakanaDigraphs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nObject.keys(katakanaTrigraphs).forEach(function(key) {\n  var value = katakanaTrigraphs[key];\n  if (!(value in katakanaMap)) {\n    katakanaMap[value] = key;\n  }\n});\n\nvar katakanaRegex = new RegExp(Object.keys(katakanaMap).sort(function(a, b) {\n  return b.length - a.length;\n}).join(\"|\"), \"g\");\n\n// API\n\nexports.fromKana = function(str) {\n  // Initial transliteration\n  str = bulkReplace(str, katakanaHalfwidthsCombined);\n  str = bulkReplace(str, katakanaHalfwidths);\n  str = bulkReplace(str, hiraganaDigraphs);\n  str = bulkReplace(str, katakanaDigraphs);\n  str = bulkReplace(str, hiraganaMonographs);\n  str = bulkReplace(str, katakanaMonographs);\n\n  // Correct use of sokuon\n  str = str.replace(/[っッ]C/g, \"TC\").replace(/[っッ](.)/g, \"$1$1\");\n\n  // Correct usage of N' (M' is a common mistake)\n  str = str.replace(/[NM]'([^YAEIOU]|$)/g, \"N$1\");\n\n  // Correct use of choonpu\n  str = str.replace(/Aー/g, \"Ā\");\n  str = str.replace(/Iー/g, \"Ī\");\n  str = str.replace(/Uー/g, \"Ū\");\n  str = str.replace(/Eー/g, \"Ē\");\n  str = str.replace(/Oー/g, \"Ō\");\n\n  return str;\n};\n\nexports.toHiragana = function(str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Correct use of sokuon\n  str = str.replace(/TC/g, \"っC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"っ$1\");\n\n  // Transliteration\n  str = bulkReplace(str, hiraganaRegex, hiraganaMap);\n\n  // Fix any remaining N/M usage (that isn't a N' usage)\n  str = str.replace(/N|M/g, \"ん\");\n\n  return str;\n};\n\nexports.toKatakana = function(str) {\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Correct use of sokuon\n  str = str.replace(/TC/g, \"ッC\");\n  str = str.replace(/([^AEIOUN])\\1/g, \"ッ$1\");\n\n  // Transliteration\n  str = bulkReplace(str, katakanaRegex, katakanaMap);\n\n  // Fix any remaining N/M usage (that isn't a N' usage)\n  str = str.replace(/N|M/g, \"ン\");\n\n  return str;\n};\n\nexports.cleanRomaji = function(str) {\n  // Follows many of the suggestions from:\n  // http://nayuki.eigenstate.org/page/variations-on-japanese-romanization\n\n  // All conversion is done in upper-case\n  str = str.toUpperCase();\n\n  // Should be using N instead of M\n  str = str.replace(/(\\w)M([^AEIOUY]|$)/g, \"$1N$2\");\n\n  // Convert the NN form into the more common N'\n  str = str.replace(/NN/g, \"N'\");\n\n  // Convert usage of OU into the more common OO\n  // Handle cases like Toukyou\n  str = str.replace(/OU/g, \"OO\");\n\n  // Fix antiquated usage of OH to mean OO\n  // (handle ambiguous cases like 'Kohusai' vs. 'Tohkyoh')\n  str = str.replace(/OH([^AIEO]|$)/g, \"OO$1\");\n\n  // Replace old Nihon-shiki usage with modern Hepburn form\n  str = bulkReplace(str, nihonShiki);\n\n  return str;\n};\n\nexports.splitKana = function(str) {\n  return str.split(\"\").reduce(function(r, h) {\n    // if current kana is a combinator\n    // or previous syllable and current character both aren't kanas\n    // then merge with previous syllable if any\n    if (\n      r[r.length - 1] && h.trim() &&\n        (kanaSplitCombinators.includes(h) ||\n         (!exports.containsHiragana(r[r.length - 1]) &&\n          !exports.containsKatakana(r[r.length - 1]) &&\n          (!exports.containsHiragana(h) && !exports.containsKatakana(h))))\n    ) {\n      r[r.length - 1] += h;\n    } else {\n      r.push(h);\n    }\n\n    return r;\n  }, []);\n};\n\n// known issue: unclean romaji might get too chopped up\n// e.g. \"CHYA\" becomes [\"C\", \"HYA\"]\nexports.splitRomaji = function(str) {\n  return exports.splitKana(exports.toKatakana(str)).map((k, i, ks) => {\n    // if syllable's last character is a sokuon\n    // add the first letter of the following syllable if any\n    // to the end of current syllable\n    if (i < ks.length - 1 && sokuons.includes(k.slice(-1)[0])) {\n      const next = ks[i + 1];\n      const nextRomaji =\n              exports.containsHiragana(next) || exports.containsKatakana(next)\n              ? exports.fromKana(next)\n              : next;\n\n      var nextLetter = nextRomaji[0]\n\n      // correct CC/TC use of sokuon\n      if (nextLetter === 'C') {\n        nextLetter = 'T'\n      }\n\n      const r = exports.fromKana(k.slice(0, -1)) + nextLetter;\n\n      return r;\n    }\n\n    return exports.fromKana(k);\n  })\n}\n\nexports.containsHiragana = function(str) {\n  return new RegExp(Object.keys(hiraganaMonographs).join('|')).test(str);\n};\n\nexports.containsKatakana = function(str) {\n  return (\n    new RegExp(Object.keys(katakanaMonographs).join('|')).test(str) ||\n    new RegExp(Object.keys(katakanaHalfwidths).join('|')).test(str)\n  );\n};\n\nexports.containsKana = function(str){\n  return (exports.containsHiragana(str) || exports.containsKatakana(str));\n};\n\nexports.containsKanji = function(str){\n  return new RegExp(/[\\u4e00-\\u9fcf\\uf900-\\ufaff\\u3400-\\u4dbf]/).test(str);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}