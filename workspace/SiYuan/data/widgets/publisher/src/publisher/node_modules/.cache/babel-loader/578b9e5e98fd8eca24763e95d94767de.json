{"ast":null,"code":"'use strict';\n\nconst speakingurl = require('speakingurl');\n\nconst hepburn = require('hepburn');\n\nlet pinyin, PINYIN_STYLE;\n\ntry {\n  ({\n    pinyin,\n    PINYIN_STYLE\n  } = require('@napi-rs/pinyin'));\n} catch (err) {}\n\nfunction customCharsAsArray(custom) {\n  custom = custom || [];\n  return Array.isArray(custom) ? custom : Object.keys(custom);\n}\n\nmodule.exports = function (text, opt) {\n  const options = typeof opt === 'string' ? {\n    separator: opt\n  } : opt || {};\n  text = text.replace(/(\\S)['\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u0301](\\S)/g, // eslint-disable-line no-misleading-character-class\n  options.separateApostrophes === true ? '$1 $2' : '$1$2'); // Break out any numbers contained within a word\n\n  if (options.separateNumbers === true) {\n    text = text.replace(/([^\\d\\s])([0-9]+)([^\\d\\s])/g, '$1 $2 $3');\n  } // Should we remove the separator before a digit where previous word does not end in a digit?\n\n\n  let mergeDigitSuffixes = false; // Language-specific behaviour\n\n  const lang = options.lang || '';\n\n  if (lang.toLowerCase().startsWith('ja') || hepburn.containsKana(text)) {\n    // Convert from Japanese Kana using Hepburn romanisation\n    text = hepburn.fromKana(text); // Remove any remaining non-Kana, e.g. Kanji\n\n    text = text.replace(/([^A-Za-z0-9\\- ]+)/g, '');\n  } else if (pinyin && (lang.toLowerCase().startsWith('zh') || /[\\u4e00-\\u9fa5]+/.test(text))) {\n    // Should we use tone numbers? (default is true)\n    const tone = typeof options.tone === 'boolean' ? options.tone : true;\n    mergeDigitSuffixes = tone;\n    text = pinyin(text, {\n      style: tone ? PINYIN_STYLE.WithToneNumEnd : PINYIN_STYLE.Plain\n    }).join(' '); // Remove punctuation symbols\n\n    const customNonPunctuation = customCharsAsArray(options.custom).map(function (c) {\n      return `\\\\${c}`;\n    }).join('');\n    const nonPunctuationMatcher = new RegExp(`([^0-9A-Za-z ${customNonPunctuation}]+)`, 'g');\n    text = text.replace(nonPunctuationMatcher, ''); // Remove space around single character words, caused by non-Mandarin symbols in otherwise Mandarin text\n\n    text = text.replace(/([^1-4]) ([A-Za-z]) /g, '$1$2');\n  } // Convert to slug using speakingurl\n\n\n  const separator = options.replacement || options.separator;\n  const slug = speakingurl(text, {\n    lang: lang || 'en',\n    separator: typeof separator === 'string' ? separator : '-',\n    maintainCase: options.maintainCase || false,\n    custom: options.custom || {}\n  }); // Remove separator before a digit where previous word does not end in a digit\n\n  return mergeDigitSuffixes ? slug.replace(/([^0-9])-([0-9])/g, '$1$2') : slug;\n};","map":{"version":3,"names":["speakingurl","require","hepburn","pinyin","PINYIN_STYLE","err","customCharsAsArray","custom","Array","isArray","Object","keys","module","exports","text","opt","options","separator","replace","separateApostrophes","separateNumbers","mergeDigitSuffixes","lang","toLowerCase","startsWith","containsKana","fromKana","test","tone","style","WithToneNumEnd","Plain","join","customNonPunctuation","map","c","nonPunctuationMatcher","RegExp","replacement","slug","maintainCase"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/node_modules/limax/lib/limax.js"],"sourcesContent":["'use strict';\n\nconst speakingurl = require('speakingurl');\nconst hepburn = require('hepburn');\nlet pinyin, PINYIN_STYLE;\ntry {\n  ({ pinyin, PINYIN_STYLE } = require('@napi-rs/pinyin'));\n} catch (err) {}\n\nfunction customCharsAsArray (custom) {\n  custom = custom || [];\n  return Array.isArray(custom) ? custom : Object.keys(custom);\n}\n\nmodule.exports = function (text, opt) {\n  const options = typeof opt === 'string'\n    ? { separator: opt }\n    : opt || {};\n\n  text = text.replace(\n    /(\\S)['\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u0301](\\S)/g, // eslint-disable-line no-misleading-character-class\n    options.separateApostrophes === true ? '$1 $2' : '$1$2'\n  );\n\n  // Break out any numbers contained within a word\n  if (options.separateNumbers === true) {\n    text = text.replace(/([^\\d\\s])([0-9]+)([^\\d\\s])/g, '$1 $2 $3');\n  }\n\n  // Should we remove the separator before a digit where previous word does not end in a digit?\n  let mergeDigitSuffixes = false;\n\n  // Language-specific behaviour\n  const lang = options.lang || '';\n  if (lang.toLowerCase().startsWith('ja') || hepburn.containsKana(text)) {\n    // Convert from Japanese Kana using Hepburn romanisation\n    text = hepburn.fromKana(text);\n    // Remove any remaining non-Kana, e.g. Kanji\n    text = text.replace(/([^A-Za-z0-9\\- ]+)/g, '');\n  } else if (pinyin && (lang.toLowerCase().startsWith('zh') || /[\\u4e00-\\u9fa5]+/.test(text))) {\n    // Should we use tone numbers? (default is true)\n    const tone = (typeof options.tone === 'boolean') ? options.tone : true;\n    mergeDigitSuffixes = tone;\n    text = pinyin(text, {\n      style: tone ? PINYIN_STYLE.WithToneNumEnd : PINYIN_STYLE.Plain\n    }).join(' ');\n    // Remove punctuation symbols\n    const customNonPunctuation = customCharsAsArray(options.custom).map(function (c) { return `\\\\${c}`; }).join('');\n    const nonPunctuationMatcher = new RegExp(`([^0-9A-Za-z ${customNonPunctuation}]+)`, 'g');\n    text = text.replace(nonPunctuationMatcher, '');\n    // Remove space around single character words, caused by non-Mandarin symbols in otherwise Mandarin text\n    text = text.replace(/([^1-4]) ([A-Za-z]) /g, '$1$2');\n  }\n  // Convert to slug using speakingurl\n  const separator = options.replacement || options.separator;\n  const slug = speakingurl(text, {\n    lang: lang || 'en',\n    separator: typeof separator === 'string' ? separator : '-',\n    maintainCase: options.maintainCase || false,\n    custom: options.custom || {}\n  });\n  // Remove separator before a digit where previous word does not end in a digit\n  return mergeDigitSuffixes\n    ? slug.replace(/([^0-9])-([0-9])/g, '$1$2')\n    : slug;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}