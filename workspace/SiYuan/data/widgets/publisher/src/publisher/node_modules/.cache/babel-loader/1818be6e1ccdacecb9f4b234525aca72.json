{"ast":null,"code":"import { exportMdContent } from \"@/lib/siYuanApi\";\nimport { getApiParams } from \"@/lib/publish/publishUtil\";\nimport metaweblogApiClient from \"@/lib/metaweblog/metaweblog-api-client\";\n\nasync function doPublish(id, type, meta, content) {\n  console.log(\"doPublish params=>\", {\n    id,\n    type,\n    meta,\n    content\n  });\n  const apiParams = getApiParams(type);\n  console.log(\"doPublish apiParams=>\", {\n    \"API_URL\": apiParams.API_URL,\n    \"appKey\": apiParams.appKey,\n    \"username\": apiParams.username,\n    \"apiParams.postidKey\": apiParams.postidKey\n  }); // 设置自定义属性\n\n  const postidKey = apiParams.postidKey;\n  const customAttr = {\n    \"custom-slug\": \"\",\n    \"custom-vuepress-slug\": \"\",\n    [postidKey]: \"99999\"\n  };\n  console.log(\"设置自定义属性customAttr=>\", customAttr); // const wordpressApi = wordpressApiClient(type);\n  // const result2 = wordpressApi.getPosts(10);\n  // // @ts-ignore\n  // result2.then(function (reslove: any, reject: any) {\n  //     console.log(\"wordpress getPosts=>\", reslove);\n  // });\n\n  const metaWeblogApi = metaweblogApiClient(type);\n  const result = metaWeblogApi.getRecentPosts(10);\n  result.then(function (posts) {\n    console.log(\"metaweblog get recent posts=>\", posts);\n  }).catch(function (e) {\n    console.error(e);\n  }); // fetchPost(\"/api/attr/setBlockAttrs\", {\n  //     \"id\": id,\n  //     \"attrs\": customAttr\n  // }, (response) => {\n  //     const newmeta = response;\n  //     console.log(\"doPublish customAttr=>\", customAttr);\n  //     // console.log(\"doPublish content=>\", content);\n  // });\n}\n/**\n * 发布Markdown格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\n\n\nexport async function publishMdContent(id, type, meta) {\n  const data = await exportMdContent(id);\n  const content = data.content;\n  console.log(\"发布Markdown格式的文档\");\n  return await doPublish(id, type, meta, content);\n}\n/**\n * 发布HTML格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\n\nexport async function publishHTMLContent(id, type, meta) {\n  const data = await exportMdContent(id);\n  const content = data.content;\n  const html = content;\n  console.log(\"发布HTML格式的文档\");\n  return await doPublish(id, type, meta, html);\n}","map":{"version":3,"names":["exportMdContent","getApiParams","metaweblogApiClient","doPublish","id","type","meta","content","console","log","apiParams","API_URL","appKey","username","postidKey","customAttr","metaWeblogApi","result","getRecentPosts","then","posts","catch","e","error","publishMdContent","data","publishHTMLContent","html"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/publish/publish.js"],"sourcesContent":["import {exportMdContent} from \"@/lib/siYuanApi\";\nimport {getApiParams} from \"@/lib/publish/publishUtil\";\nimport metaweblogApiClient from \"@/lib/metaweblog/metaweblog-api-client\";\n\nasync function doPublish(id, type, meta, content) {\n    console.log(\"doPublish params=>\", {id, type, meta, content});\n    const apiParams = getApiParams(type);\n    console.log(\"doPublish apiParams=>\", {\n        \"API_URL\": apiParams.API_URL,\n        \"appKey\": apiParams.appKey,\n        \"username\": apiParams.username,\n        \"apiParams.postidKey\": apiParams.postidKey\n    });\n\n    // 设置自定义属性\n    const postidKey = apiParams.postidKey;\n    const customAttr = {\n        \"custom-slug\": \"\",\n        \"custom-vuepress-slug\": \"\",\n        [postidKey]: \"99999\",\n    };\n\n    console.log(\"设置自定义属性customAttr=>\", customAttr);\n\n    // const wordpressApi = wordpressApiClient(type);\n    // const result2 = wordpressApi.getPosts(10);\n    // // @ts-ignore\n    // result2.then(function (reslove: any, reject: any) {\n    //     console.log(\"wordpress getPosts=>\", reslove);\n    // });\n\n    const metaWeblogApi = metaweblogApiClient(type);\n    const result = metaWeblogApi.getRecentPosts(10);\n    result.then(function (posts) {\n        console.log(\"metaweblog get recent posts=>\", posts);\n    }).catch(function (e) {\n        console.error(e);\n    });\n\n    // fetchPost(\"/api/attr/setBlockAttrs\", {\n    //     \"id\": id,\n    //     \"attrs\": customAttr\n    // }, (response) => {\n    //     const newmeta = response;\n    //     console.log(\"doPublish customAttr=>\", customAttr);\n    //     // console.log(\"doPublish content=>\", content);\n    // });\n}\n\n/**\n * 发布Markdown格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\nexport async function publishMdContent(id, type, meta) {\n    const data = await exportMdContent(id);\n\n    const content = data.content;\n\n    console.log(\"发布Markdown格式的文档\")\n    return await doPublish(id, type, meta, content);\n}\n\n/**\n * 发布HTML格式的文档\n * @param id 文档ID\n * @param type 文档类型\n * @param meta 文档属性\n * @returns {Promise<void>}\n */\nexport async function publishHTMLContent(id, type, meta) {\n    const data = await exportMdContent(id);\n\n    const content = data.content;\n    const html = content;\n\n    console.log(\"发布HTML格式的文档\")\n    return await doPublish(id, type, meta, html);\n}"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,iBAA9B;AACA,SAAQC,YAAR,QAA2B,2BAA3B;AACA,OAAOC,mBAAP,MAAgC,wCAAhC;;AAEA,eAAeC,SAAf,CAAyBC,EAAzB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,OAAzC,EAAkD;EAC9CC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC;IAACL,EAAD;IAAKC,IAAL;IAAWC,IAAX;IAAiBC;EAAjB,CAAlC;EACA,MAAMG,SAAS,GAAGT,YAAY,CAACI,IAAD,CAA9B;EACAG,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqC;IACjC,WAAWC,SAAS,CAACC,OADY;IAEjC,UAAUD,SAAS,CAACE,MAFa;IAGjC,YAAYF,SAAS,CAACG,QAHW;IAIjC,uBAAuBH,SAAS,CAACI;EAJA,CAArC,EAH8C,CAU9C;;EACA,MAAMA,SAAS,GAAGJ,SAAS,CAACI,SAA5B;EACA,MAAMC,UAAU,GAAG;IACf,eAAe,EADA;IAEf,wBAAwB,EAFT;IAGf,CAACD,SAAD,GAAa;EAHE,CAAnB;EAMAN,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCM,UAAnC,EAlB8C,CAoB9C;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAGd,mBAAmB,CAACG,IAAD,CAAzC;EACA,MAAMY,MAAM,GAAGD,aAAa,CAACE,cAAd,CAA6B,EAA7B,CAAf;EACAD,MAAM,CAACE,IAAP,CAAY,UAAUC,KAAV,EAAiB;IACzBZ,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CW,KAA7C;EACH,CAFD,EAEGC,KAFH,CAES,UAAUC,CAAV,EAAa;IAClBd,OAAO,CAACe,KAAR,CAAcD,CAAd;EACH,CAJD,EA7B8C,CAmC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeE,gBAAf,CAAgCpB,EAAhC,EAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;EACnD,MAAMmB,IAAI,GAAG,MAAMzB,eAAe,CAACI,EAAD,CAAlC;EAEA,MAAMG,OAAO,GAAGkB,IAAI,CAAClB,OAArB;EAEAC,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACA,OAAO,MAAMN,SAAS,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAiBC,OAAjB,CAAtB;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAemB,kBAAf,CAAkCtB,EAAlC,EAAsCC,IAAtC,EAA4CC,IAA5C,EAAkD;EACrD,MAAMmB,IAAI,GAAG,MAAMzB,eAAe,CAACI,EAAD,CAAlC;EAEA,MAAMG,OAAO,GAAGkB,IAAI,CAAClB,OAArB;EACA,MAAMoB,IAAI,GAAGpB,OAAb;EAEAC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACA,OAAO,MAAMN,SAAS,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAiBqB,IAAjB,CAAtB;AACH"},"metadata":{},"sourceType":"module"}