{"ast":null,"code":"var url = require(\"url\"),\n    xmlrpc = require(\"xmlrpc\"),\n    fieldMap = require(\"../../../../node_modules/wordpress/lib/fields.js\"); // http://codex.wordpress.org/XML-RPC_Support\n// http://codex.wordpress.org/XML-RPC_WordPress_API\n\n\nfunction extend(a, b) {\n  for (var p in b) {\n    a[p] = b[p];\n  }\n\n  return a;\n}\n\nfunction parseArguments(args) {\n  return [].slice.call(args, 1) // Remove null arguments\n  // Null values only exist for optional fields. As of WordPress 4.4,\n  // null is no longer treated the same as omitting the value. To\n  // compensate for this, we just drop the argument before calling\n  // into WordPress. See #25.\n  .filter(function (value) {\n    return value !== null;\n  });\n}\n\nfunction Client(settings) {\n  [\"url\", \"username\", \"password\"].forEach(function (prop) {\n    if (!settings[prop]) {\n      throw new Error(\"Missing required setting: \" + prop);\n    }\n  });\n  var parsedUrl = Client.parseUrl(settings.url);\n  this.rpc = xmlrpc[parsedUrl.secure ? \"createSecureClient\" : \"createClient\"]({\n    host: settings.host || parsedUrl.host,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    rejectUnauthorized: settings.rejectUnauthorized !== undefined ? settings.rejectUnauthorized : true,\n    // Always set Host header in case we're pointing to a different server\n    // via settings.host\n    headers: {\n      Host: parsedUrl.host\n    },\n    basic_auth: !settings.basicAuth ? null : {\n      user: settings.basicAuth.username,\n      pass: settings.basicAuth.password\n    }\n  });\n  this.blogId = settings.blogId || 0;\n  this.username = settings.username;\n  this.password = settings.password;\n}\n\nClient.parseUrl = function (wpUrl) {\n  var urlParts, secure; // allow URLs without a protocol\n\n  if (!/\\w+:\\/\\//.test(wpUrl)) {\n    wpUrl = \"http://\" + wpUrl;\n  }\n\n  urlParts = url.parse(wpUrl);\n  secure = urlParts.protocol === \"https:\";\n  return {\n    host: urlParts.hostname,\n    port: urlParts.port || (secure ? 443 : 80),\n    // path: urlParts.path.replace(/\\/+$/, \"\") + \"/xmlrpc.php\",\n    path: urlParts.path,\n    secure: secure\n  };\n};\n\nextend(Client.prototype, {\n  call: function (method) {\n    var args = parseArguments(arguments),\n        fn = args.pop();\n\n    if (typeof fn !== \"function\") {\n      args.push(fn);\n      fn = null;\n    }\n\n    this.rpc.methodCall(method, args, function (error, data) {\n      if (!error) {\n        return fn(null, data);\n      }\n\n      if (error.code === \"ENOTFOUND\" && error.syscall === \"getaddrinfo\") {\n        error.message = \"Unable to connect to WordPress.\";\n      } else if (error.message === \"Unknown XML-RPC tag 'TITLE'\") {\n        var additional = error.res.statusCode;\n\n        if (error.res.statusMessage) {\n          additional += \"; \" + error.res.statusMessage;\n        }\n\n        error.message = \"(\" + additional + \") \" + error.message;\n      }\n\n      fn(error);\n    });\n  },\n  authenticatedCall: function () {\n    var args = [].slice.call(arguments);\n    args.splice(1, 0, this.blogId, this.username, this.password);\n    this.call.apply(this, args);\n  },\n  listMethods: function (fn) {\n    this.call(\"system.listMethods\", fn);\n  }\n});\nextend(Client.prototype, {\n  getPost: function (id, fields, fn) {\n    if (typeof fields === \"function\") {\n      fn = fields;\n      fields = null;\n    }\n\n    if (fields) {\n      fields = fieldMap.array(fields, \"post\");\n    }\n\n    this.authenticatedCall(\"wp.getPost\", id, fields, function (error, post) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, fieldMap.from(post, \"post\"));\n    });\n  },\n  getPosts: function (filter, fields, fn) {\n    if (typeof filter === \"function\") {\n      fn = filter;\n      fields = null;\n      filter = {};\n    }\n\n    if (typeof fields === \"function\") {\n      fn = fields;\n      fields = null;\n    }\n\n    if (filter.type) {\n      filter.post_type = filter.type;\n      delete filter.type;\n    }\n\n    if (filter.status) {\n      filter.post_status = filter.status;\n      delete filter.status;\n    }\n\n    if (filter.orderby) {\n      filter.orderby = fieldMap.array([filter.orderby], \"post\")[0];\n    }\n\n    if (fields) {\n      fields = fieldMap.array(fields, \"post\");\n    }\n\n    this.authenticatedCall(\"wp.getPosts\", filter, fields, function (error, posts) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, posts.map(function (post) {\n        return fieldMap.from(post, \"post\");\n      }));\n    });\n  },\n  newPost: function (data, fn) {\n    this.authenticatedCall(\"wp.newPost\", fieldMap.to(data, \"post\"), fn);\n  },\n  // to remove a term, just set the terms and leave out the id that you want to remove\n  // to remove a custom field, pass the id with no key or value\n  editPost: function (id, data, fn) {\n    this.authenticatedCall(\"wp.editPost\", id, fieldMap.to(data, \"post\"), fn);\n  },\n  deletePost: function (id, fn) {\n    this.authenticatedCall(\"wp.deletePost\", id, fn);\n  },\n  getPostType: function (name, fields, fn) {\n    if (typeof fields === \"function\") {\n      fn = fields;\n      fields = null;\n    }\n\n    if (fields) {\n      fields = fieldMap.array(fields, \"postType\");\n    }\n\n    this.authenticatedCall(\"wp.getPostType\", name, fields, function (error, postType) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, fieldMap.from(postType, \"postType\"));\n    });\n  },\n  getPostTypes: function (filter, fields, fn) {\n    if (typeof filter === \"function\") {\n      fn = filter;\n      fields = null;\n      filter = {};\n    }\n\n    if (typeof fields === \"function\") {\n      fn = fields;\n      fields = null;\n    }\n\n    if (Array.isArray(filter)) {\n      fields = filter;\n      filter = {};\n    }\n\n    if (fields) {\n      fields = fieldMap.array(fields, \"postType\");\n    }\n\n    this.authenticatedCall(\"wp.getPostTypes\", filter, fields, function (error, postTypes) {\n      if (error) {\n        return fn(error);\n      }\n\n      Object.keys(postTypes).forEach(function (postType) {\n        postTypes[postType] = fieldMap.from(postTypes[postType], \"postType\");\n      });\n      fn(null, postTypes);\n    });\n  }\n});\nextend(Client.prototype, {\n  getTaxonomy: function (name, fn) {\n    this.authenticatedCall(\"wp.getTaxonomy\", name, function (error, taxonomy) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, fieldMap.from(taxonomy, \"taxonomy\"));\n    });\n  },\n  getTaxonomies: function (fn) {\n    this.authenticatedCall(\"wp.getTaxonomies\", function (error, taxonomies) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, taxonomies.map(function (taxonomy) {\n        return fieldMap.from(taxonomy, \"taxonomy\");\n      }));\n    });\n  },\n  getTerm: function (taxonomy, id, fn) {\n    this.authenticatedCall(\"wp.getTerm\", taxonomy, id, function (error, term) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, fieldMap.from(term, \"term\"));\n    });\n  },\n  getTerms: function (taxonomy, filter, fn) {\n    if (typeof filter === \"function\") {\n      fn = filter;\n      filter = {};\n    }\n\n    if (filter.hideEmpty) {\n      filter.hide_empty = filter.hideEmpty;\n      delete filter.hideEmpty;\n    }\n\n    if (filter.orderby) {\n      filter.orderby = fieldMap.array([filter.orderby], \"term\")[0];\n    }\n\n    this.authenticatedCall(\"wp.getTerms\", taxonomy, filter, function (error, terms) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, terms.map(function (term) {\n        return fieldMap.from(term, \"term\");\n      }));\n    });\n  },\n  newTerm: function (data, fn) {\n    this.authenticatedCall(\"wp.newTerm\", fieldMap.to(data, \"term\"), fn);\n  },\n  editTerm: function (id, data, fn) {\n    this.authenticatedCall(\"wp.editTerm\", id, fieldMap.to(data, \"term\"), fn);\n  },\n  deleteTerm: function (taxonomy, id, fn) {\n    this.authenticatedCall(\"wp.deleteTerm\", taxonomy, id, fn);\n  }\n});\nextend(Client.prototype, {\n  getMediaItem: function (id, fn) {\n    this.authenticatedCall(\"wp.getMediaItem\", id, function (error, media) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, fieldMap.from(media, \"media\"));\n    });\n  },\n  getMediaLibrary: function (filter, fn) {\n    if (typeof filter === \"function\") {\n      fn = filter;\n      filter = {};\n    }\n\n    this.authenticatedCall(\"wp.getMediaLibrary\", filter, function (error, media) {\n      if (error) {\n        return fn(error);\n      }\n\n      fn(null, media.map(function (item) {\n        return fieldMap.from(item, \"media\");\n      }));\n    });\n  },\n  uploadFile: function (data, fn) {\n    this.authenticatedCall(\"wp.uploadFile\", fieldMap.to(data, \"file\"), fn);\n  }\n});\nconst wordpress_compatible = {\n  Client: Client,\n  createClient: function (settings) {\n    return new Client(settings);\n  },\n  fieldMap: fieldMap\n};\nexport default wordpress_compatible;","map":{"version":3,"names":["url","require","xmlrpc","fieldMap","extend","a","b","p","parseArguments","args","slice","call","filter","value","Client","settings","forEach","prop","Error","parsedUrl","parseUrl","rpc","secure","host","port","path","rejectUnauthorized","undefined","headers","Host","basic_auth","basicAuth","user","username","pass","password","blogId","wpUrl","urlParts","test","parse","protocol","hostname","prototype","method","arguments","fn","pop","push","methodCall","error","data","code","syscall","message","additional","res","statusCode","statusMessage","authenticatedCall","splice","apply","listMethods","getPost","id","fields","array","post","from","getPosts","type","post_type","status","post_status","orderby","posts","map","newPost","to","editPost","deletePost","getPostType","name","postType","getPostTypes","Array","isArray","postTypes","Object","keys","getTaxonomy","taxonomy","getTaxonomies","taxonomies","getTerm","term","getTerms","hideEmpty","hide_empty","terms","newTerm","editTerm","deleteTerm","getMediaItem","media","getMediaLibrary","item","uploadFile","wordpress_compatible","createClient"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/wordpress/lib/wordpress-compatible.js"],"sourcesContent":["var url = require(\"url\"),\n    xmlrpc = require(\"xmlrpc\"),\n    fieldMap = require(\"../../../../node_modules/wordpress/lib/fields.js\");\n\n// http://codex.wordpress.org/XML-RPC_Support\n// http://codex.wordpress.org/XML-RPC_WordPress_API\n\nfunction extend(a, b) {\n    for (var p in b) {\n        a[p] = b[p];\n    }\n\n    return a;\n}\n\nfunction parseArguments(args) {\n    return [].slice.call(args, 1)\n\n        // Remove null arguments\n        // Null values only exist for optional fields. As of WordPress 4.4,\n        // null is no longer treated the same as omitting the value. To\n        // compensate for this, we just drop the argument before calling\n        // into WordPress. See #25.\n        .filter(function (value) {\n            return value !== null;\n        });\n}\n\nfunction Client(settings) {\n    [\"url\", \"username\", \"password\"].forEach(function (prop) {\n        if (!settings[prop]) {\n            throw new Error(\"Missing required setting: \" + prop);\n        }\n    });\n\n    var parsedUrl = Client.parseUrl(settings.url);\n    this.rpc = xmlrpc[parsedUrl.secure ? \"createSecureClient\" : \"createClient\"]({\n        host: settings.host || parsedUrl.host,\n        port: parsedUrl.port,\n        path: parsedUrl.path,\n        rejectUnauthorized: settings.rejectUnauthorized !== undefined ? settings.rejectUnauthorized : true,\n\n        // Always set Host header in case we're pointing to a different server\n        // via settings.host\n        headers: {\n            Host: parsedUrl.host\n        },\n        basic_auth: !settings.basicAuth ? null : {\n            user: settings.basicAuth.username,\n            pass: settings.basicAuth.password\n        }\n    });\n    this.blogId = settings.blogId || 0;\n    this.username = settings.username;\n    this.password = settings.password;\n}\n\nClient.parseUrl = function (wpUrl) {\n    var urlParts, secure;\n\n    // allow URLs without a protocol\n    if (!(/\\w+:\\/\\//.test(wpUrl))) {\n        wpUrl = \"http://\" + wpUrl;\n    }\n    urlParts = url.parse(wpUrl);\n    secure = urlParts.protocol === \"https:\";\n\n    return {\n        host: urlParts.hostname,\n        port: urlParts.port || (secure ? 443 : 80),\n        // path: urlParts.path.replace(/\\/+$/, \"\") + \"/xmlrpc.php\",\n        path: urlParts.path,\n        secure: secure\n    };\n};\n\nextend(Client.prototype, {\n    call: function (method) {\n        var args = parseArguments(arguments),\n            fn = args.pop();\n\n        if (typeof fn !== \"function\") {\n            args.push(fn);\n            fn = null;\n        }\n\n        this.rpc.methodCall(method, args, function (error, data) {\n            if (!error) {\n                return fn(null, data);\n            }\n\n            if (error.code === \"ENOTFOUND\" && error.syscall === \"getaddrinfo\") {\n                error.message = \"Unable to connect to WordPress.\";\n            } else if (error.message === \"Unknown XML-RPC tag 'TITLE'\") {\n                var additional = error.res.statusCode;\n                if (error.res.statusMessage) {\n                    additional += \"; \" + error.res.statusMessage;\n                }\n\n                error.message = \"(\" + additional + \") \" + error.message;\n            }\n\n            fn(error);\n        });\n    },\n\n    authenticatedCall: function () {\n        var args = [].slice.call(arguments);\n        args.splice(1, 0, this.blogId, this.username, this.password);\n        this.call.apply(this, args);\n    },\n\n    listMethods: function (fn) {\n        this.call(\"system.listMethods\", fn);\n    }\n});\n\nextend(Client.prototype, {\n    getPost: function (id, fields, fn) {\n        if (typeof fields === \"function\") {\n            fn = fields;\n            fields = null;\n        }\n\n        if (fields) {\n            fields = fieldMap.array(fields, \"post\");\n        }\n\n        this.authenticatedCall(\"wp.getPost\", id, fields, function (error, post) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, fieldMap.from(post, \"post\"));\n        });\n    },\n\n    getPosts: function (filter, fields, fn) {\n        if (typeof filter === \"function\") {\n            fn = filter;\n            fields = null;\n            filter = {};\n        }\n\n        if (typeof fields === \"function\") {\n            fn = fields;\n            fields = null;\n        }\n\n        if (filter.type) {\n            filter.post_type = filter.type;\n            delete filter.type;\n        }\n\n        if (filter.status) {\n            filter.post_status = filter.status;\n            delete filter.status;\n        }\n\n        if (filter.orderby) {\n            filter.orderby = fieldMap.array([filter.orderby], \"post\")[0];\n        }\n\n        if (fields) {\n            fields = fieldMap.array(fields, \"post\");\n        }\n\n        this.authenticatedCall(\"wp.getPosts\", filter, fields, function (error, posts) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, posts.map(function (post) {\n                return fieldMap.from(post, \"post\");\n            }));\n        });\n    },\n\n    newPost: function (data, fn) {\n        this.authenticatedCall(\"wp.newPost\", fieldMap.to(data, \"post\"), fn);\n    },\n\n    // to remove a term, just set the terms and leave out the id that you want to remove\n    // to remove a custom field, pass the id with no key or value\n    editPost: function (id, data, fn) {\n        this.authenticatedCall(\"wp.editPost\", id, fieldMap.to(data, \"post\"), fn);\n    },\n\n    deletePost: function (id, fn) {\n        this.authenticatedCall(\"wp.deletePost\", id, fn);\n    },\n\n    getPostType: function (name, fields, fn) {\n        if (typeof fields === \"function\") {\n            fn = fields;\n            fields = null;\n        }\n\n        if (fields) {\n            fields = fieldMap.array(fields, \"postType\");\n        }\n\n        this.authenticatedCall(\"wp.getPostType\", name, fields, function (error, postType) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, fieldMap.from(postType, \"postType\"));\n        });\n    },\n\n    getPostTypes: function (filter, fields, fn) {\n        if (typeof filter === \"function\") {\n            fn = filter;\n            fields = null;\n            filter = {};\n        }\n\n        if (typeof fields === \"function\") {\n            fn = fields;\n            fields = null;\n        }\n\n        if (Array.isArray(filter)) {\n            fields = filter;\n            filter = {};\n        }\n\n        if (fields) {\n            fields = fieldMap.array(fields, \"postType\");\n        }\n\n        this.authenticatedCall(\"wp.getPostTypes\", filter, fields, function (error, postTypes) {\n            if (error) {\n                return fn(error);\n            }\n\n            Object.keys(postTypes).forEach(function (postType) {\n                postTypes[postType] = fieldMap.from(postTypes[postType], \"postType\");\n            });\n            fn(null, postTypes);\n        });\n    }\n});\n\nextend(Client.prototype, {\n    getTaxonomy: function (name, fn) {\n        this.authenticatedCall(\"wp.getTaxonomy\", name, function (error, taxonomy) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, fieldMap.from(taxonomy, \"taxonomy\"));\n        });\n    },\n\n    getTaxonomies: function (fn) {\n        this.authenticatedCall(\"wp.getTaxonomies\", function (error, taxonomies) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, taxonomies.map(function (taxonomy) {\n                return fieldMap.from(taxonomy, \"taxonomy\");\n            }));\n        });\n    },\n\n    getTerm: function (taxonomy, id, fn) {\n        this.authenticatedCall(\"wp.getTerm\", taxonomy, id, function (error, term) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, fieldMap.from(term, \"term\"));\n        });\n    },\n\n    getTerms: function (taxonomy, filter, fn) {\n        if (typeof filter === \"function\") {\n            fn = filter;\n            filter = {};\n        }\n\n        if (filter.hideEmpty) {\n            filter.hide_empty = filter.hideEmpty;\n            delete filter.hideEmpty;\n        }\n\n        if (filter.orderby) {\n            filter.orderby = fieldMap.array([filter.orderby], \"term\")[0];\n        }\n\n        this.authenticatedCall(\"wp.getTerms\", taxonomy, filter, function (error, terms) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, terms.map(function (term) {\n                return fieldMap.from(term, \"term\");\n            }));\n        });\n    },\n\n    newTerm: function (data, fn) {\n        this.authenticatedCall(\"wp.newTerm\", fieldMap.to(data, \"term\"), fn);\n    },\n\n    editTerm: function (id, data, fn) {\n        this.authenticatedCall(\"wp.editTerm\", id, fieldMap.to(data, \"term\"), fn);\n    },\n\n    deleteTerm: function (taxonomy, id, fn) {\n        this.authenticatedCall(\"wp.deleteTerm\", taxonomy, id, fn);\n    }\n});\n\nextend(Client.prototype, {\n    getMediaItem: function (id, fn) {\n        this.authenticatedCall(\"wp.getMediaItem\", id, function (error, media) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, fieldMap.from(media, \"media\"));\n        });\n    },\n\n    getMediaLibrary: function (filter, fn) {\n        if (typeof filter === \"function\") {\n            fn = filter;\n            filter = {};\n        }\n\n        this.authenticatedCall(\"wp.getMediaLibrary\", filter, function (error, media) {\n            if (error) {\n                return fn(error);\n            }\n\n            fn(null, media.map(function (item) {\n                return fieldMap.from(item, \"media\");\n            }));\n        });\n    },\n\n    uploadFile: function (data, fn) {\n        this.authenticatedCall(\"wp.uploadFile\", fieldMap.to(data, \"file\"), fn);\n    }\n});\n\nconst wordpress_compatible = {\n    Client: Client,\n\n    createClient: function (settings) {\n        return new Client(settings);\n    },\n\n    fieldMap: fieldMap\n};\n\nexport default wordpress_compatible;"],"mappings":"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"},"metadata":{},"sourceType":"module"}