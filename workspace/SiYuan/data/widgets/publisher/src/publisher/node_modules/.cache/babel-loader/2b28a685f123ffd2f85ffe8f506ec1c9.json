{"ast":null,"code":"const nconf = require('nconf'); // const path = require('path')\n// const resolve = (dir) => path.join(__dirname, dir)\n\n\nexport function getConf(key) {\n  const confPath = \"./data/conf.json\"; // resolve(\"./data/conf.json\")\n\n  nconf.file({\n    file: confPath,\n    dir: \"./\"\n  });\n  return nconf.get(key);\n}\nexport async function setConf(key, value) {\n  const confPath = \"./data/conf.json\"; // resolve(\"./data/conf.json\")\n\n  nconf.file({\n    file: confPath,\n    dir: \"./\"\n  });\n  return new Promise((resolve, reject) => {\n    nconf.set(key, value);\n    nconf.save(confPath, function (err, data) {\n      if (err) {\n        reject(err);\n      }\n\n      if (data) {\n        console.log(\"setConf结果=>\", JSON.parse(data.toString()));\n        resolve(data);\n      }\n    });\n  });\n} // export async function setConfList(confList) {\n//     if (!confList || confList.length === 0) {\n//         console.error(\"conf cannot be empty\")\n//         return\n//     }\n//\n//     const confPath = resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath});\n//\n//     return new Promise((resolve, reject) => {\n//         for (let i = 0; i < confList.length; i++) {\n//             const conf = confList[i];\n//             nconf.set(conf.key, conf.value)\n//         }\n//\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }","map":{"version":3,"names":["nconf","require","getConf","key","confPath","file","dir","get","setConf","value","Promise","resolve","reject","set","save","err","data","console","log","JSON","parse","toString"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/config.js"],"sourcesContent":["const nconf = require('nconf');\n// const path = require('path')\n// const resolve = (dir) => path.join(__dirname, dir)\n\nexport function getConf(key) {\n    const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n    nconf.file({file: confPath, dir: \"./\"});\n\n    return nconf.get(key)\n}\n\nexport async function setConf(key, value) {\n    const confPath = \"./data/conf.json\" // resolve(\"./data/conf.json\")\n    nconf.file({file: confPath, dir: \"./\"});\n\n    return new Promise((resolve, reject) => {\n        nconf.set(key, value)\n        nconf.save(confPath, function (err, data) {\n            if (err) {\n                reject(err)\n            }\n\n            if (data) {\n                console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n                resolve(data)\n            }\n        })\n    })\n}\n\n// export async function setConfList(confList) {\n//     if (!confList || confList.length === 0) {\n//         console.error(\"conf cannot be empty\")\n//         return\n//     }\n//\n//     const confPath = resolve(\"./data/conf.json\")\n//     nconf.file({file: confPath});\n//\n//     return new Promise((resolve, reject) => {\n//         for (let i = 0; i < confList.length; i++) {\n//             const conf = confList[i];\n//             nconf.set(conf.key, conf.value)\n//         }\n//\n//         nconf.save(confPath, function (err, data) {\n//             if (err) {\n//                 reject(err)\n//             }\n//\n//             if (data) {\n//                 console.log(\"setConf结果=>\", JSON.parse(data.toString()))\n//                 resolve(data)\n//             }\n//         })\n//     })\n// }"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB,C,CACA;AACA;;;AAEA,OAAO,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;EACzB,MAAMC,QAAQ,GAAG,kBAAjB,CADyB,CACW;;EACpCJ,KAAK,CAACK,IAAN,CAAW;IAACA,IAAI,EAAED,QAAP;IAAiBE,GAAG,EAAE;EAAtB,CAAX;EAEA,OAAON,KAAK,CAACO,GAAN,CAAUJ,GAAV,CAAP;AACH;AAED,OAAO,eAAeK,OAAf,CAAuBL,GAAvB,EAA4BM,KAA5B,EAAmC;EACtC,MAAML,QAAQ,GAAG,kBAAjB,CADsC,CACF;;EACpCJ,KAAK,CAACK,IAAN,CAAW;IAACA,IAAI,EAAED,QAAP;IAAiBE,GAAG,EAAE;EAAtB,CAAX;EAEA,OAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;IACpCZ,KAAK,CAACa,GAAN,CAAUV,GAAV,EAAeM,KAAf;IACAT,KAAK,CAACc,IAAN,CAAWV,QAAX,EAAqB,UAAUW,GAAV,EAAeC,IAAf,EAAqB;MACtC,IAAID,GAAJ,EAAS;QACLH,MAAM,CAACG,GAAD,CAAN;MACH;;MAED,IAAIC,IAAJ,EAAU;QACNC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,IAAI,CAACC,KAAL,CAAWJ,IAAI,CAACK,QAAL,EAAX,CAA3B;QACAV,OAAO,CAACK,IAAD,CAAP;MACH;IACJ,CATD;EAUH,CAZM,CAAP;AAaH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}