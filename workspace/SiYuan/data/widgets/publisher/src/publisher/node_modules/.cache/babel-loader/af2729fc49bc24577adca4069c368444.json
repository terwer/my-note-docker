{"ast":null,"code":"import { getPage, getWidgetId } from \"../lib/siyuanUtil\";\nimport { getConf, setConf } from \"../lib/config\";\nimport { getApiParams } from \"../lib/publish/publishUtil\";\nimport { slugify } from 'transliteration';\nimport jsYaml from \"js-yaml\";\nimport { mdToPlanText } from \"../lib/htmlUtil\"; // const nodejieba = require(\"nodejieba\");\n\n/**\n * 获取本地缓存的思源笔记页面ID\n * @param force\n * true 强制调用查询不获取缓存\n * false 优先读取本地缓存，缓存不存在再去查询\n * @returns {Promise<*|string>}\n */\n\nexport async function getSiyuanPageId(force) {\n  const page = await getSiyuanPage(force);\n\n  if (!page) {\n    return;\n  }\n\n  const pageId = page.root_id || \"\";\n  console.log(\"获取思源笔记页面ID=>\", pageId);\n  return pageId;\n}\n/**\n * 获取本地缓存的思源笔记页面信息（不是实时的）\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<any>}\n */\n\nexport async function getSiyuanPage(force) {\n  const widgetId = await getWidgetId();\n  console.log(\"获取挂件的widgetId=>\", widgetId); // 默认读取缓存\n\n  const pageObj = getConf(widgetId);\n\n  if (!force && pageObj) {\n    console.log(\"获取本地缓存的思源笔记页面信息（不是实时的）=>\", pageObj);\n    return pageObj;\n  } // 如果本地不存在，或者需要强制读取，调用api查询\n\n\n  const page = await getPage(widgetId);\n\n  if (page) {\n    await setConf(widgetId, page);\n    console.warn(\"调用API设置查询思源页面信息并更新本地缓存\", page);\n  }\n\n  return page;\n}\n/**\n * 根据平台类型获取发布状态\n * @param apiType 平台类型\n * @param meta 元数据\n */\n\nexport function getPublishStatus(apiType, meta) {\n  const postidKey = getApiParams(apiType).postidKey;\n  const postId = meta[postidKey] || \"\";\n  return postId === \"\";\n}\n/**\n * 中文翻译成英文别名\n * @param q\n * @returns {Promise<unknown>}\n */\n\nexport async function zhSlugify(q) {\n  // const v = await fetch('https://clients5.google.com/translate_a/t?client=dict-chrome-ex&sl=auto&tl=en-US&q=' + q);\n  const v = await fetch('https://api.terwer.space/api/translate?q=' + q);\n  let json = await v.json();\n  let res = json[0][0];\n  res = res.replaceAll(/-/g, \"\");\n  console.log(\"res=>\", res);\n  return slugify(res);\n}\nexport function yaml2Obj(yaml) {\n  let doc = \"\"; // Get document, or throw exception on error\n\n  try {\n    yaml = yaml.replace(\"---\\n\", \"\");\n    yaml = yaml.replace(\"---\", \"\");\n    doc = jsYaml.load(yaml); // console.log(doc);\n  } catch (e) {\n    console.error(e);\n  }\n\n  return doc;\n}\nexport function obj2yaml(obj) {\n  // https://npmmirror.com/package/js-yaml\n  let res = jsYaml.dump(obj);\n  res = \"---\\n\" + res + \"---\";\n  return res;\n} // function test() {\n//     const obj = {\n//         title: \"把npm依赖转换为本地依赖\",\n//         date: \"2022-07-09 15:16:00\",\n//         permalink: \"/post/convert-npm-dependencies-to-local.html\",\n//         meta: [\n//             {\n//                 name: \"keywords\",\n//                 content: \"npm dependency\"\n//             },\n//             {\n//                 name: \"description\",\n//                 content: \"把npm依赖转换为本地依赖有的时候，当我们要使用额第三方库停止维护之后，我们想自己修改代码才能达到某个需求。但是npm默认是只读的，下次运行依赖管理会覆盖代码。缘由要在上面陈述的情况，我们可以把npm依赖库转换为本地依赖，这样就不再受包管理器约束，我们就可以自定义修改代码了方案先删除npm中依赖yarnremove@oaktreehouse/vuepresspluginencrypt森岛帆高\"\n//             }\n//         ],\n//         categories: [\n//             \"博文\", \"实用技巧\"\n//         ],\n//         tags: [\n//             \"npm\", \"dependency\"\n//         ],\n//         author: {\n//             name: \"terwer\",\n//             link: \"https://github.com/terwer\"\n//         }\n//     };\n//     const yamlResult = obj2yaml(obj)\n//     console.log(\"yamlResult=>\")\n//     console.log(yamlResult)\n//\n//     const objResult = yaml2Obj(yamlResult)\n//     console.log(\"objResult=>\")\n//     console.log(objResult)\n// }\n//\n// test()\n// babel-node src/lib/util.js\n\n/**\n * 给日期添加小时\n * @param date\n * @param numOfHours\n * @returns {*}\n */\n\nconst addHoursToDate = function (date, numOfHours) {\n  date.setTime(date.getTime() + numOfHours * 60 * 60 * 1000);\n  return date;\n};\n/**\n * 转换ISO日期为数字日期\n * @param str '2022-07-18T06:25:48.000Z\n * @param isAddTimeZone 是否增加时区（默认不增加）\n * @returns {string|*}\n */\n\n\nexport const formatIsoToNumDate = (str, isAddTimeZone) => {\n  if (!str) {\n    return \"\";\n  }\n\n  let newstr = str; // https://www.regextester.com/112232\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n\n  const isoDateRegex = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(.\\d{3})Z$/gm;\n  const matches = newstr.match(isoDateRegex);\n\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    let newmatch = match;\n\n    if (isAddTimeZone) {\n      console.warn(\"修复时区，ISO日期默认晚8小时\"); // ISO日期默认晚8小时\n\n      console.log(addHoursToDate(new Date(match), 8));\n      newmatch = addHoursToDate(new Date(match), 8).toISOString();\n    }\n\n    const dts = newmatch.split(\"T\");\n    const d = dts[0].replaceAll(/-/g, \"\");\n    const t = dts[1].split(\".\")[0].replaceAll(/:/g, \"\");\n    const result = d + t;\n    newstr = newstr.replace(match, result);\n    console.log(\"formatIsoDate match=>\", match);\n    console.log(\"formatIsoDate result=>\", result);\n  }\n\n  return newstr;\n};\n/**\n * 转换ISO日期为中文日期\n * @param str '2022-07-18T06:25:48.000Z\n * @param isAddTimeZone 是否增加时区（默认不增加）\n * @returns {string|*}\n */\n\nexport const formatIsoToZhDate = (str, isAddTimeZone) => {\n  if (!str) {\n    return \"\";\n  }\n\n  let newstr = str; // https://www.regextester.com/112232\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n\n  const isoDateRegex = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(.\\d{3})Z$/gm;\n  const matches = newstr.match(isoDateRegex);\n\n  for (let i = 0; i < matches.length; i++) {\n    const match = matches[i];\n    let newmatch = match;\n\n    if (isAddTimeZone) {\n      // ISO日期默认晚8小时\n      console.log(addHoursToDate(new Date(match), 8));\n      newmatch = addHoursToDate(new Date(match), 8).toISOString();\n    }\n\n    const dts = newmatch.split(\"T\");\n    const d = dts[0];\n    const t = dts[1].split(\".\")[0];\n    const result = d + \" \" + t;\n    newstr = newstr.replace(match, result);\n    console.log(\"formatZhDate match=>\", match);\n    console.log(\"formatZhDate result=>\", result);\n  } // console.log(\"formatZhDate=>\", newstr)\n\n\n  return newstr;\n};\n/**\n * 转换数字日期为中文日期\n * @param str '20220718142548'\n * @returns {string|*}\n */\n\nexport const formatNumToZhDate = str => {\n  if (!str) {\n    return \"\";\n  }\n\n  let newstr = str;\n  const onlyNumbers = newstr.replace(/\\D/g, \"\"); // console.log(\"onlyNumbers=>\", onlyNumbers)\n\n  const year = onlyNumbers.slice(0, 4);\n  const month = onlyNumbers.slice(4, 6);\n  const day = onlyNumbers.slice(6, 8);\n  const hour = onlyNumbers.slice(8, 10);\n  const min = onlyNumbers.slice(10, 12);\n  const sec = onlyNumbers.slice(12, 14);\n  let datestr = year;\n\n  if (!month) {\n    datestr = year;\n  } else if (!day) {\n    datestr = year + \"-\" + month;\n  } else if (!hour) {\n    datestr = year + \"-\" + month + \"-\" + day;\n  } else if (!min) {\n    datestr = year + \"-\" + month + \"-\" + day + \" \" + hour;\n  } else if (!sec) {\n    datestr = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + min;\n  } else {\n    datestr = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + min + \":\" + sec;\n  }\n\n  console.log(\"formatNumToZhDate str=>\", str);\n  console.log(\"formatNumToZhDate datestr=>\", datestr);\n  return datestr;\n}; // get a Date object with the specified Time zone\n\nfunction changeTimeZone(date, timeZone) {\n  if (typeof date === 'string') {\n    return new Date(new Date(date).toLocaleString('zh-CN', {\n      timeZone\n    }));\n  }\n\n  return new Date(date.toLocaleString('zh-CN', {\n    timeZone\n  }));\n}\n/**\n * 字符转Date\n * @param dateString dateString should be in ISO format: \"yyyy-mm-dd\", \"yyyy-mm\" or \"yyyy\" or yyyymmddsss\n * @returns {Date}\n */\n\n\nexport function covertStringToDate(dateString) {\n  const datestr = formatNumToZhDate(dateString); // console.log(\"datestr=>\", datestr)\n\n  return changeTimeZone(datestr, 'Asia/Shanghai');\n} // const date = covertStringToDate('20220718142548');\n// // const timeZone = 'Asia/Shanghai'\n// // const datestr = date.toLocaleString('zh-CN', {\n// //     timeZone,\n// // });\n// console.log(\"date.toISOString=>\")\n// console.log(date.toISOString())\n//\n// const obj = {\n//     title: \"测试，这里有T，也有.000Z啊\",\n//     date: date\n// }\n// const yaml = obj2yaml(obj)\n// console.log(\"yaml=>\")\n// console.log(yaml)\n//\n// const fmt = formatIsoToZhDate(yaml)\n// console.log(\"fmt=>\")\n// console.log(fmt)\n//\n// const fmt2 = formatIsoToNumDate(yaml)\n// console.log(\"fmt2=>\")\n// console.log(fmt2)\n\n/**\n * 文本分词\n * @param words 文本\n */\n\nexport async function cutWords(words) {\n  // https://github.com/yanyiwu/nodejieba\n  words = mdToPlanText(words);\n  console.log(\"准备开始分词，原文=>\", words); // https://github.com/ddsol/speedtest.net/issues/112\n  // 浏览器和webpack不支持，只有node能用\n  // const result = nodejieba.cut(words);\n  // https://api.terwer.space/api/jieba?q=test\n  // 需要排除的字符\n\n  const excludeWords = ['\\\\d*/\\\\d/\\\\d*', '[、|\\\\\\\\]', '[，|,]', '\\\\d', '/', '-'];\n\n  for (let i = 0; i < excludeWords.length; i++) {\n    const regex = new RegExp(excludeWords[i], \"g\");\n    words = words.replaceAll(regex, \"\");\n  }\n\n  const v = await fetch('https://api.terwer.space/api/jieba?q=' + words);\n  let json = await v.json(); // const result = \"浏览器和webpack不支持，只有node能用，作者仓库： https://github.com/yanyiwu/nodejieba ，在线版本：http://cppjieba-webdemo.herokuapp.com 。\"\n  // alert(result)\n\n  console.log(\"分词完毕，结果=>\", json.result);\n  return json.result;\n}\n/**\n * 统计分词并按照次数排序\n * @param words 分词数组\n * @param len 长度\n * @returns {string[]}\n */\n\nfunction countWords(words, len) {\n  // 统计\n  let wordobj = words.reduce(function (count, word) {\n    // 排除无意义的词\n    if (word === \"的\") {\n      count[word] = 0;\n      return count;\n    } // eslint-disable-next-line no-prototype-builtins\n\n\n    count[word] = count.hasOwnProperty(word) ? count[word] + 1 : 1;\n    return count;\n  }, {}); // 排序\n\n  const wordarr = Object.keys(wordobj).sort(function (a, b) {\n    return wordobj[b] - wordobj[a];\n  });\n\n  if (!len || len === 0) {\n    return wordarr;\n  }\n\n  return wordarr.slice(0, len);\n}\n/**\n * 从分词中提取热门标签\n */\n\n\nexport function jiebaToHotWords(words, len) {\n  // const words = [\"文档\", \"协同\", \"开发\", \"2022/05/25\", \"需求\", \"评审\", \"1\", \"、\", \"后台\", \"配置\", \"，\", \"可\", \"选择\", \"wps\", \"或者\", \"石墨\", \"文档\", \"2022/05/31ui\", \"评审\", \"2022/06/10\", \"开发\", \"遇到\", \"的\", \"问题\", \"1\", \"、\", \"未\", \"开启\", \"文档\", \"中台\", \"时候\", \"的\", \"提示\", \"，\", \"以及\", \"其他\", \"页面\", \"的\", \"缺省\", \"样式\", \"。\", \"2022/6/24\", \"遗留问题\", \"1\", \"、\", \"分享\", \"发送\", \"待办\", \"-\", \"已\", \"完成\", \"2\", \"、\", \"团队\", \"文档\", \"发送\", \"待办\", \"-\", \"已\", \"完成\", \"3\", \"、\", \"权限\", \"-\", \"已\", \"完成\", \"4\", \"、\", \"团队\", \"文档\", \"传\", \"fdteamid\", \"，\", \"后台\", \"做\", \"权限\", \"判断\", \"，\", \"如果\", \"不是\", \"这个\", \"团队\", \"的人\", \"，\", \"提示\", \"无\", \"权限\", \"页面\", \"-\", \"已\", \"完成\", \"5\", \"、\", \"看看\", \"能\", \"不能\", \"隐藏\", \"默认\", \"标题\", \"-todo6\", \"、\", \"excel\", \"和\", \"ppt\", \"的\", \"知识\", \"助手\", \"不\", \"做\", \"-\", \"已\", \"完成\", \"2022/7/8\", \"遗留问题\", \"1\", \"、\", \"文档\", \"和\", \"模板\", \"的\", \"拷贝\", \"、\", \"打印\", \"2\", \"、\", \"收藏夹\", \"重复\", \"收藏\", \"2022/7/19\", \"遗留问题\", \"1\", \"、\", \"文档\", \"知识\", \"助手\", \"太长加\", \"滚动条\", \"2\", \"、\", \"附件\", \"的\", \"显示\", \"与\", \"预览\", \"3\", \"、\", \"收起\", \"4\", \"、\", \"自定义\", \"confirm\", \"弹窗\", \"5\", \"、\", \"缺省\", \"页面\", \"2022/7/19\", \"待转\", \"单\", \"问题\", \"1\", \"、\", \"搜索\", \"关键字\", \"去掉\", \"2\", \"、\", \"未\", \"选中\", \"的\", \"时候\", \"按钮\", \"变成\", \"全部\", \"3\", \"、\", \"右侧\", \"滚动条\", \"、\", \"分页\", \"4\", \"、\", \"带\", \"表格\", \"收藏\", \"2022/7/20\", \"待\", \"解决问题\", \"1\", \"、\", \"excel\", \"、\", \"ppt\", \"格式\", \"时\", \"，\", \"点\", \"不\", \"开\", \"右侧\", \"工具栏\", \"图标\", \"2\", \"、\", \"段落\", \"收藏\", \"不能\", \"用\", \"3\", \"、\", \"详情\", \"页面\", \"调整\", \"4\", \"、\", \"筛选\", \"项\", \"修复\", \"5\", \"、\", \"git\", \"无法访问\", \"1\", \"、\", \"摘要\", \"、\", \"正文\", \"（\", \"正文\", \"图片\", \"）\", \"、\", \"附件\", \"2\", \"、\", \"搜索\", \"结果\", \"，\", \"状态\", \"30\", \"，\", \"有\", \"可\", \"阅读\", \"权限\", \"（\", \"确认\", \"）\", \"3\", \"、\", \"链接\", \"只\", \"展示\", \"图标\", \"放在\", \"标题\", \"右侧\", \"1\", \"、\", \"插入\", \"图片\", \"、\", \"表格\", \"2\", \"、\", \"维基\", \"目录\", \"3\", \"、\", \"搜索\", \"结果\", \"只\", \"显示\", \"文档\", \"不\", \"显示\", \"附件\", \"4\", \"、\", \"知识\", \"助手\", \"切换\", \"tab\", \"触发\", \"数据\", \"更新\"]\n  // const len = 5\n  const res = countWords(words, len); // console.log(res)\n\n  return res;\n} // jiebaToHotWords()","map":{"version":3,"names":["getPage","getWidgetId","getConf","setConf","getApiParams","slugify","jsYaml","mdToPlanText","getSiyuanPageId","force","page","getSiyuanPage","pageId","root_id","console","log","widgetId","pageObj","warn","getPublishStatus","apiType","meta","postidKey","postId","zhSlugify","q","v","fetch","json","res","replaceAll","yaml2Obj","yaml","doc","replace","load","e","error","obj2yaml","obj","dump","addHoursToDate","date","numOfHours","setTime","getTime","formatIsoToNumDate","str","isAddTimeZone","newstr","isoDateRegex","matches","match","i","length","newmatch","Date","toISOString","dts","split","d","t","result","formatIsoToZhDate","formatNumToZhDate","onlyNumbers","year","slice","month","day","hour","min","sec","datestr","changeTimeZone","timeZone","toLocaleString","covertStringToDate","dateString","cutWords","words","excludeWords","regex","RegExp","countWords","len","wordobj","reduce","count","word","hasOwnProperty","wordarr","Object","keys","sort","a","b","jiebaToHotWords"],"sources":["/Users/terwer/Documents/mydocs/my-note-docker/workspace/SiYuan/data/widgets/publisher/src/publisher/src/lib/util.js"],"sourcesContent":["import {getPage, getWidgetId} from \"../lib/siyuanUtil\";\nimport {getConf, setConf} from \"../lib/config\";\nimport {getApiParams} from \"../lib/publish/publishUtil\";\nimport {slugify} from 'transliteration';\nimport jsYaml from \"js-yaml\";\nimport {mdToPlanText} from \"../lib/htmlUtil\";\n\n// const nodejieba = require(\"nodejieba\");\n\n/**\n * 获取本地缓存的思源笔记页面ID\n * @param force\n * true 强制调用查询不获取缓存\n * false 优先读取本地缓存，缓存不存在再去查询\n * @returns {Promise<*|string>}\n */\nexport async function getSiyuanPageId(force) {\n    const page = await getSiyuanPage(force);\n    if (!page) {\n        return\n    }\n\n    const pageId = page.root_id || \"\"\n    console.log(\"获取思源笔记页面ID=>\", pageId)\n    return pageId\n}\n\n/**\n * 获取本地缓存的思源笔记页面信息（不是实时的）\n * @param force true代表强制调用查询不获取缓存\n * @returns {Promise<any>}\n */\nexport async function getSiyuanPage(force) {\n    const widgetId = await getWidgetId()\n    console.log(\"获取挂件的widgetId=>\", widgetId)\n    // 默认读取缓存\n    const pageObj = getConf(widgetId);\n    if (!force && pageObj) {\n        console.log(\"获取本地缓存的思源笔记页面信息（不是实时的）=>\", pageObj)\n        return pageObj;\n    }\n\n    // 如果本地不存在，或者需要强制读取，调用api查询\n    const page = await getPage(widgetId);\n    if (page) {\n        await setConf(widgetId, page)\n        console.warn(\"调用API设置查询思源页面信息并更新本地缓存\", page)\n    }\n    return page;\n}\n\n/**\n * 根据平台类型获取发布状态\n * @param apiType 平台类型\n * @param meta 元数据\n */\nexport function getPublishStatus(apiType, meta) {\n    const postidKey = getApiParams(apiType).postidKey;\n    const postId = meta[postidKey] || \"\";\n    return postId === \"\";\n}\n\n/**\n * 中文翻译成英文别名\n * @param q\n * @returns {Promise<unknown>}\n */\nexport async function zhSlugify(q) {\n    // const v = await fetch('https://clients5.google.com/translate_a/t?client=dict-chrome-ex&sl=auto&tl=en-US&q=' + q);\n    const v = await fetch('https://api.terwer.space/api/translate?q=' + q);\n    let json = await v.json()\n    let res = json[0][0];\n    res = res.replaceAll(/-/g, \"\");\n    console.log(\"res=>\", res)\n    return slugify(res);\n}\n\nexport function yaml2Obj(yaml) {\n    let doc = \"\";\n    // Get document, or throw exception on error\n    try {\n        yaml = yaml.replace(\"---\\n\", \"\")\n        yaml = yaml.replace(\"---\", \"\")\n        doc = jsYaml.load(yaml);\n        // console.log(doc);\n    } catch (e) {\n        console.error(e);\n    }\n    return doc;\n}\n\nexport function obj2yaml(obj) {\n    // https://npmmirror.com/package/js-yaml\n    let res = jsYaml.dump(obj);\n    res = \"---\\n\" + res + \"---\"\n    return res;\n}\n\n// function test() {\n//     const obj = {\n//         title: \"把npm依赖转换为本地依赖\",\n//         date: \"2022-07-09 15:16:00\",\n//         permalink: \"/post/convert-npm-dependencies-to-local.html\",\n//         meta: [\n//             {\n//                 name: \"keywords\",\n//                 content: \"npm dependency\"\n//             },\n//             {\n//                 name: \"description\",\n//                 content: \"把npm依赖转换为本地依赖有的时候，当我们要使用额第三方库停止维护之后，我们想自己修改代码才能达到某个需求。但是npm默认是只读的，下次运行依赖管理会覆盖代码。缘由要在上面陈述的情况，我们可以把npm依赖库转换为本地依赖，这样就不再受包管理器约束，我们就可以自定义修改代码了方案先删除npm中依赖yarnremove@oaktreehouse/vuepresspluginencrypt森岛帆高\"\n//             }\n//         ],\n//         categories: [\n//             \"博文\", \"实用技巧\"\n//         ],\n//         tags: [\n//             \"npm\", \"dependency\"\n//         ],\n//         author: {\n//             name: \"terwer\",\n//             link: \"https://github.com/terwer\"\n//         }\n//     };\n//     const yamlResult = obj2yaml(obj)\n//     console.log(\"yamlResult=>\")\n//     console.log(yamlResult)\n//\n//     const objResult = yaml2Obj(yamlResult)\n//     console.log(\"objResult=>\")\n//     console.log(objResult)\n// }\n//\n// test()\n\n// babel-node src/lib/util.js\n\n/**\n * 给日期添加小时\n * @param date\n * @param numOfHours\n * @returns {*}\n */\nconst addHoursToDate = function (date, numOfHours) {\n    date.setTime(date.getTime() + numOfHours * 60 * 60 * 1000);\n    return date;\n}\n\n/**\n * 转换ISO日期为数字日期\n * @param str '2022-07-18T06:25:48.000Z\n * @param isAddTimeZone 是否增加时区（默认不增加）\n * @returns {string|*}\n */\nexport const formatIsoToNumDate = (str, isAddTimeZone) => {\n    if (!str) {\n        return \"\";\n    }\n    let newstr = str;\n\n    // https://www.regextester.com/112232\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n    const isoDateRegex = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(.\\d{3})Z$/gm;\n    const matches = newstr.match(isoDateRegex);\n    for (let i = 0; i < matches.length; i++) {\n        const match = matches[i];\n\n        let newmatch = match;\n        if (isAddTimeZone) {\n            console.warn(\"修复时区，ISO日期默认晚8小时\")\n            // ISO日期默认晚8小时\n            console.log(addHoursToDate(new Date(match), 8))\n            newmatch = addHoursToDate(new Date(match), 8).toISOString()\n        }\n\n        const dts = newmatch.split(\"T\")\n        const d = dts[0].replaceAll(/-/g, \"\")\n        const t = dts[1].split(\".\")[0].replaceAll(/:/g, \"\")\n\n        const result = d + t;\n\n        newstr = newstr.replace(match, result)\n        console.log(\"formatIsoDate match=>\", match)\n        console.log(\"formatIsoDate result=>\", result)\n    }\n\n    return newstr;\n}\n\n/**\n * 转换ISO日期为中文日期\n * @param str '2022-07-18T06:25:48.000Z\n * @param isAddTimeZone 是否增加时区（默认不增加）\n * @returns {string|*}\n */\nexport const formatIsoToZhDate = (str, isAddTimeZone) => {\n    if (!str) {\n        return \"\";\n    }\n    let newstr = str;\n\n    // https://www.regextester.com/112232\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match\n    const isoDateRegex = /(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(.\\d{3})Z$/gm;\n    const matches = newstr.match(isoDateRegex);\n    for (let i = 0; i < matches.length; i++) {\n        const match = matches[i];\n\n        let newmatch = match;\n        if (isAddTimeZone) {\n            // ISO日期默认晚8小时\n            console.log(addHoursToDate(new Date(match), 8))\n            newmatch = addHoursToDate(new Date(match), 8).toISOString()\n        }\n\n        const dts = newmatch.split(\"T\")\n        const d = dts[0]\n        const t = dts[1].split(\".\")[0]\n\n        const result = d + \" \" + t;\n\n        newstr = newstr.replace(match, result)\n        console.log(\"formatZhDate match=>\", match)\n        console.log(\"formatZhDate result=>\", result)\n    }\n\n    // console.log(\"formatZhDate=>\", newstr)\n    return newstr;\n}\n\n/**\n * 转换数字日期为中文日期\n * @param str '20220718142548'\n * @returns {string|*}\n */\nexport const formatNumToZhDate = (str) => {\n    if (!str) {\n        return \"\";\n    }\n    let newstr = str;\n\n    const onlyNumbers = newstr.replace(/\\D/g, \"\");\n    // console.log(\"onlyNumbers=>\", onlyNumbers)\n    const year = onlyNumbers.slice(0, 4)\n    const month = onlyNumbers.slice(4, 6)\n    const day = onlyNumbers.slice(6, 8)\n    const hour = onlyNumbers.slice(8, 10)\n    const min = onlyNumbers.slice(10, 12)\n    const sec = onlyNumbers.slice(12, 14)\n\n    let datestr = year;\n    if (!month) {\n        datestr = year;\n    } else if (!day) {\n        datestr = year + \"-\" + month\n    } else if (!hour) {\n        datestr = year + \"-\" + month + \"-\" + day\n    } else if (!min) {\n        datestr = year + \"-\" + month + \"-\" + day + \" \" + hour\n    } else if (!sec) {\n        datestr = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + min\n    } else {\n        datestr = year + \"-\" + month + \"-\" + day + \" \" + hour + \":\" + min + \":\" + sec\n    }\n\n    console.log(\"formatNumToZhDate str=>\", str)\n    console.log(\"formatNumToZhDate datestr=>\", datestr)\n    return datestr;\n}\n\n// get a Date object with the specified Time zone\nfunction changeTimeZone(date, timeZone) {\n    if (typeof date === 'string') {\n        return new Date(\n            new Date(date).toLocaleString('zh-CN', {\n                timeZone,\n            }),\n        );\n    }\n\n    return new Date(\n        date.toLocaleString('zh-CN', {\n            timeZone,\n        }),\n    );\n}\n\n/**\n * 字符转Date\n * @param dateString dateString should be in ISO format: \"yyyy-mm-dd\", \"yyyy-mm\" or \"yyyy\" or yyyymmddsss\n * @returns {Date}\n */\nexport function covertStringToDate(dateString) {\n    const datestr = formatNumToZhDate(dateString);\n\n    // console.log(\"datestr=>\", datestr)\n    return changeTimeZone(datestr, 'Asia/Shanghai')\n}\n\n// const date = covertStringToDate('20220718142548');\n// // const timeZone = 'Asia/Shanghai'\n// // const datestr = date.toLocaleString('zh-CN', {\n// //     timeZone,\n// // });\n// console.log(\"date.toISOString=>\")\n// console.log(date.toISOString())\n//\n// const obj = {\n//     title: \"测试，这里有T，也有.000Z啊\",\n//     date: date\n// }\n// const yaml = obj2yaml(obj)\n// console.log(\"yaml=>\")\n// console.log(yaml)\n//\n// const fmt = formatIsoToZhDate(yaml)\n// console.log(\"fmt=>\")\n// console.log(fmt)\n//\n// const fmt2 = formatIsoToNumDate(yaml)\n// console.log(\"fmt2=>\")\n// console.log(fmt2)\n\n/**\n * 文本分词\n * @param words 文本\n */\nexport async function cutWords(words) {\n    // https://github.com/yanyiwu/nodejieba\n    words = mdToPlanText(words)\n    console.log(\"准备开始分词，原文=>\", words)\n    // https://github.com/ddsol/speedtest.net/issues/112\n    // 浏览器和webpack不支持，只有node能用\n    // const result = nodejieba.cut(words);\n    // https://api.terwer.space/api/jieba?q=test\n\n    // 需要排除的字符\n    const excludeWords = ['\\\\d*/\\\\d/\\\\d*', '[、|\\\\\\\\]', '[，|,]', '\\\\d', '/', '-']\n    for (let i = 0; i < excludeWords.length; i++) {\n        const regex = new RegExp(excludeWords[i], \"g\");\n        words = words.replaceAll(regex, \"\")\n    }\n\n    const v = await fetch('https://api.terwer.space/api/jieba?q=' + words);\n    let json = await v.json()\n    // const result = \"浏览器和webpack不支持，只有node能用，作者仓库： https://github.com/yanyiwu/nodejieba ，在线版本：http://cppjieba-webdemo.herokuapp.com 。\"\n    // alert(result)\n    console.log(\"分词完毕，结果=>\", json.result);\n    return json.result;\n}\n\n/**\n * 统计分词并按照次数排序\n * @param words 分词数组\n * @param len 长度\n * @returns {string[]}\n */\nfunction countWords(words, len) {\n    // 统计\n    let wordobj = words.reduce(function (count, word) {\n        // 排除无意义的词\n        if(word === \"的\"){\n            count[word] = 0;\n            return count;\n        }\n\n        // eslint-disable-next-line no-prototype-builtins\n        count[word] = count.hasOwnProperty(word) ? count[word] + 1 : 1;\n        return count;\n    }, {});\n\n    // 排序\n    const wordarr = Object.keys(wordobj).sort(function (a, b) {\n        return wordobj[b] - wordobj[a];\n    });\n    if (!len || len === 0) {\n        return wordarr\n    }\n    return wordarr.slice(0, len)\n}\n\n/**\n * 从分词中提取热门标签\n */\nexport function jiebaToHotWords(words, len) {\n    // const words = [\"文档\", \"协同\", \"开发\", \"2022/05/25\", \"需求\", \"评审\", \"1\", \"、\", \"后台\", \"配置\", \"，\", \"可\", \"选择\", \"wps\", \"或者\", \"石墨\", \"文档\", \"2022/05/31ui\", \"评审\", \"2022/06/10\", \"开发\", \"遇到\", \"的\", \"问题\", \"1\", \"、\", \"未\", \"开启\", \"文档\", \"中台\", \"时候\", \"的\", \"提示\", \"，\", \"以及\", \"其他\", \"页面\", \"的\", \"缺省\", \"样式\", \"。\", \"2022/6/24\", \"遗留问题\", \"1\", \"、\", \"分享\", \"发送\", \"待办\", \"-\", \"已\", \"完成\", \"2\", \"、\", \"团队\", \"文档\", \"发送\", \"待办\", \"-\", \"已\", \"完成\", \"3\", \"、\", \"权限\", \"-\", \"已\", \"完成\", \"4\", \"、\", \"团队\", \"文档\", \"传\", \"fdteamid\", \"，\", \"后台\", \"做\", \"权限\", \"判断\", \"，\", \"如果\", \"不是\", \"这个\", \"团队\", \"的人\", \"，\", \"提示\", \"无\", \"权限\", \"页面\", \"-\", \"已\", \"完成\", \"5\", \"、\", \"看看\", \"能\", \"不能\", \"隐藏\", \"默认\", \"标题\", \"-todo6\", \"、\", \"excel\", \"和\", \"ppt\", \"的\", \"知识\", \"助手\", \"不\", \"做\", \"-\", \"已\", \"完成\", \"2022/7/8\", \"遗留问题\", \"1\", \"、\", \"文档\", \"和\", \"模板\", \"的\", \"拷贝\", \"、\", \"打印\", \"2\", \"、\", \"收藏夹\", \"重复\", \"收藏\", \"2022/7/19\", \"遗留问题\", \"1\", \"、\", \"文档\", \"知识\", \"助手\", \"太长加\", \"滚动条\", \"2\", \"、\", \"附件\", \"的\", \"显示\", \"与\", \"预览\", \"3\", \"、\", \"收起\", \"4\", \"、\", \"自定义\", \"confirm\", \"弹窗\", \"5\", \"、\", \"缺省\", \"页面\", \"2022/7/19\", \"待转\", \"单\", \"问题\", \"1\", \"、\", \"搜索\", \"关键字\", \"去掉\", \"2\", \"、\", \"未\", \"选中\", \"的\", \"时候\", \"按钮\", \"变成\", \"全部\", \"3\", \"、\", \"右侧\", \"滚动条\", \"、\", \"分页\", \"4\", \"、\", \"带\", \"表格\", \"收藏\", \"2022/7/20\", \"待\", \"解决问题\", \"1\", \"、\", \"excel\", \"、\", \"ppt\", \"格式\", \"时\", \"，\", \"点\", \"不\", \"开\", \"右侧\", \"工具栏\", \"图标\", \"2\", \"、\", \"段落\", \"收藏\", \"不能\", \"用\", \"3\", \"、\", \"详情\", \"页面\", \"调整\", \"4\", \"、\", \"筛选\", \"项\", \"修复\", \"5\", \"、\", \"git\", \"无法访问\", \"1\", \"、\", \"摘要\", \"、\", \"正文\", \"（\", \"正文\", \"图片\", \"）\", \"、\", \"附件\", \"2\", \"、\", \"搜索\", \"结果\", \"，\", \"状态\", \"30\", \"，\", \"有\", \"可\", \"阅读\", \"权限\", \"（\", \"确认\", \"）\", \"3\", \"、\", \"链接\", \"只\", \"展示\", \"图标\", \"放在\", \"标题\", \"右侧\", \"1\", \"、\", \"插入\", \"图片\", \"、\", \"表格\", \"2\", \"、\", \"维基\", \"目录\", \"3\", \"、\", \"搜索\", \"结果\", \"只\", \"显示\", \"文档\", \"不\", \"显示\", \"附件\", \"4\", \"、\", \"知识\", \"助手\", \"切换\", \"tab\", \"触发\", \"数据\", \"更新\"]\n    // const len = 5\n\n    const res = countWords(words, len);\n    // console.log(res)\n    return res;\n}\n\n// jiebaToHotWords()"],"mappings":"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"},"metadata":{},"sourceType":"module"}