{
	"ID": "20221126213051-t8le8nf",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"custom-cnblogs-post-id": "16928374",
		"custom-desc": "代码如下_敏感词过滤varpromiseall=checksenstivewords()_promiseallthen(function(results){consolelog(results)consolelog(consolelog(consolelog(if(results[]flag==true){tipfail({]replace(])replace()})_return_}if(results[]flag==true){tipfail({]replace(])replace()})_retur",
		"custom-slug": "dojo-uses-promise-to-implement-multiple-asynchronous-verifications",
		"custom-vuepress-slug": "docs/002.前端开发/004.dojo利用promise实现多个异步校验.md",
		"custom-wordpress-post-id": "4371",
		"icon": "1f328",
		"id": "20221126213051-t8le8nf",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20221126213068-rqsyk0m\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221126213073-23z9wke\u0026quot;,\u0026quot;scrollTop\u0026quot;:0,\u0026quot;focusId\u0026quot;:\u0026quot;20221126213068-rqsyk0m\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"tags": "promise,dojo,js",
		"title": "004.dojo利用promise实现多个异步校验",
		"updated": "20221126213316"
	},
	"Children": [
		{
			"ID": "20221126213068-rqsyk0m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221126213068-rqsyk0m",
				"updated": "20221126213316"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "代码如下："
				}
			]
		},
		{
			"ID": "20221126213069-6pqkxmg",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YXNjcmlwdA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221126213069-6pqkxmg",
				"updated": "20221126213069"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// 敏感词过滤\nvar promiseAll = checkSenstiveWords();\npromiseAll.then(function (results) {\n\t// console.log(\"results=\u003e\", results)\n\t// console.log(\"v1=\u003e\", results[0].flag);\n\t// console.log(\"v2=\u003e\", results[1].flag);\n\t// console.log(\"v3=\u003e\", results[2].flag);\n\n\tif(results[0].flag == true){\n\t\tTip.fail({\n\t\t\t\"text\": msg[\"errors.sensitive.word.warn\"]\n\t\t\t\t.replace(\"{0}\", lang[\"kmsMultidoc.kmsMultidocKnowledge.docSubject\"])\n\t\t\t\t.replace(\"{1}\", '\u003cspan style=\"color:#cc0000\"\u003e' + results[0].senWords + '\u003c/span\u003e')\n\t\t});\n\t\treturn ;\n\t}\n\tif (results[1].flag == true) {\n\t\tTip.fail({\n\t\t\t\"text\": msg[\"errors.sensitive.word.warn\"]\n\t\t\t\t.replace(\"{0}\", lang[\"kmsMultidocKnowledge.fdDescription\"])\n\t\t\t\t.replace(\"{1}\", '\u003cspan style=\"color:#cc0000\"\u003e' + results[1].senWords + '\u003c/span\u003e')\n\t\t});\n\t\treturn;\n\t}\n\tif (results[2].flag == true) {\n\t\tTip.fail({\n\t\t\t\"text\": msg[\"errors.sensitive.word.warn\"]\n\t\t\t\t.replace(\"{0}\", lang[\"kmsMultidoc.kmsMultidocKnowledge.docContent\"])\n\t\t\t\t.replace(\"{1}\", '\u003cspan style=\"color:#cc0000\"\u003e' + results[2].senWords + '\u003c/span\u003e')\n\t\t});\n\t\treturn;\n\t}\n\t\n\t// 校验成功\n\t// do something\n}, function () {\n\tTip.fail({\"text\" : lang['mui.return.failure']});\n})\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221126213070-hzhvius",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221126213070-hzhvius",
				"updated": "20221126213070"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "具体的校验方法",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221126213071-2fqyj0m",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YXNjcmlwdA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221126213071-2fqyj0m",
				"updated": "20221126213071"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "window.checkSenstiveWords = function () {\n\tvar docSubject = document.getElementsByName(\"docSubject\")[0].value;\n\tvar fdDescription = document.getElementsByName(\"fdDescription\")[0].value;\n\tvar docContent = document.getElementsByName(\"docContent\")[0].value;\n\tconsole.log(\"docSubject=\u003e\", docSubject);\n\tconsole.log(\"fdDescription=\u003e\", fdDescription);\n\tconsole.log(\"docContent=\u003e\", docContent);\n\n\tvar suburl = util.formatUrl(self.senstiveValidateUrl);\n\tvar subdata = {\"content\": encodeURIComponent(docSubject), formName: \"kmsMultidocKnowledgeForm\"};\n\tvar docSubjectPromise = request.post(suburl, {data: subdata, method: 'POST', handleAs: 'json'});\n\n\tvar desurl = util.formatUrl(self.senstiveValidateUrl);\n\tvar desdata = {\"content\": encodeURIComponent(fdDescription), formName: \"kmsMultidocKnowledgeForm\"};\n\tvar fdDescriptionPromise = request.post(desurl, {data: desdata, method: 'POST', handleAs: 'json'});\n\n\tvar conurl = util.formatUrl(self.senstiveValidateUrl);\n\tvar condata = {\"content\": encodeURIComponent(docContent), formName: \"kmsMultidocKnowledgeForm\"};\n\tvar docContentPromise = request.post(conurl, {data: condata, method: 'POST', handleAs: 'json'});\n\n\treturn all([docSubjectPromise, fdDescriptionPromise, docContentPromise])\n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221126213072-txcw8hs",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221126213072-txcw8hs",
				"updated": "20221126213072"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "import",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221126213073-23z9wke",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "amF2YXNjcmlwdA==",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221126213073-23z9wke",
				"updated": "20221126213073"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "amF2YXNjcmlwdA==",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "define([\n\t\"dojo/_base/declare\",\n\t \"mui/dialog/Tip\",\n\t \"mui/form/validate/Validation\",\n\t \"mui/i18n/i18n!:errors.sensitive.word.warn\",\n\t \"mui/i18n/i18n!kms-multidoc:kmsMultidoc\",\n\t \"dojo/topic\", \n\t \"dijit/registry\",\n\t \"dojo/query\",\n\t \"dojo/request\",\n\t \"dojo/promise/all\",\n\t \"mui/util\",\n\t], function(declare,Tip, Validation, msg, lang,topic,registry,query,request,all,util) {\n\n\treturn declare(\"kms.multidoc.edit\", null,{\n\t\tvalidateUrl:'/kms/multidoc/kms_multidoc_knowledge/kmsMultidocKnowledge.do?method=checkAddSubject\u0026fdId=!{fdId}\u0026docSubject=!{docSubject}\u0026cateId=!{cateId}',\n\n\t\tsenstiveValidateUrl:'/sys/profile/sysCommonSensitiveConfig.do?method=getIsHasSensitiveword'\n\t\n\t\t// ...\n\t\t// 其他代码\n\t});\n});\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		}
	]
}